openapi: 3.0.0
info:
  title: Harness NextGen Software Delivery Platform API Reference
  description: This is the Open Api Spec 3 for the DB Service
  contact:
    email: contact@harness.io
  version: "1.0"
servers:
- url: /
security:
- bearerAuth: []
  x-api-key: []
tags:
- name: Database Schema
  description: This contains APIs for performing CRUD operations on Database Schema
    Entity
  x-displayName: Database Schema
- name: Migration State
  description: This contains APIs for getting Migration State of Database Schema Entity
  x-displayName: Migration State
- name: Database Instance
  description: This contains APIs for performing CRUD operations on Database Instance
    Entity
  x-displayName: Database Instance
- name: Log Ingest
  description: This contains APIs for creating and retrieving database migration log
    information
  x-displayName: Log Ingest
- name: Pipeline Step
  description: This contains APIs for Pipeline Plugin Inputs
  x-displayName: Pipeline Step
- name: Deployed State
  description: This contains APIs for tracking changeSet deployment status
  x-displayName: Deployed State
paths:
  /v1/orgs/{org}/projects/{project}/dbschema/{dbschema}/instance/{dbinstance}/logs:
    post:
      tags:
      - Log Ingest
      summary: Ingest database migration logs
      description: Ingest database migration logs to update the state of the database
      operationId: v1-ingest-logs
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dbschema
        in: path
        description: Identifier of the database schema
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 128
          type: string
      - name: dbinstance
        in: path
        description: database instance unique id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: "#/components/requestBodies/LogIngestRequest"
      responses:
        "201":
          description: Response body for Log Event
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParsedLogOut"
        "400":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-internal: true
      x-stoplight:
        id: n6q91b59w1kld
  /v1/orgs/{org}/projects/{project}/dbschema/{dbschema}/instance/{dbinstance}/logs/{log}:
    get:
      tags:
      - Log Ingest
      summary: ""
      description: Retrieves the specified log event
      operationId: v1-get-dbinstance-log
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dbschema
        in: path
        description: Identifier of the database schema
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 128
          type: string
      - name: dbinstance
        in: path
        description: database instance unique id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: log
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Response body for Log Event
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParsedLogOut"
        "400":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-stoplight:
        id: 9o2dqka7km06p
  /v1/orgs/{org}/projects/{project}/dbschema:
    get:
      tags:
      - Database Schema
      summary: List database schemas
      description: List database Schemas
      operationId: v1-list-proj-db-schema
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items on each page."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          default: 10
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          the search term.
        required: false
        allowEmptyValue: true
        style: form
        explode: true
        schema:
          type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: created
          enum:
          - name
          - updated
          - created
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: DESC
          enum:
          - ASC
          - DESC
      responses:
        "200":
          description: Response body for List Database Schema
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                description: Response body for List Schema
                items:
                  $ref: "#/components/schemas/DBSchemaOut"
                x-content-type: application/json
        "400":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-internal: false
      x-stoplight:
        id: nhhnhieu7jo8u
    post:
      tags:
      - Database Schema
      summary: Create a database schema
      description: Create a database schema
      operationId: v1-create-proj-db-schema
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: "#/components/requestBodies/DBSchemaCreateRequest"
      responses:
        "201":
          description: Response body for Database Schema
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DBSchemaOut"
        "400":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-stoplight:
        id: 1ip5gikvmqezd
  /v1/orgs/{org}/projects/{project}/dbschema/{dbschema}/migrationstate:
    post:
      tags:
      - Migration State
      summary: Migration state of a schema
      description: Migration state of a schema
      operationId: v1-migration-state-proj-db-schema
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dbschema
        in: path
        description: Identifier of the database schema
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items on each page."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          default: 10
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          the search term.
        required: false
        allowEmptyValue: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        $ref: "#/components/requestBodies/MigrationStateGetRequest"
      responses:
        "200":
          description: Response body for migration state of a schema
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MigrationStateOut"
        "400":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-internal: false
      x-stoplight:
        id: esgkki234aa1u
  /v1/orgs/{org}/projects/{project}/dbschema/{dbschema}:
    get:
      tags:
      - Database Schema
      summary: Get a database schema
      description: Retrieves the specified database schema
      operationId: v1-get-proj-db-schema
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dbschema
        in: path
        description: Identifier of the database schema
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 128
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Response body for Database Schema
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DBSchemaOut"
        "400":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-stoplight:
        id: 78fzlqtzyti7q
    put:
      tags:
      - Database Schema
      summary: Update a database schema
      description: Update a database schema
      operationId: v1-update-proj-db-schema
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dbschema
        in: path
        description: Identifier of the database schema
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 128
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: "#/components/requestBodies/DBSchemaUpdateRequest"
      responses:
        "200":
          description: Response body for Database Schema
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DBSchemaOut"
        "400":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-stoplight:
        id: ngsm9f0c6fvq5
    delete:
      tags:
      - Database Schema
      summary: Delete a database schema
      description: Delete a database schema
      operationId: v1-delete-proj-db-schema
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dbschema
        in: path
        description: Identifier of the database schema
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 128
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The database schema was deleted successfully
        "400":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-stoplight:
        id: ek4jolzg7diy6
  /v1/orgs/{org}/projects/{project}/dbschema/{dbschema}/instance:
    post:
      tags:
      - Database Instance
      summary: Create a database instance
      description: Create a database instance
      operationId: v1-create-proj-db-schema-instance
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dbschema
        in: path
        description: Identifier of the database schema
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 128
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: "#/components/requestBodies/DBInstanceCreateRequest"
      responses:
        "201":
          description: Response body for Database Instance
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DBInstanceOut"
        "400":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-stoplight:
        id: ooxjel6o3ya8y
  /v1/orgs/{org}/projects/{project}/dbschema/{dbschema}/instancelist:
    post:
      tags:
      - Database Instance
      summary: List database instances
      description: Retrieves the specified database instances of the database schema
      operationId: v1-list-proj-db-schema-instance
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dbschema
        in: path
        description: Identifier of the database schema
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 128
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items on each page."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          default: 10
      - name: search_term
        in: query
        description: This would be used to filter resources having attributes matching
          the search term.
        required: false
        allowEmptyValue: true
        style: form
        explode: true
        schema:
          type: string
      - name: sort
        in: query
        description: Parameter on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: created
          enum:
          - name
          - updated
          - created
      - name: order
        in: query
        description: Order on the basis of which sorting is done.
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: DESC
          enum:
          - ASC
          - DESC
      requestBody:
        $ref: "#/components/requestBodies/DBInstanceFilterRequest"
      responses:
        "200":
          description: Response body for List Database Schema
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                description: Response body for List Schema
                items:
                  $ref: "#/components/schemas/DBInstanceOut"
                x-content-type: application/json
        "400":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-stoplight:
        id: uwxyv5tgwu2w9
  /v1/orgs/{org}/projects/{project}/dbschema/{dbschema}/instance/{dbinstance}:
    get:
      tags:
      - Database Instance
      summary: Get a database instance
      description: Retrieves the specified database instance
      operationId: v1-get-proj-db-schema-instance
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dbschema
        in: path
        description: Identifier of the database schema
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 128
          type: string
      - name: dbinstance
        in: path
        description: database instance unique id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Response body for Database Instance
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DBInstanceOut"
        "400":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-stoplight:
        id: tcua2vmx132hm
    put:
      tags:
      - Database Schema
      summary: Update a database instance
      description: Update a database instance
      operationId: v1-update-proj-db-schema-instance
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dbschema
        in: path
        description: Identifier of the database schema
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 128
          type: string
      - name: dbinstance
        in: path
        description: database instance unique id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: "#/components/requestBodies/DBInstanceUpdateRequest"
      responses:
        "200":
          description: Response body for Database Instance
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DBInstanceOut"
        "400":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-stoplight:
        id: e17endbbc7uha
    delete:
      tags:
      - Database Instance
      summary: Delete a database instance
      description: Delete a database instance
      operationId: v1-delete-proj-db-schema-instance
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dbschema
        in: path
        description: Identifier of the database schema
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 128
          type: string
      - name: dbinstance
        in: path
        description: database instance unique id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: The database instance was deleted successfully
        "400":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-stoplight:
        id: hx4uvpfwg2w2c
  /v1/step/plugin-inputs:
    post:
      tags:
      - Pipeline Step
      summary: CreatePluginInputs
      description: Create Plugin Inputs using Step Inputs
      operationId: create-v1-step-plugin-inputs
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: "#/components/requestBodies/PluginStepInputsRequest"
      responses:
        "200":
          description: Plugin Inputs Create Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
              examples:
                Example 1:
                  value:
                    image: plugins/drone-liquibase:latest
                    dbImages:
                      Image: plugins/drone-liquibase:latest
                      MongoImage: plugins/drone-liquibase-mongo:latest
                    downloadImages:
                      gitClone: harness/drone-git:1.5.6-rootless
                      artifactoryDownload: plugins/artifactory-download:latest
                    settings:
                      property1: string
                      property2: string
        "400":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-internal: true
  /v1/step/plugin-response:
    post:
      tags:
      - Pipeline Step
      summary: ConsumePluginResponse
      description: Consume Plugin Execution Response
      operationId: consume-v1-step-plugin-response
      parameters:
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        $ref: "#/components/requestBodies/ConsumePluginRespRequest"
      responses:
        "204":
          description: The plugin execution response was acknowledged
        "400":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-internal: true
  /v1/orgs/{org}/projects/{project}/dbschema/overview:
    get:
      tags:
      - Overview
      summary: Get overview
      description: "retrieves total dbSchemas, dbInstances and the latest 5 instances\
        \ deployed"
      operationId: v1-get-db-overview
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Get Overview Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_1"
        "400":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-stoplight:
        id: 9r5etj2feldxk
  /v1/orgs/{org}/projects/{project}/dbschema/{dbschema}/instance/{dbinstance}/deployedState:
    post:
      tags:
      - Deployed State
      summary: Get Deployed State
      description: Status of changeset deployment as part of execution with comparison
        to earlier state.
      operationId: v1-get-deployed-state
      parameters:
      - name: org
        in: path
        description: Organization identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: project
        in: path
        description: Project identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: dbschema
        in: path
        description: Identifier of the database schema
        required: true
        style: simple
        explode: false
        schema:
          maxLength: 128
          type: string
      - name: dbinstance
        in: path
        description: database instance unique id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Harness-Account
        in: header
        description: "Identifier field of the account the resource is scoped to. This\
          \ is required for Authorization methods other than the x-api-key header.\
          \ If you are using the x-api-key header, this can be skipped."
        required: false
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: "Pagination page number strategy: Specify the page number within\
          \ the paginated collection related to the number of items on each page."
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
          default: 0
      - name: limit
        in: query
        description: "Pagination: Number of items to return."
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          type: integer
          default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeployedStateInput"
      responses:
        "200":
          description: Response
          headers:
            X-Total-Elements:
              description: Total number of elements returned in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Number:
              description: Page number in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
            X-Page-Size:
              description: Maximum page size in Paginated response.
              style: simple
              explode: false
              schema:
                type: integer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeployedStateOutput"
                x-content-type: application/json
        "400":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Error Response body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      x-stoplight:
        id: 5rj6sci8d41op
components:
  schemas:
    DBSchemaIn:
      title: Database Schema Request
      required:
      - identifier
      - name
      type: object
      properties:
        identifier:
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: identifier of the database schema
          x-oapi-codegen-extra-tags:
            validate: "required,max=128"
        name:
          type: string
          description: name of the database schema
          x-oapi-codegen-extra-tags:
            validate: "required,max=128"
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
            x-oapi-codegen-extra-tags:
              validate: max=128
          description: tags attached to the database schema
          x-go-type-skip-optional-pointer: true
        changelog:
          $ref: "#/components/schemas/Changelog"
        service:
          minLength: 1
          type: string
          description: |
            harness service corresponding to database schema
          example: harness_service
        type:
          $ref: "#/components/schemas/DBSchemaType"
        changeLogScript:
          $ref: "#/components/schemas/ChangeLogScript"
      description: 'Database Schema Request '
      x-examples:
        Example 1:
          identifier: myservice_database
          name: my service database
          tags:
            region: us-east-1
          changelog:
            connector: harness_git
            location: folder/changelog.yaml
          service: harness_service
      x-stoplight:
        id: 50h201oitfzde
    DBSchemaOut:
      title: Database Schema Response
      required:
      - created
      - identifier
      - instanceCount
      - name
      - type
      type: object
      properties:
        identifier:
          type: string
          description: identifier of the database schema
        name:
          type: string
          description: name of the database schema
        created:
          type: integer
          description: epoch seconds when the database schema was created
          format: int64
        updated:
          type: integer
          description: epoch seconds when the database schema was last updated
          format: int64
        tags:
          type: object
          additionalProperties:
            type: string
          description: tags attached to the database schema
          x-go-type-skip-optional-pointer: true
        changelog:
          $ref: "#/components/schemas/Changelog"
        service:
          type: string
          description: harness service corresponding to database schema
        instanceCount:
          type: integer
          description: number of database instances corresponding to database schema
          format: int64
        schemaSourceType:
          type: string
          readOnly: true
          enum:
          - Git
          - Artifactory
          - custom
          x-stoplight:
            id: 802m1r25ghm6l
        changeLogScript:
          $ref: "#/components/schemas/ChangeLogScript"
        type:
          $ref: "#/components/schemas/DBSchemaType"
      description: Database Schema Response
      example:
        identifier: identifier
        changeLogScript:
          image: plugins/image:latest
          shell: "Sh, Bash, <+pipeline.variables.shell>"
          location: folder/changelog.yaml
          command: curl -X -o changeLog.yaml https://www.filestore.com/changeLog.yaml
        created: 0
        service: service
        instanceCount: 1
        name: name
        changelog:
          connector: harness_git
          repo: folder/changelog.yaml
          location: folder/changelog.yaml
          archivePath: archivePath
        schemaSourceType: Git
        type: Repository
        updated: 6
        tags:
          key: tags
    ParsedLogOut:
      title: Ingest Log
      required:
      - command
      - id
      - success
      type: object
      properties:
        success:
          type: boolean
        command:
          type: string
        id:
          type: string
          description: identifier of the logIngest entity
      example:
        success: true
        id: id
        command: command
      x-stoplight:
        id: 9du4yc03ok29w
    DBInstanceIn:
      title: Database Instance Request
      required:
      - connector
      - identifier
      type: object
      properties:
        identifier:
          pattern: "^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$"
          type: string
          description: identifier of the database instance
          x-oapi-codegen-extra-tags:
            validate: "required,max=128"
        name:
          type: string
          description: name of the database instance
          x-oapi-codegen-extra-tags:
            validate: "required,max=128"
        tags:
          maxProperties: 128
          type: object
          additionalProperties:
            type: string
            x-oapi-codegen-extra-tags:
              validate: max=128
          description: tags attached to the database instance
          x-go-type-skip-optional-pointer: true
        branch:
          type: string
          description: |
            branch where the instance is stored
          example: main
        connector:
          minLength: 1
          type: string
          description: DB Connector
          example: postgres-connector
        context:
          type: string
          description: Liquibase context
        liquibaseSubstituteProperties:
          type: object
          additionalProperties:
            type: string
            x-stoplight:
              id: lq57gp08jqckf
          description: properties to substitute in liquibase changelog
          x-stoplight:
            id: ylfffbh8lhcwr
      description: Database Instance Request
      x-stoplight:
        id: 1li73zi9bs5oi
    DBInstanceOut:
      title: Database Instance Response
      required:
      - connector
      - created
      - identifier
      - lastDeployedChangeSetTag
      - name
      type: object
      properties:
        identifier:
          type: string
          description: identifier of the database instance
        name:
          type: string
          description: name of the database instance
        created:
          type: integer
          description: epoch seconds when the database instance was created
          format: int64
        updated:
          type: integer
          description: epoch seconds when the database instance was last updated
          format: int64
        tags:
          type: object
          additionalProperties:
            type: string
          description: tags attached to the database instance
          x-go-type-skip-optional-pointer: true
        branch:
          type: string
          description: branch where the instance is stored
        connector:
          type: string
          description: DB Connector
        context:
          type: string
          description: Liquibase context
        lastAppliedTag:
          type: string
          description: Most recent tag applied to the database
        toOnboard:
          type: boolean
          x-stoplight:
            id: y8hnyznezal4i
        lastDeployedChangeSetTag:
          type: string
          description: Tag on last deployed changeSet
          x-stoplight:
            id: dlbvh5adtk2de
        liquibaseSubstituteProperties:
          type: object
          additionalProperties:
            type: string
            x-stoplight:
              id: szxsmt48sj6o2
          description: properties to substitute in liquibase changelog
          x-stoplight:
            id: zk5v0mxn7p4ns
      description: Database Instance Response
      example:
        identifier: identifier
        toOnboard: true
        connector: connector
        created: 0
        lastDeployedChangeSetTag: lastDeployedChangeSetTag
        name: name
        context: context
        lastAppliedTag: lastAppliedTag
        updated: 6
        branch: branch
        tags:
          key: tags
      x-stoplight:
        id: qcmn5nllz3a1z
    Error:
      title: Error Response
      required:
      - message
      type: object
      properties:
        message:
          type: string
          description: error message detail
      description: Error Response
      x-stoplight:
        id: 61cwtgnps2mpt
    Changelog:
      required:
      - connector
      - location
      type: object
      properties:
        connector:
          minLength: 1
          type: string
          description: identifier of the harness git connector
          example: harness_git
        location:
          minLength: 1
          type: string
          description: path to the change log file
          example: folder/changelog.yaml
        repo:
          minLength: 1
          type: string
          description: repo name of the git based connector when ConnectionType is
            Account
          example: folder/changelog.yaml
          x-stoplight:
            id: pw3ul0rkm8xt6
        archivePath:
          minLength: 1
          type: string
          description: path excluding the repo till the archive file
          x-stoplight:
            id: 53mqhpfa5038m
      additionalProperties: false
      description: |
        location of the changelog file containing schema changes in a git repository
      example:
        connector: harness_git
        repo: folder/changelog.yaml
        location: folder/changelog.yaml
        archivePath: archivePath
      x-stoplight:
        id: rytv7gaa34yns
    Command:
      title: Command
      minLength: 1
      type: string
      description: Type of the plugin command to run
      enum:
      - Update
      - Validate
      - History
      - Tag
      - Rollback
      - UpdateSQL
      - Clone
      - Custom
      - ParentWrapper
      x-stoplight:
        id: uwecpn48zn9y9
      x-internal: true
    CommandExecutionStatus:
      title: CommandExecutionStatus
      type: string
      enum:
      - IN_PROGRESS
      - SUCCESS
      - FAILURE
      - CANCELLED
      x-stoplight:
        id: uo7v8vnfcdljb
    MigrationStateOut:
      title: MigrationStateOut
      required:
      - schema
      type: object
      properties:
        schema:
          type: string
          description: Identifier of the Schema
          x-stoplight:
            id: c2cmn4x96fces
        changeSets:
          type: array
          items:
            $ref: "#/components/schemas/MigrationStateChangeSet"
          x-stoplight:
            id: nur8lhmmq4k80
        instances:
          type: array
          items:
            $ref: "#/components/schemas/InstanceDetail"
          x-stoplight:
            id: c4j467g3ps0hq
      description: Change Set deployment info for a schema
      example:
        schema: schema
        instances:
        - identifier: identifier
          name: name
        - identifier: identifier
          name: name
        changeSets:
        - fileName: fileName
          synced: false
          instances:
          - instance: instance
            error: error
            updated: 0
            status: Rolled_Back
          - instance: instance
            error: error
            updated: 0
            status: Rolled_Back
          author: author
          updated: 6
          changeSet: changeSet
        - fileName: fileName
          synced: false
          instances:
          - instance: instance
            error: error
            updated: 0
            status: Rolled_Back
          - instance: instance
            error: error
            updated: 0
            status: Rolled_Back
          author: author
          updated: 6
          changeSet: changeSet
      x-stoplight:
        id: vvx7j4u21jjs5
    MigrationStateInstance:
      title: MigrationStateInstance
      required:
      - instance
      - status
      type: object
      properties:
        instance:
          type: string
          description: Identfier of the instance
          x-stoplight:
            id: 0v28kt08qg9bv
        status:
          $ref: "#/components/schemas/ChangeSetDeploymentStatus"
        updated:
          type: integer
          description: 'Time of last Change Set Deployment/Rollback attempt '
          format: int64
          x-stoplight:
            id: 67g7rn5rj6k6y
        error:
          type: string
          x-stoplight:
            id: lwtp6ijz0wb0y
      description: Change Set Deployment info of instance
      example:
        instance: instance
        error: error
        updated: 0
        status: Rolled_Back
      x-stoplight:
        id: 0tdlaexf41tyg
    MigrationStateChangeSet:
      title: MigrationStateChangeSet
      required:
      - author
      - changeSet
      - fileName
      - instances
      - synced
      - updated
      type: object
      properties:
        changeSet:
          type: string
          description: Identifier of the Change Set
          x-stoplight:
            id: 44ec50vd5krrf
        synced:
          type: boolean
          description: If Change Set is successfully deployed to all instances
          default: false
          x-stoplight:
            id: fwvilhcjrnzuk
        instances:
          type: array
          items:
            $ref: "#/components/schemas/MigrationStateInstance"
          x-stoplight:
            id: k3xi8j4pkqn48
        updated:
          type: integer
          format: int64
          x-stoplight:
            id: 3pq420g29khfg
        author:
          type: string
          x-stoplight:
            id: mob4f4s0lovhs
        fileName:
          type: string
          x-stoplight:
            id: 31qx3sb0zigel
      description: Deployment info of Change Sets across instances
      example:
        fileName: fileName
        synced: false
        instances:
        - instance: instance
          error: error
          updated: 0
          status: Rolled_Back
        - instance: instance
          error: error
          updated: 0
          status: Rolled_Back
        author: author
        updated: 6
        changeSet: changeSet
      x-stoplight:
        id: lu7ke7g87jfq3
    MigrationStateIn:
      title: MigrationStateIn
      type: object
      properties:
        instanceFilter:
          $ref: "#/components/schemas/MigrationStateInstanceIn"
      description: Get migration state request input
      x-stoplight:
        id: h52h1mz8ooyrq
    ChangeSetDeploymentStatus:
      title: ChangeSetDeploymentStatus
      type: string
      description: Status of change set deployment
      enum:
      - Rolled_Back
      - Successfully_Deployed
      - Not_Deployed
      - Deployment_Failed
      x-stoplight:
        id: f4whxki5b4cp1
    OverviewResponseOutput:
      title: Overview Response Output
      required:
      - dbInstanceIdentifier
      - dbInstanceName
      - dbSchemaIdentifier
      - dbSchemaName
      - lastDeployed
      type: object
      properties:
        dbSchemaIdentifier:
          type: string
          x-stoplight:
            id: armfitbm4jksk
        dbSchemaName:
          type: string
          x-stoplight:
            id: 0dy50a77d4uwj
        dbInstanceIdentifier:
          type: string
          x-stoplight:
            id: ro2tbyjw4ret9
        dbInstanceName:
          type: string
          x-stoplight:
            id: rfhtocn7bxq4e
        lastDeployed:
          type: integer
          format: int64
          x-stoplight:
            id: o071rdrf2o8px
      example:
        dbSchemaIdentifier: dbSchemaIdentifier
        dbInstanceIdentifier: dbInstanceIdentifier
        dbInstanceName: dbInstanceName
        dbSchemaName: dbSchemaName
        lastDeployed: 0
      x-stoplight:
        id: rf7l1cm9j1d8b
    DBInstanceFilterIn:
      title: DBInstanceFilterIn
      type: object
      properties:
        filterType:
          type: string
          description: "filter criteria type. Example: Equals, NotEquals"
          default: Equals
          enum:
          - Equals
          - NotEquals
          x-stoplight:
            id: wh3jb1x9a4mvl
        instanceTags:
          type: array
          description: an array on db instance key value pairs used against the filter
          items:
            $ref: "#/components/schemas/NGTag"
          x-stoplight:
            id: y26ejs0un3e5p
      description: DB Instance Filter Request
      x-stoplight:
        id: pqeg3xqjy34f4
    NGTag:
      title: NGTag
      required:
      - key
      type: object
      properties:
        key:
          type: string
          x-stoplight:
            id: t2goca5st7qs2
        value:
          type: string
          nullable: true
          x-stoplight:
            id: 2mwjdtx5vmiqo
      description: 'ng tag with key and value '
      x-stoplight:
        id: k8zieexitrnwq
    MigrationStateInstanceIn:
      title: MigrationStateInstanceIn
      type: object
      properties:
        instances:
          type: array
          items:
            type: string
            x-stoplight:
              id: u06e41dzptghg
          x-stoplight:
            id: xgfy8jpfw9mll
        sort:
          $ref: "#/components/schemas/SortInstance"
        order:
          $ref: "#/components/schemas/OrderInstance"
      description: Get migration state request instance input
      x-stoplight:
        id: 7mrokzsmxkufd
    SortInstance:
      title: SortInstance
      type: string
      description: sort for instance entity
      default: identifier
      enum:
      - name
      - updated
      - created
      - identifier
      x-stoplight:
        id: zhl6a0ksg19p2
    OrderInstance:
      title: OrderInstance
      type: string
      description: order of instance entity
      default: ASC
      enum:
      - DESC
      - ASC
      x-stoplight:
        id: l0hdqldkwdms9
    InstanceDetail:
      title: InstanceDetail
      required:
      - identifier
      - name
      type: object
      properties:
        identifier:
          type: string
          x-stoplight:
            id: 31d4qf39t64hx
        name:
          type: string
          x-stoplight:
            id: zvigh51qdhg7m
      description: Name and identifier of instance
      example:
        identifier: identifier
        name: name
      x-stoplight:
        id: b0ge7609tlr6s
    DeployedStateInput:
      title: DeployedStateInput
      required:
      - pipeline
      - planExecutionId
      - stageExecutionId
      - stepType
      type: object
      properties:
        planExecutionId:
          type: string
          x-stoplight:
            id: sg8bjjivonl2n
        stageExecutionId:
          type: string
          x-stoplight:
            id: uyjy3losyw3wv
        stepType:
          $ref: "#/components/schemas/DBStepType"
        pipeline:
          type: string
          description: identifier of the pipeline
          x-stoplight:
            id: 8qs6o89je9q7t
        startTime:
          type: integer
          description: start time of step execution
          format: int64
          default: 0
          x-stoplight:
            id: ycpp05a282ivu
      description: Input for getting execution deployed states
      x-stoplight:
        id: vfiwroxnuheqj
    DeployedStateOutput:
      title: DeployedStateOutput
      required:
      - author
      - changeSetId
      - command
      - deployedInCurrentExecution
      - fileName
      - metadata
      - status
      type: object
      properties:
        status:
          $ref: "#/components/schemas/CommandExecutionStatus"
        changeSetId:
          type: string
          x-stoplight:
            id: x47961ux78m1z
        author:
          type: string
          x-stoplight:
            id: 929dnscx95ypb
        fileName:
          type: string
          x-stoplight:
            id: t5k0ya5j14ek5
        deployedAt:
          type: integer
          format: int64
          x-stoplight:
            id: 5e34nn5l71tit
        tag:
          type: string
          x-stoplight:
            id: eg643qgsnus6y
        command:
          $ref: "#/components/schemas/Command"
        metadata:
          $ref: "#/components/schemas/ExecutionMetadata"
        deployedInCurrentExecution:
          type: boolean
          description: if changeset run as part of current step execution
          x-stoplight:
            id: hvppxpin4swwy
      description: The status of changeset deployment
      example:
        fileName: fileName
        metadata:
          pipeline: pipeline
          stageExecutionId: stageExecutionId
          planExecutionId: planExecutionId
        author: author
        deployedInCurrentExecution: true
        tag: tag
        deployedAt: 0
        command: Update
        status: IN_PROGRESS
        changeSetId: changeSetId
      x-stoplight:
        id: qa93jh433xexc
    DBStepType:
      title: DBStepType
      type: string
      enum:
      - DBSchemaApply
      x-stoplight:
        id: ookg93k67z8hz
    ExecutionMetadata:
      title: ExecutionMetadata
      required:
      - pipeline
      - planExecutionId
      - stageExecutionId
      type: object
      properties:
        pipeline:
          type: string
          x-stoplight:
            id: 5k3ff780hrran
        planExecutionId:
          type: string
          x-stoplight:
            id: q74ihd08grz1n
        stageExecutionId:
          type: string
          x-stoplight:
            id: m9yhkxclgnwn2
      description: Properties related to pipeline execution
      example:
        pipeline: pipeline
        stageExecutionId: stageExecutionId
        planExecutionId: planExecutionId
      x-stoplight:
        id: tkbzev2tuyv9j
    inline_response_200:
      type: object
      properties:
        image:
          type: string
        dbImages:
          type: object
        downloadImages:
          type: object
        settings:
          type: object
          additionalProperties:
            type: string
        defaultConfigs:
          type: object
          additionalProperties:
            type: string
        schema:
          $ref: "#/components/schemas/DBSchemaOut"
        instance:
          $ref: "#/components/schemas/DBInstanceOut"
        propertiesResult:
          type: object
          additionalProperties:
            type: string
            x-stoplight:
              id: u4r7r5h1vr7wg
          x-stoplight:
            id: fyjz8vfzb4jcs
      example:
        propertiesResult:
          key: propertiesResult
        image: image
        dbImages: {}
        settings:
          key: settings
        downloadImages: {}
        instance:
          identifier: identifier
          toOnboard: true
          connector: connector
          created: 0
          lastDeployedChangeSetTag: lastDeployedChangeSetTag
          name: name
          context: context
          lastAppliedTag: lastAppliedTag
          updated: 6
          branch: branch
          tags:
            key: tags
        defaultConfigs:
          key: defaultConfigs
    inline_response_200_1:
      required:
      - dbInstanceCount
      - dbSchemaCount
      type: object
      properties:
        recentDeployments:
          maxItems: 5
          type: array
          items:
            $ref: "#/components/schemas/OverviewResponseOutput"
          x-stoplight:
            id: a3qanidk29h47
        dbInstanceCount:
          type: integer
          x-stoplight:
            id: e5je7p05bgy6e
        dbSchemaCount:
          type: integer
          x-stoplight:
            id: vl4i8hl01jg9t
      example:
        dbSchemaCount: 1
        dbInstanceCount: 6
        recentDeployments:
        - dbSchemaIdentifier: dbSchemaIdentifier
          dbInstanceIdentifier: dbInstanceIdentifier
          dbInstanceName: dbInstanceName
          dbSchemaName: dbSchemaName
          lastDeployed: 0
        - dbSchemaIdentifier: dbSchemaIdentifier
          dbInstanceIdentifier: dbInstanceIdentifier
          dbInstanceName: dbInstanceName
          dbSchemaName: dbSchemaName
          lastDeployed: 0
        - dbSchemaIdentifier: dbSchemaIdentifier
          dbInstanceIdentifier: dbInstanceIdentifier
          dbInstanceName: dbInstanceName
          dbSchemaName: dbSchemaName
          lastDeployed: 0
        - dbSchemaIdentifier: dbSchemaIdentifier
          dbInstanceIdentifier: dbInstanceIdentifier
          dbInstanceName: dbInstanceName
          dbSchemaName: dbSchemaName
          lastDeployed: 0
        - dbSchemaIdentifier: dbSchemaIdentifier
          dbInstanceIdentifier: dbInstanceIdentifier
          dbInstanceName: dbInstanceName
          dbSchemaName: dbSchemaName
          lastDeployed: 0
    ChangeLogScript:
      title: ChangeLogScript
      required:
      - command
      - image
      - location
      - shell
      type: object
      properties:
        image:
          minLength: 1
          type: string
          description: The fully-qualified name (FQN) of the image
          example: plugins/image:latest
          x-stoplight:
            id: rle73dx5q6cq7
        command:
          type: string
          description: command script used to download the changelog file
          example: curl -X -o changeLog.yaml https://www.filestore.com/changeLog.yaml
          x-stoplight:
            id: 1bl2w7wf6exlr
        shell:
          type: string
          description: shell type
          example: "Sh, Bash, <+pipeline.variables.shell>"
          x-stoplight:
            id: t5zcqpt6l784x
        location:
          type: string
          description: location of the changelog file
          example: folder/changelog.yaml
          x-stoplight:
            id: sn916ihq297p3
      description: if schemaType is Script location of the changelog file after using
        a custom script to download
      example:
        image: plugins/image:latest
        shell: "Sh, Bash, <+pipeline.variables.shell>"
        location: folder/changelog.yaml
        command: curl -X -o changeLog.yaml https://www.filestore.com/changeLog.yaml
      x-stoplight:
        id: lamjk17e0b56z
      x-examples: {}
    DBSchemaType:
      title: DBSchemaType
      type: string
      description: db schema type
      enum:
      - Repository
      - Script
      x-stoplight:
        id: 21ikm27shlnsf
  responses:
    DBSchemaListResponse:
      description: Response body for List Database Schema
      headers:
        X-Total-Elements:
          description: Total number of elements returned in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Number:
          description: Page number in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Size:
          description: Maximum page size in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
      content:
        application/json:
          schema:
            type: array
            description: Response body for List Schema
            items:
              $ref: "#/components/schemas/DBSchemaOut"
            x-content-type: application/json
    MigrationStateResponse:
      description: Response body for migration state of a schema
      headers:
        X-Total-Elements:
          description: Total number of elements returned in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Number:
          description: Page number in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Size:
          description: Maximum page size in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MigrationStateOut"
    DBSchemaResponse:
      description: Response body for Database Schema
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DBSchemaOut"
    DBInstanceResponse:
      description: Response body for Database Instance
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DBInstanceOut"
    ParsedLogResponse:
      description: Response body for Log Event
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ParsedLogOut"
    ErrorResponse:
      description: Error Response body
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    DBInstanceListResponse:
      description: Response body for List Database Schema
      headers:
        X-Total-Elements:
          description: Total number of elements returned in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Number:
          description: Page number in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
        X-Page-Size:
          description: Maximum page size in Paginated response.
          style: simple
          explode: false
          schema:
            type: integer
      content:
        application/json:
          schema:
            type: array
            description: Response body for List Schema
            items:
              $ref: "#/components/schemas/DBInstanceOut"
            x-content-type: application/json
    PluginInputsResponse:
      description: Plugin Inputs Create Response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200"
          examples:
            Example 1:
              value:
                image: plugins/drone-liquibase:latest
                dbImages:
                  Image: plugins/drone-liquibase:latest
                  MongoImage: plugins/drone-liquibase-mongo:latest
                downloadImages:
                  gitClone: harness/drone-git:1.5.6-rootless
                  artifactoryDownload: plugins/artifactory-download:latest
                settings:
                  property1: string
                  property2: string
    OverviewResponse:
      description: Get Overview Response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_1"
  parameters:
    Limit:
      name: limit
      in: query
      description: "Pagination: Number of items to return."
      required: false
      style: form
      explode: true
      schema:
        maximum: 100
        type: integer
        default: 10
    Sort:
      name: sort
      in: query
      description: Parameter on the basis of which sorting is done.
      required: false
      style: form
      explode: true
      schema:
        type: string
        default: created
        enum:
        - name
        - updated
        - created
    Order:
      name: order
      in: query
      description: Order on the basis of which sorting is done.
      required: false
      style: form
      explode: true
      schema:
        type: string
        default: DESC
        enum:
        - ASC
        - DESC
    PageIndex:
      name: page
      in: query
      description: "Pagination page number strategy: Specify the page number within\
        \ the paginated collection related to the number of items on each page."
      required: false
      style: form
      explode: true
      schema:
        type: integer
        format: int64
        default: 0
    SearchTerm:
      name: search_term
      in: query
      description: This would be used to filter resources having attributes matching
        the search term.
      required: false
      allowEmptyValue: true
      style: form
      explode: true
      schema:
        type: string
    OrgParam:
      name: org
      in: path
      description: Organization identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    ProjectParam:
      name: project
      in: path
      description: Project identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
    AccountHeader:
      name: Harness-Account
      in: header
      description: "Identifier field of the account the resource is scoped to. This\
        \ is required for Authorization methods other than the x-api-key header. If\
        \ you are using the x-api-key header, this can be skipped."
      required: false
      style: simple
      explode: false
      schema:
        type: string
    DBSchemaParam:
      name: dbschema
      in: path
      description: Identifier of the database schema
      required: true
      style: simple
      explode: false
      schema:
        maxLength: 128
        type: string
    DBInstanceParam:
      name: dbinstance
      in: path
      description: database instance unique id
      required: true
      style: simple
      explode: false
      schema:
        type: string
    LogParam:
      name: log
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    LogIngestRequest:
      description: Request body for log ingestion
      content:
        text/plain:
          schema:
            type: string
            description: raw text logs from plugin
      required: true
    DBSchemaCreateRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DBSchemaIn"
      required: true
    DBSchemaUpdateRequest:
      description: Database schema update request
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                maxLength: 128
                type: string
                description: |
                  name of the database schema
              tags:
                maxProperties: 128
                type: object
                additionalProperties:
                  type: string
                  x-oapi-codegen-extra-tags:
                    validate: max=128
                description: Database Schema tags
              changelog:
                type: object
                properties:
                  connector:
                    type: string
                    description: identifier of the harness git connector
                    example: harness_git
                  location:
                    type: string
                    description: path to the change log file
                    example: folder/changelog.yaml
                  repo:
                    type: string
                    description: repo name of the git based connector when ConnectionType
                      is Account
                    x-stoplight:
                      id: jpl7puzto8jfo
                  archivePath:
                    type: string
                    description: path excluding the repo till the archive file
                    x-stoplight:
                      id: lmyqjd54oln7q
                additionalProperties: false
                description: |
                  location of the changelog file containing schema changes in a git repository
              service:
                type: string
                description: |
                  harness service corresponding to database schema
                example: harness_service
              type:
                $ref: "#/components/schemas/DBSchemaType"
              changeLogScript:
                type: object
                properties:
                  image:
                    type: string
                    example: plugins/image:latest
                    x-stoplight:
                      id: cv9o3n6qslm1z
                  command:
                    type: string
                    example: curl -X -o changeLog.yaml https://www.filestore.com/changeLog.yaml
                    x-stoplight:
                      id: 0wjp0e0ejveun
                  shell:
                    type: string
                    example: "Sh, Bash, <+pipeline.variables.shell>"
                    x-stoplight:
                      id: u1kw59fil84i8
                  location:
                    type: string
                    x-stoplight:
                      id: 91yj4mcke8jds
                x-stoplight:
                  id: 3g0zmfv118ub8
      required: true
    DBInstanceCreateRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DBInstanceIn"
      required: true
    DBInstanceUpdateRequest:
      description: Database instance update request
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                maxLength: 128
                type: string
                description: |
                  name of the database instance
              tags:
                maxProperties: 128
                type: object
                additionalProperties:
                  type: string
                  x-oapi-codegen-extra-tags:
                    validate: max=128
                description: Database instance tags
              branch:
                type: string
                description: branch where the instance is stored
              connector:
                type: string
                description: DB Connector
              context:
                type: string
                description: Liquibase context
              version:
                type: string
                description: version of the changelog applied to the database
              liquibaseSubstituteProperties:
                type: object
                additionalProperties:
                  type: string
                  x-stoplight:
                    id: j2at4cjqe9em3
                description: properties to substitute in liquibase changelog
                x-stoplight:
                  id: 411rxl6wqmjnm
          examples:
            example-1:
              value:
                name: string
                tags:
                  property1: string
                  property2: string
                branch: string
                connector: string
                context: string
      required: true
    PluginStepInputsRequest:
      description: Inputs to create plugin inputs
      content:
        application/json:
          schema:
            required:
            - command
            - dbInstance
            - dbSchema
            type: object
            properties:
              dbInstance:
                type: string
                description: db instance identifier
                example: myschema/prod-1-instance
              pipelineExecutionMetadata:
                required:
                - pipeline
                - planExecutionId
                - stageExecutionId
                type: object
                properties:
                  planExecutionId:
                    type: string
                    x-stoplight:
                      id: 2dzzmp165gswr
                  stageExecutionId:
                    type: string
                    x-stoplight:
                      id: 9biv5d574s7wr
                  pipeline:
                    type: string
                    x-stoplight:
                      id: j9lmbel8gikc0
                x-stoplight:
                  id: p0fia99dekvt4
              command:
                $ref: "#/components/schemas/Command"
              directory:
                type: string
              Org:
                type: string
                description: Organization identifier
              Project:
                type: string
                description: Project identifier
              dbSchema:
                type: string
                description: dbSchema reference
                x-stoplight:
                  id: saiftwb6u1v5i
              settings:
                type: object
                additionalProperties:
                  type: string
                  x-stoplight:
                    id: zqkdd4n7n4nay
                description: Key value mapping of user input plugin settings
                x-stoplight:
                  id: f7g438c5t4whg
              properties:
                type: object
                additionalProperties:
                  type: string
                  x-stoplight:
                    id: ana2k0b6a90wb
                description: key value pair for properties which help decide response
                x-stoplight:
                  id: j7t40kp0dulaf
              customCommand:
                type: string
                description: "when pluginCommand type is Custom, customCommand is\
                  \ considered which is any string provided by the user"
                x-stoplight:
                  id: jjz90v9xyk450
              excludeChangeLogFile:
                type: boolean
                description: "if changeLogFile is required or not for LiquibaseCommand\
                  \ step. If true, then dbops-clone will not happen and changeLog\
                  \ is not passed in the settings."
                default: false
                x-stoplight:
                  id: z5xwt0vstng3h
          examples:
            Example 1:
              value:
                dbInstance: prod-1-instance
                dbSchema: myschema
                tag: tag1
                directory: myDir
                metadata:
                  pipeline: pip1
                  planExecutionId: planExec1
                  stageExecutionId: stageExec1
                command: Update
      required: true
    ConsumePluginRespRequest:
      content:
        application/json:
          schema:
            required:
            - command
            - data
            - dbInstance
            - dbSchema
            - logs
            - org
            - pipeline
            - planExecutionId
            - project
            - stageExecutionId
            - status
            type: object
            properties:
              org:
                type: string
                description: Organization identifier
              project:
                type: string
                description: Project identifier
              dbSchema:
                type: string
                x-stoplight:
                  id: 9dipu2aap5uz2
              dbInstance:
                type: string
                x-stoplight:
                  id: 3ddzm85isheyg
              logs:
                type: string
                x-stoplight:
                  id: 8lr1r6lycw0fj
              status:
                $ref: "#/components/schemas/CommandExecutionStatus"
              data:
                type: object
                description: Data associated with command execution
                x-stoplight:
                  id: x106nmejwdkgl
              command:
                $ref: "#/components/schemas/Command"
              pipeline:
                type: string
                description: Identifier of the pipeline
                x-stoplight:
                  id: 681af9f5ux915
              planExecutionId:
                type: string
                description: ExecutionId of the pipeline executed
                x-stoplight:
                  id: 1k0q9xpfkoug5
              stageExecutionId:
                type: string
                description: ExecutionId of the stage executed
                x-stoplight:
                  id: 3xilysg54w5bw
              parentStepType:
                type: string
                x-stoplight:
                  id: bwner6khhs78u
          examples:
            Example 1:
              value:
                org: myorg
                project: myproject
                dbSchema: myschema
                dbInstance: myinstance
                logs: Starting Liquibase at...
                status: IN_PROGRESS
                pipeline: pip1
                planExecutionId: pipExec1
                stageExecutionId: stageExec1
                data:
                  tag: "1.0"
                command: Update
    MigrationStateGetRequest:
      description: Inputs to get migration state of schema
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MigrationStateIn"
    DBInstanceFilterRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/DBInstanceFilterIn"
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
    x-api-key:
      type: apiKey
      name: x-api-key
      in: header
x-stoplight:
  id: gylze1ecaaksn
