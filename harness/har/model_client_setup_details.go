/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ClientSetupDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientSetupDetails{}

// ClientSetupDetails Client Setup Details
type ClientSetupDetails struct {
	MainHeader string `json:"mainHeader"`
	SecHeader string `json:"secHeader"`
	Sections []ClientSetupSection `json:"sections"`
}

type _ClientSetupDetails ClientSetupDetails

// NewClientSetupDetails instantiates a new ClientSetupDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientSetupDetails(mainHeader string, secHeader string, sections []ClientSetupSection) *ClientSetupDetails {
	this := ClientSetupDetails{}
	this.MainHeader = mainHeader
	this.SecHeader = secHeader
	this.Sections = sections
	return &this
}

// NewClientSetupDetailsWithDefaults instantiates a new ClientSetupDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientSetupDetailsWithDefaults() *ClientSetupDetails {
	this := ClientSetupDetails{}
	return &this
}

// GetMainHeader returns the MainHeader field value
func (o *ClientSetupDetails) GetMainHeader() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MainHeader
}

// GetMainHeaderOk returns a tuple with the MainHeader field value
// and a boolean to check if the value has been set.
func (o *ClientSetupDetails) GetMainHeaderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MainHeader, true
}

// SetMainHeader sets field value
func (o *ClientSetupDetails) SetMainHeader(v string) {
	o.MainHeader = v
}

// GetSecHeader returns the SecHeader field value
func (o *ClientSetupDetails) GetSecHeader() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecHeader
}

// GetSecHeaderOk returns a tuple with the SecHeader field value
// and a boolean to check if the value has been set.
func (o *ClientSetupDetails) GetSecHeaderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecHeader, true
}

// SetSecHeader sets field value
func (o *ClientSetupDetails) SetSecHeader(v string) {
	o.SecHeader = v
}

// GetSections returns the Sections field value
func (o *ClientSetupDetails) GetSections() []ClientSetupSection {
	if o == nil {
		var ret []ClientSetupSection
		return ret
	}

	return o.Sections
}

// GetSectionsOk returns a tuple with the Sections field value
// and a boolean to check if the value has been set.
func (o *ClientSetupDetails) GetSectionsOk() ([]ClientSetupSection, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sections, true
}

// SetSections sets field value
func (o *ClientSetupDetails) SetSections(v []ClientSetupSection) {
	o.Sections = v
}

func (o ClientSetupDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientSetupDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mainHeader"] = o.MainHeader
	toSerialize["secHeader"] = o.SecHeader
	toSerialize["sections"] = o.Sections
	return toSerialize, nil
}

func (o *ClientSetupDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"mainHeader",
		"secHeader",
		"sections",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClientSetupDetails := _ClientSetupDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varClientSetupDetails)

	if err != nil {
		return err
	}

	*o = ClientSetupDetails(varClientSetupDetails)

	return err
}

type NullableClientSetupDetails struct {
	value *ClientSetupDetails
	isSet bool
}

func (v NullableClientSetupDetails) Get() *ClientSetupDetails {
	return v.value
}

func (v *NullableClientSetupDetails) Set(val *ClientSetupDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableClientSetupDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableClientSetupDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientSetupDetails(val *ClientSetupDetails) *NullableClientSetupDetails {
	return &NullableClientSetupDetails{value: val, isSet: true}
}

func (v NullableClientSetupDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientSetupDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


