/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
	"fmt"
)

// WebhookExecResult refers to webhook execution
type WebhookExecResult string

// List of WebhookExecResult
const (
	SUCCESS WebhookExecResult = "SUCCESS"
	RETRIABLE_ERROR WebhookExecResult = "RETRIABLE_ERROR"
	FATAL_ERROR WebhookExecResult = "FATAL_ERROR"
)

// All allowed values of WebhookExecResult enum
var AllowedWebhookExecResultEnumValues = []WebhookExecResult{
	"SUCCESS",
	"RETRIABLE_ERROR",
	"FATAL_ERROR",
}

func (v *WebhookExecResult) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WebhookExecResult(value)
	for _, existing := range AllowedWebhookExecResultEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid WebhookExecResult", value)
}

// NewWebhookExecResultFromValue returns a pointer to a valid WebhookExecResult
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWebhookExecResultFromValue(v string) (*WebhookExecResult, error) {
	ev := WebhookExecResult(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WebhookExecResult: valid values are %v", v, AllowedWebhookExecResultEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WebhookExecResult) IsValid() bool {
	for _, existing := range AllowedWebhookExecResultEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WebhookExecResult value
func (v WebhookExecResult) Ptr() *WebhookExecResult {
	return &v
}

type NullableWebhookExecResult struct {
	value *WebhookExecResult
	isSet bool
}

func (v NullableWebhookExecResult) Get() *WebhookExecResult {
	return v.value
}

func (v *NullableWebhookExecResult) Set(val *WebhookExecResult) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookExecResult) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookExecResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookExecResult(val *WebhookExecResult) *NullableWebhookExecResult {
	return &NullableWebhookExecResult{value: val, isSet: true}
}

func (v NullableWebhookExecResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookExecResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

