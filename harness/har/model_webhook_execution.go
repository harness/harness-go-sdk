/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
)

// checks if the WebhookExecution type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookExecution{}

// WebhookExecution Harness Regstries Webhook Execution
type WebhookExecution struct {
	Created *int64 `json:"created,omitempty"`
	Duration *int64 `json:"duration,omitempty"`
	Error *string `json:"error,omitempty"`
	Id *int64 `json:"id,omitempty"`
	Request *WebhookExecRequest `json:"request,omitempty"`
	Response *WebhookExecResponse `json:"response,omitempty"`
	Result *WebhookExecResult `json:"result,omitempty"`
	RetriggerOf *int64 `json:"retriggerOf,omitempty"`
	Retriggerable *bool `json:"retriggerable,omitempty"`
	TriggerType *Trigger `json:"triggerType,omitempty"`
	WebhookId *int64 `json:"webhookId,omitempty"`
}

// NewWebhookExecution instantiates a new WebhookExecution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookExecution() *WebhookExecution {
	this := WebhookExecution{}
	return &this
}

// NewWebhookExecutionWithDefaults instantiates a new WebhookExecution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookExecutionWithDefaults() *WebhookExecution {
	this := WebhookExecution{}
	return &this
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *WebhookExecution) GetCreated() int64 {
	if o == nil || IsNil(o.Created) {
		var ret int64
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookExecution) GetCreatedOk() (*int64, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *WebhookExecution) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given int64 and assigns it to the Created field.
func (o *WebhookExecution) SetCreated(v int64) {
	o.Created = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *WebhookExecution) GetDuration() int64 {
	if o == nil || IsNil(o.Duration) {
		var ret int64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookExecution) GetDurationOk() (*int64, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *WebhookExecution) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int64 and assigns it to the Duration field.
func (o *WebhookExecution) SetDuration(v int64) {
	o.Duration = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *WebhookExecution) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookExecution) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *WebhookExecution) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *WebhookExecution) SetError(v string) {
	o.Error = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WebhookExecution) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookExecution) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WebhookExecution) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *WebhookExecution) SetId(v int64) {
	o.Id = &v
}

// GetRequest returns the Request field value if set, zero value otherwise.
func (o *WebhookExecution) GetRequest() WebhookExecRequest {
	if o == nil || IsNil(o.Request) {
		var ret WebhookExecRequest
		return ret
	}
	return *o.Request
}

// GetRequestOk returns a tuple with the Request field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookExecution) GetRequestOk() (*WebhookExecRequest, bool) {
	if o == nil || IsNil(o.Request) {
		return nil, false
	}
	return o.Request, true
}

// HasRequest returns a boolean if a field has been set.
func (o *WebhookExecution) HasRequest() bool {
	if o != nil && !IsNil(o.Request) {
		return true
	}

	return false
}

// SetRequest gets a reference to the given WebhookExecRequest and assigns it to the Request field.
func (o *WebhookExecution) SetRequest(v WebhookExecRequest) {
	o.Request = &v
}

// GetResponse returns the Response field value if set, zero value otherwise.
func (o *WebhookExecution) GetResponse() WebhookExecResponse {
	if o == nil || IsNil(o.Response) {
		var ret WebhookExecResponse
		return ret
	}
	return *o.Response
}

// GetResponseOk returns a tuple with the Response field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookExecution) GetResponseOk() (*WebhookExecResponse, bool) {
	if o == nil || IsNil(o.Response) {
		return nil, false
	}
	return o.Response, true
}

// HasResponse returns a boolean if a field has been set.
func (o *WebhookExecution) HasResponse() bool {
	if o != nil && !IsNil(o.Response) {
		return true
	}

	return false
}

// SetResponse gets a reference to the given WebhookExecResponse and assigns it to the Response field.
func (o *WebhookExecution) SetResponse(v WebhookExecResponse) {
	o.Response = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *WebhookExecution) GetResult() WebhookExecResult {
	if o == nil || IsNil(o.Result) {
		var ret WebhookExecResult
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookExecution) GetResultOk() (*WebhookExecResult, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *WebhookExecution) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given WebhookExecResult and assigns it to the Result field.
func (o *WebhookExecution) SetResult(v WebhookExecResult) {
	o.Result = &v
}

// GetRetriggerOf returns the RetriggerOf field value if set, zero value otherwise.
func (o *WebhookExecution) GetRetriggerOf() int64 {
	if o == nil || IsNil(o.RetriggerOf) {
		var ret int64
		return ret
	}
	return *o.RetriggerOf
}

// GetRetriggerOfOk returns a tuple with the RetriggerOf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookExecution) GetRetriggerOfOk() (*int64, bool) {
	if o == nil || IsNil(o.RetriggerOf) {
		return nil, false
	}
	return o.RetriggerOf, true
}

// HasRetriggerOf returns a boolean if a field has been set.
func (o *WebhookExecution) HasRetriggerOf() bool {
	if o != nil && !IsNil(o.RetriggerOf) {
		return true
	}

	return false
}

// SetRetriggerOf gets a reference to the given int64 and assigns it to the RetriggerOf field.
func (o *WebhookExecution) SetRetriggerOf(v int64) {
	o.RetriggerOf = &v
}

// GetRetriggerable returns the Retriggerable field value if set, zero value otherwise.
func (o *WebhookExecution) GetRetriggerable() bool {
	if o == nil || IsNil(o.Retriggerable) {
		var ret bool
		return ret
	}
	return *o.Retriggerable
}

// GetRetriggerableOk returns a tuple with the Retriggerable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookExecution) GetRetriggerableOk() (*bool, bool) {
	if o == nil || IsNil(o.Retriggerable) {
		return nil, false
	}
	return o.Retriggerable, true
}

// HasRetriggerable returns a boolean if a field has been set.
func (o *WebhookExecution) HasRetriggerable() bool {
	if o != nil && !IsNil(o.Retriggerable) {
		return true
	}

	return false
}

// SetRetriggerable gets a reference to the given bool and assigns it to the Retriggerable field.
func (o *WebhookExecution) SetRetriggerable(v bool) {
	o.Retriggerable = &v
}

// GetTriggerType returns the TriggerType field value if set, zero value otherwise.
func (o *WebhookExecution) GetTriggerType() Trigger {
	if o == nil || IsNil(o.TriggerType) {
		var ret Trigger
		return ret
	}
	return *o.TriggerType
}

// GetTriggerTypeOk returns a tuple with the TriggerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookExecution) GetTriggerTypeOk() (*Trigger, bool) {
	if o == nil || IsNil(o.TriggerType) {
		return nil, false
	}
	return o.TriggerType, true
}

// HasTriggerType returns a boolean if a field has been set.
func (o *WebhookExecution) HasTriggerType() bool {
	if o != nil && !IsNil(o.TriggerType) {
		return true
	}

	return false
}

// SetTriggerType gets a reference to the given Trigger and assigns it to the TriggerType field.
func (o *WebhookExecution) SetTriggerType(v Trigger) {
	o.TriggerType = &v
}

// GetWebhookId returns the WebhookId field value if set, zero value otherwise.
func (o *WebhookExecution) GetWebhookId() int64 {
	if o == nil || IsNil(o.WebhookId) {
		var ret int64
		return ret
	}
	return *o.WebhookId
}

// GetWebhookIdOk returns a tuple with the WebhookId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookExecution) GetWebhookIdOk() (*int64, bool) {
	if o == nil || IsNil(o.WebhookId) {
		return nil, false
	}
	return o.WebhookId, true
}

// HasWebhookId returns a boolean if a field has been set.
func (o *WebhookExecution) HasWebhookId() bool {
	if o != nil && !IsNil(o.WebhookId) {
		return true
	}

	return false
}

// SetWebhookId gets a reference to the given int64 and assigns it to the WebhookId field.
func (o *WebhookExecution) SetWebhookId(v int64) {
	o.WebhookId = &v
}

func (o WebhookExecution) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookExecution) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Request) {
		toSerialize["request"] = o.Request
	}
	if !IsNil(o.Response) {
		toSerialize["response"] = o.Response
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.RetriggerOf) {
		toSerialize["retriggerOf"] = o.RetriggerOf
	}
	if !IsNil(o.Retriggerable) {
		toSerialize["retriggerable"] = o.Retriggerable
	}
	if !IsNil(o.TriggerType) {
		toSerialize["triggerType"] = o.TriggerType
	}
	if !IsNil(o.WebhookId) {
		toSerialize["webhookId"] = o.WebhookId
	}
	return toSerialize, nil
}

type NullableWebhookExecution struct {
	value *WebhookExecution
	isSet bool
}

func (v NullableWebhookExecution) Get() *WebhookExecution {
	return v.value
}

func (v *NullableWebhookExecution) Set(val *WebhookExecution) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookExecution) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookExecution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookExecution(val *WebhookExecution) *NullableWebhookExecution {
	return &NullableWebhookExecution{value: val, isSet: true}
}

func (v NullableWebhookExecution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookExecution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


