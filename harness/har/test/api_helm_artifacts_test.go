/*
Harness Artifact Registry API

Testing HelmArtifactsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package har

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_har_HelmArtifactsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test HelmArtifactsAPIService GetHelmArtifactDetails", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var registryRef string
		var artifact string
		var version string

		resp, httpRes, err := apiClient.HelmArtifactsAPI.GetHelmArtifactDetails(context.Background(), registryRef, artifact, version).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test HelmArtifactsAPIService GetHelmArtifactManifest", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var registryRef string
		var artifact string
		var version string

		resp, httpRes, err := apiClient.HelmArtifactsAPI.GetHelmArtifactManifest(context.Background(), registryRef, artifact, version).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
