/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ReplicationRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicationRule{}

// ReplicationRule struct for ReplicationRule
type ReplicationRule struct {
	AllowedPatterns []string `json:"allowedPatterns"`
	BlockedPatterns []string `json:"blockedPatterns"`
	CreatedAt string `json:"createdAt"`
	Destination ReplicationRegistry `json:"destination"`
	DestinationType string `json:"destinationType"`
	Identifier string `json:"identifier"`
	ModifiedAt string `json:"modifiedAt"`
	ParentRef string `json:"parentRef"`
	Source ReplicationRegistry `json:"source"`
	SourceType string `json:"sourceType"`
}

type _ReplicationRule ReplicationRule

// NewReplicationRule instantiates a new ReplicationRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationRule(allowedPatterns []string, blockedPatterns []string, createdAt string, destination ReplicationRegistry, destinationType string, identifier string, modifiedAt string, parentRef string, source ReplicationRegistry, sourceType string) *ReplicationRule {
	this := ReplicationRule{}
	this.AllowedPatterns = allowedPatterns
	this.BlockedPatterns = blockedPatterns
	this.CreatedAt = createdAt
	this.Destination = destination
	this.DestinationType = destinationType
	this.Identifier = identifier
	this.ModifiedAt = modifiedAt
	this.ParentRef = parentRef
	this.Source = source
	this.SourceType = sourceType
	return &this
}

// NewReplicationRuleWithDefaults instantiates a new ReplicationRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationRuleWithDefaults() *ReplicationRule {
	this := ReplicationRule{}
	return &this
}

// GetAllowedPatterns returns the AllowedPatterns field value
func (o *ReplicationRule) GetAllowedPatterns() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AllowedPatterns
}

// GetAllowedPatternsOk returns a tuple with the AllowedPatterns field value
// and a boolean to check if the value has been set.
func (o *ReplicationRule) GetAllowedPatternsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowedPatterns, true
}

// SetAllowedPatterns sets field value
func (o *ReplicationRule) SetAllowedPatterns(v []string) {
	o.AllowedPatterns = v
}

// GetBlockedPatterns returns the BlockedPatterns field value
func (o *ReplicationRule) GetBlockedPatterns() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.BlockedPatterns
}

// GetBlockedPatternsOk returns a tuple with the BlockedPatterns field value
// and a boolean to check if the value has been set.
func (o *ReplicationRule) GetBlockedPatternsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BlockedPatterns, true
}

// SetBlockedPatterns sets field value
func (o *ReplicationRule) SetBlockedPatterns(v []string) {
	o.BlockedPatterns = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ReplicationRule) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ReplicationRule) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ReplicationRule) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetDestination returns the Destination field value
func (o *ReplicationRule) GetDestination() ReplicationRegistry {
	if o == nil {
		var ret ReplicationRegistry
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *ReplicationRule) GetDestinationOk() (*ReplicationRegistry, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *ReplicationRule) SetDestination(v ReplicationRegistry) {
	o.Destination = v
}

// GetDestinationType returns the DestinationType field value
func (o *ReplicationRule) GetDestinationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationType
}

// GetDestinationTypeOk returns a tuple with the DestinationType field value
// and a boolean to check if the value has been set.
func (o *ReplicationRule) GetDestinationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationType, true
}

// SetDestinationType sets field value
func (o *ReplicationRule) SetDestinationType(v string) {
	o.DestinationType = v
}

// GetIdentifier returns the Identifier field value
func (o *ReplicationRule) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *ReplicationRule) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *ReplicationRule) SetIdentifier(v string) {
	o.Identifier = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *ReplicationRule) GetModifiedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *ReplicationRule) GetModifiedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *ReplicationRule) SetModifiedAt(v string) {
	o.ModifiedAt = v
}

// GetParentRef returns the ParentRef field value
func (o *ReplicationRule) GetParentRef() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParentRef
}

// GetParentRefOk returns a tuple with the ParentRef field value
// and a boolean to check if the value has been set.
func (o *ReplicationRule) GetParentRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParentRef, true
}

// SetParentRef sets field value
func (o *ReplicationRule) SetParentRef(v string) {
	o.ParentRef = v
}

// GetSource returns the Source field value
func (o *ReplicationRule) GetSource() ReplicationRegistry {
	if o == nil {
		var ret ReplicationRegistry
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *ReplicationRule) GetSourceOk() (*ReplicationRegistry, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *ReplicationRule) SetSource(v ReplicationRegistry) {
	o.Source = v
}

// GetSourceType returns the SourceType field value
func (o *ReplicationRule) GetSourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value
// and a boolean to check if the value has been set.
func (o *ReplicationRule) GetSourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceType, true
}

// SetSourceType sets field value
func (o *ReplicationRule) SetSourceType(v string) {
	o.SourceType = v
}

func (o ReplicationRule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicationRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["allowedPatterns"] = o.AllowedPatterns
	toSerialize["blockedPatterns"] = o.BlockedPatterns
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["destination"] = o.Destination
	toSerialize["destinationType"] = o.DestinationType
	toSerialize["identifier"] = o.Identifier
	toSerialize["modifiedAt"] = o.ModifiedAt
	toSerialize["parentRef"] = o.ParentRef
	toSerialize["source"] = o.Source
	toSerialize["sourceType"] = o.SourceType
	return toSerialize, nil
}

func (o *ReplicationRule) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"allowedPatterns",
		"blockedPatterns",
		"createdAt",
		"destination",
		"destinationType",
		"identifier",
		"modifiedAt",
		"parentRef",
		"source",
		"sourceType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReplicationRule := _ReplicationRule{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varReplicationRule)

	if err != nil {
		return err
	}

	*o = ReplicationRule(varReplicationRule)

	return err
}

type NullableReplicationRule struct {
	value *ReplicationRule
	isSet bool
}

func (v NullableReplicationRule) Get() *ReplicationRule {
	return v.value
}

func (v *NullableReplicationRule) Set(val *ReplicationRule) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationRule) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationRule(val *ReplicationRule) *NullableReplicationRule {
	return &NullableReplicationRule{value: val, isSet: true}
}

func (v NullableReplicationRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


