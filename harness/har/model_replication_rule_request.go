/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ReplicationRuleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicationRuleRequest{}

// ReplicationRuleRequest struct for ReplicationRuleRequest
type ReplicationRuleRequest struct {
	AllowedPatterns []string `json:"allowedPatterns"`
	BlockedPatterns []string `json:"blockedPatterns"`
	Destination ReplicationRegistry `json:"destination"`
	DestinationType string `json:"destinationType"`
	Source ReplicationRegistry `json:"source"`
	SourceType string `json:"sourceType"`
}

type _ReplicationRuleRequest ReplicationRuleRequest

// NewReplicationRuleRequest instantiates a new ReplicationRuleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationRuleRequest(allowedPatterns []string, blockedPatterns []string, destination ReplicationRegistry, destinationType string, source ReplicationRegistry, sourceType string) *ReplicationRuleRequest {
	this := ReplicationRuleRequest{}
	this.AllowedPatterns = allowedPatterns
	this.BlockedPatterns = blockedPatterns
	this.Destination = destination
	this.DestinationType = destinationType
	this.Source = source
	this.SourceType = sourceType
	return &this
}

// NewReplicationRuleRequestWithDefaults instantiates a new ReplicationRuleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationRuleRequestWithDefaults() *ReplicationRuleRequest {
	this := ReplicationRuleRequest{}
	return &this
}

// GetAllowedPatterns returns the AllowedPatterns field value
func (o *ReplicationRuleRequest) GetAllowedPatterns() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AllowedPatterns
}

// GetAllowedPatternsOk returns a tuple with the AllowedPatterns field value
// and a boolean to check if the value has been set.
func (o *ReplicationRuleRequest) GetAllowedPatternsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowedPatterns, true
}

// SetAllowedPatterns sets field value
func (o *ReplicationRuleRequest) SetAllowedPatterns(v []string) {
	o.AllowedPatterns = v
}

// GetBlockedPatterns returns the BlockedPatterns field value
func (o *ReplicationRuleRequest) GetBlockedPatterns() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.BlockedPatterns
}

// GetBlockedPatternsOk returns a tuple with the BlockedPatterns field value
// and a boolean to check if the value has been set.
func (o *ReplicationRuleRequest) GetBlockedPatternsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BlockedPatterns, true
}

// SetBlockedPatterns sets field value
func (o *ReplicationRuleRequest) SetBlockedPatterns(v []string) {
	o.BlockedPatterns = v
}

// GetDestination returns the Destination field value
func (o *ReplicationRuleRequest) GetDestination() ReplicationRegistry {
	if o == nil {
		var ret ReplicationRegistry
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *ReplicationRuleRequest) GetDestinationOk() (*ReplicationRegistry, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *ReplicationRuleRequest) SetDestination(v ReplicationRegistry) {
	o.Destination = v
}

// GetDestinationType returns the DestinationType field value
func (o *ReplicationRuleRequest) GetDestinationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DestinationType
}

// GetDestinationTypeOk returns a tuple with the DestinationType field value
// and a boolean to check if the value has been set.
func (o *ReplicationRuleRequest) GetDestinationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DestinationType, true
}

// SetDestinationType sets field value
func (o *ReplicationRuleRequest) SetDestinationType(v string) {
	o.DestinationType = v
}

// GetSource returns the Source field value
func (o *ReplicationRuleRequest) GetSource() ReplicationRegistry {
	if o == nil {
		var ret ReplicationRegistry
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *ReplicationRuleRequest) GetSourceOk() (*ReplicationRegistry, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *ReplicationRuleRequest) SetSource(v ReplicationRegistry) {
	o.Source = v
}

// GetSourceType returns the SourceType field value
func (o *ReplicationRuleRequest) GetSourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceType
}

// GetSourceTypeOk returns a tuple with the SourceType field value
// and a boolean to check if the value has been set.
func (o *ReplicationRuleRequest) GetSourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceType, true
}

// SetSourceType sets field value
func (o *ReplicationRuleRequest) SetSourceType(v string) {
	o.SourceType = v
}

func (o ReplicationRuleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicationRuleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["allowedPatterns"] = o.AllowedPatterns
	toSerialize["blockedPatterns"] = o.BlockedPatterns
	toSerialize["destination"] = o.Destination
	toSerialize["destinationType"] = o.DestinationType
	toSerialize["source"] = o.Source
	toSerialize["sourceType"] = o.SourceType
	return toSerialize, nil
}

func (o *ReplicationRuleRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"allowedPatterns",
		"blockedPatterns",
		"destination",
		"destinationType",
		"source",
		"sourceType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varReplicationRuleRequest := _ReplicationRuleRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varReplicationRuleRequest)

	if err != nil {
		return err
	}

	*o = ReplicationRuleRequest(varReplicationRuleRequest)

	return err
}

type NullableReplicationRuleRequest struct {
	value *ReplicationRuleRequest
	isSet bool
}

func (v NullableReplicationRuleRequest) Get() *ReplicationRuleRequest {
	return v.value
}

func (v *NullableReplicationRuleRequest) Set(val *ReplicationRuleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationRuleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationRuleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationRuleRequest(val *ReplicationRuleRequest) *NullableReplicationRuleRequest {
	return &NullableReplicationRuleRequest{value: val, isSet: true}
}

func (v NullableReplicationRuleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationRuleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


