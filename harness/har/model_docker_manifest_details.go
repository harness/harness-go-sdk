/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DockerManifestDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DockerManifestDetails{}

// DockerManifestDetails Harness Artifact Layers
type DockerManifestDetails struct {
	CreatedAt *string `json:"createdAt,omitempty"`
	Digest string `json:"digest"`
	DownloadsCount *int64 `json:"downloadsCount,omitempty"`
	OsArch string `json:"osArch"`
	Size *string `json:"size,omitempty"`
	StoDetails *STODetails `json:"stoDetails,omitempty"`
	StoExecutionId *string `json:"stoExecutionId,omitempty"`
	StoPipelineId *string `json:"stoPipelineId,omitempty"`
}

type _DockerManifestDetails DockerManifestDetails

// NewDockerManifestDetails instantiates a new DockerManifestDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDockerManifestDetails(digest string, osArch string) *DockerManifestDetails {
	this := DockerManifestDetails{}
	this.Digest = digest
	this.OsArch = osArch
	return &this
}

// NewDockerManifestDetailsWithDefaults instantiates a new DockerManifestDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDockerManifestDetailsWithDefaults() *DockerManifestDetails {
	this := DockerManifestDetails{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *DockerManifestDetails) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerManifestDetails) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *DockerManifestDetails) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *DockerManifestDetails) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDigest returns the Digest field value
func (o *DockerManifestDetails) GetDigest() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Digest
}

// GetDigestOk returns a tuple with the Digest field value
// and a boolean to check if the value has been set.
func (o *DockerManifestDetails) GetDigestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Digest, true
}

// SetDigest sets field value
func (o *DockerManifestDetails) SetDigest(v string) {
	o.Digest = v
}

// GetDownloadsCount returns the DownloadsCount field value if set, zero value otherwise.
func (o *DockerManifestDetails) GetDownloadsCount() int64 {
	if o == nil || IsNil(o.DownloadsCount) {
		var ret int64
		return ret
	}
	return *o.DownloadsCount
}

// GetDownloadsCountOk returns a tuple with the DownloadsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerManifestDetails) GetDownloadsCountOk() (*int64, bool) {
	if o == nil || IsNil(o.DownloadsCount) {
		return nil, false
	}
	return o.DownloadsCount, true
}

// HasDownloadsCount returns a boolean if a field has been set.
func (o *DockerManifestDetails) HasDownloadsCount() bool {
	if o != nil && !IsNil(o.DownloadsCount) {
		return true
	}

	return false
}

// SetDownloadsCount gets a reference to the given int64 and assigns it to the DownloadsCount field.
func (o *DockerManifestDetails) SetDownloadsCount(v int64) {
	o.DownloadsCount = &v
}

// GetOsArch returns the OsArch field value
func (o *DockerManifestDetails) GetOsArch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OsArch
}

// GetOsArchOk returns a tuple with the OsArch field value
// and a boolean to check if the value has been set.
func (o *DockerManifestDetails) GetOsArchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OsArch, true
}

// SetOsArch sets field value
func (o *DockerManifestDetails) SetOsArch(v string) {
	o.OsArch = v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *DockerManifestDetails) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerManifestDetails) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *DockerManifestDetails) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *DockerManifestDetails) SetSize(v string) {
	o.Size = &v
}

// GetStoDetails returns the StoDetails field value if set, zero value otherwise.
func (o *DockerManifestDetails) GetStoDetails() STODetails {
	if o == nil || IsNil(o.StoDetails) {
		var ret STODetails
		return ret
	}
	return *o.StoDetails
}

// GetStoDetailsOk returns a tuple with the StoDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerManifestDetails) GetStoDetailsOk() (*STODetails, bool) {
	if o == nil || IsNil(o.StoDetails) {
		return nil, false
	}
	return o.StoDetails, true
}

// HasStoDetails returns a boolean if a field has been set.
func (o *DockerManifestDetails) HasStoDetails() bool {
	if o != nil && !IsNil(o.StoDetails) {
		return true
	}

	return false
}

// SetStoDetails gets a reference to the given STODetails and assigns it to the StoDetails field.
func (o *DockerManifestDetails) SetStoDetails(v STODetails) {
	o.StoDetails = &v
}

// GetStoExecutionId returns the StoExecutionId field value if set, zero value otherwise.
func (o *DockerManifestDetails) GetStoExecutionId() string {
	if o == nil || IsNil(o.StoExecutionId) {
		var ret string
		return ret
	}
	return *o.StoExecutionId
}

// GetStoExecutionIdOk returns a tuple with the StoExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerManifestDetails) GetStoExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoExecutionId) {
		return nil, false
	}
	return o.StoExecutionId, true
}

// HasStoExecutionId returns a boolean if a field has been set.
func (o *DockerManifestDetails) HasStoExecutionId() bool {
	if o != nil && !IsNil(o.StoExecutionId) {
		return true
	}

	return false
}

// SetStoExecutionId gets a reference to the given string and assigns it to the StoExecutionId field.
func (o *DockerManifestDetails) SetStoExecutionId(v string) {
	o.StoExecutionId = &v
}

// GetStoPipelineId returns the StoPipelineId field value if set, zero value otherwise.
func (o *DockerManifestDetails) GetStoPipelineId() string {
	if o == nil || IsNil(o.StoPipelineId) {
		var ret string
		return ret
	}
	return *o.StoPipelineId
}

// GetStoPipelineIdOk returns a tuple with the StoPipelineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerManifestDetails) GetStoPipelineIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoPipelineId) {
		return nil, false
	}
	return o.StoPipelineId, true
}

// HasStoPipelineId returns a boolean if a field has been set.
func (o *DockerManifestDetails) HasStoPipelineId() bool {
	if o != nil && !IsNil(o.StoPipelineId) {
		return true
	}

	return false
}

// SetStoPipelineId gets a reference to the given string and assigns it to the StoPipelineId field.
func (o *DockerManifestDetails) SetStoPipelineId(v string) {
	o.StoPipelineId = &v
}

func (o DockerManifestDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DockerManifestDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	toSerialize["digest"] = o.Digest
	if !IsNil(o.DownloadsCount) {
		toSerialize["downloadsCount"] = o.DownloadsCount
	}
	toSerialize["osArch"] = o.OsArch
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.StoDetails) {
		toSerialize["stoDetails"] = o.StoDetails
	}
	if !IsNil(o.StoExecutionId) {
		toSerialize["stoExecutionId"] = o.StoExecutionId
	}
	if !IsNil(o.StoPipelineId) {
		toSerialize["stoPipelineId"] = o.StoPipelineId
	}
	return toSerialize, nil
}

func (o *DockerManifestDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"digest",
		"osArch",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDockerManifestDetails := _DockerManifestDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDockerManifestDetails)

	if err != nil {
		return err
	}

	*o = DockerManifestDetails(varDockerManifestDetails)

	return err
}

type NullableDockerManifestDetails struct {
	value *DockerManifestDetails
	isSet bool
}

func (v NullableDockerManifestDetails) Get() *DockerManifestDetails {
	return v.value
}

func (v *NullableDockerManifestDetails) Set(val *DockerManifestDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableDockerManifestDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableDockerManifestDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDockerManifestDetails(val *DockerManifestDetails) *NullableDockerManifestDetails {
	return &NullableDockerManifestDetails{value: val, isSet: true}
}

func (v NullableDockerManifestDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDockerManifestDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


