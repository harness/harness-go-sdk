/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
)

// checks if the DockerArtifactIntegrationDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DockerArtifactIntegrationDetail{}

// DockerArtifactIntegrationDetail Docker Artifact Detail
type DockerArtifactIntegrationDetail struct {
	BuildDetails *BuildDetails `json:"buildDetails,omitempty"`
	DeploymentsDetails *DeploymentDetails `json:"deploymentsDetails,omitempty"`
	SbomDetails *SBOMDetails `json:"sbomDetails,omitempty"`
	SlsaDetails *SLSADetails `json:"slsaDetails,omitempty"`
	StoDetails *STODetails `json:"stoDetails,omitempty"`
}

// NewDockerArtifactIntegrationDetail instantiates a new DockerArtifactIntegrationDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDockerArtifactIntegrationDetail() *DockerArtifactIntegrationDetail {
	this := DockerArtifactIntegrationDetail{}
	return &this
}

// NewDockerArtifactIntegrationDetailWithDefaults instantiates a new DockerArtifactIntegrationDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDockerArtifactIntegrationDetailWithDefaults() *DockerArtifactIntegrationDetail {
	this := DockerArtifactIntegrationDetail{}
	return &this
}

// GetBuildDetails returns the BuildDetails field value if set, zero value otherwise.
func (o *DockerArtifactIntegrationDetail) GetBuildDetails() BuildDetails {
	if o == nil || IsNil(o.BuildDetails) {
		var ret BuildDetails
		return ret
	}
	return *o.BuildDetails
}

// GetBuildDetailsOk returns a tuple with the BuildDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerArtifactIntegrationDetail) GetBuildDetailsOk() (*BuildDetails, bool) {
	if o == nil || IsNil(o.BuildDetails) {
		return nil, false
	}
	return o.BuildDetails, true
}

// HasBuildDetails returns a boolean if a field has been set.
func (o *DockerArtifactIntegrationDetail) HasBuildDetails() bool {
	if o != nil && !IsNil(o.BuildDetails) {
		return true
	}

	return false
}

// SetBuildDetails gets a reference to the given BuildDetails and assigns it to the BuildDetails field.
func (o *DockerArtifactIntegrationDetail) SetBuildDetails(v BuildDetails) {
	o.BuildDetails = &v
}

// GetDeploymentsDetails returns the DeploymentsDetails field value if set, zero value otherwise.
func (o *DockerArtifactIntegrationDetail) GetDeploymentsDetails() DeploymentDetails {
	if o == nil || IsNil(o.DeploymentsDetails) {
		var ret DeploymentDetails
		return ret
	}
	return *o.DeploymentsDetails
}

// GetDeploymentsDetailsOk returns a tuple with the DeploymentsDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerArtifactIntegrationDetail) GetDeploymentsDetailsOk() (*DeploymentDetails, bool) {
	if o == nil || IsNil(o.DeploymentsDetails) {
		return nil, false
	}
	return o.DeploymentsDetails, true
}

// HasDeploymentsDetails returns a boolean if a field has been set.
func (o *DockerArtifactIntegrationDetail) HasDeploymentsDetails() bool {
	if o != nil && !IsNil(o.DeploymentsDetails) {
		return true
	}

	return false
}

// SetDeploymentsDetails gets a reference to the given DeploymentDetails and assigns it to the DeploymentsDetails field.
func (o *DockerArtifactIntegrationDetail) SetDeploymentsDetails(v DeploymentDetails) {
	o.DeploymentsDetails = &v
}

// GetSbomDetails returns the SbomDetails field value if set, zero value otherwise.
func (o *DockerArtifactIntegrationDetail) GetSbomDetails() SBOMDetails {
	if o == nil || IsNil(o.SbomDetails) {
		var ret SBOMDetails
		return ret
	}
	return *o.SbomDetails
}

// GetSbomDetailsOk returns a tuple with the SbomDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerArtifactIntegrationDetail) GetSbomDetailsOk() (*SBOMDetails, bool) {
	if o == nil || IsNil(o.SbomDetails) {
		return nil, false
	}
	return o.SbomDetails, true
}

// HasSbomDetails returns a boolean if a field has been set.
func (o *DockerArtifactIntegrationDetail) HasSbomDetails() bool {
	if o != nil && !IsNil(o.SbomDetails) {
		return true
	}

	return false
}

// SetSbomDetails gets a reference to the given SBOMDetails and assigns it to the SbomDetails field.
func (o *DockerArtifactIntegrationDetail) SetSbomDetails(v SBOMDetails) {
	o.SbomDetails = &v
}

// GetSlsaDetails returns the SlsaDetails field value if set, zero value otherwise.
func (o *DockerArtifactIntegrationDetail) GetSlsaDetails() SLSADetails {
	if o == nil || IsNil(o.SlsaDetails) {
		var ret SLSADetails
		return ret
	}
	return *o.SlsaDetails
}

// GetSlsaDetailsOk returns a tuple with the SlsaDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerArtifactIntegrationDetail) GetSlsaDetailsOk() (*SLSADetails, bool) {
	if o == nil || IsNil(o.SlsaDetails) {
		return nil, false
	}
	return o.SlsaDetails, true
}

// HasSlsaDetails returns a boolean if a field has been set.
func (o *DockerArtifactIntegrationDetail) HasSlsaDetails() bool {
	if o != nil && !IsNil(o.SlsaDetails) {
		return true
	}

	return false
}

// SetSlsaDetails gets a reference to the given SLSADetails and assigns it to the SlsaDetails field.
func (o *DockerArtifactIntegrationDetail) SetSlsaDetails(v SLSADetails) {
	o.SlsaDetails = &v
}

// GetStoDetails returns the StoDetails field value if set, zero value otherwise.
func (o *DockerArtifactIntegrationDetail) GetStoDetails() STODetails {
	if o == nil || IsNil(o.StoDetails) {
		var ret STODetails
		return ret
	}
	return *o.StoDetails
}

// GetStoDetailsOk returns a tuple with the StoDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerArtifactIntegrationDetail) GetStoDetailsOk() (*STODetails, bool) {
	if o == nil || IsNil(o.StoDetails) {
		return nil, false
	}
	return o.StoDetails, true
}

// HasStoDetails returns a boolean if a field has been set.
func (o *DockerArtifactIntegrationDetail) HasStoDetails() bool {
	if o != nil && !IsNil(o.StoDetails) {
		return true
	}

	return false
}

// SetStoDetails gets a reference to the given STODetails and assigns it to the StoDetails field.
func (o *DockerArtifactIntegrationDetail) SetStoDetails(v STODetails) {
	o.StoDetails = &v
}

func (o DockerArtifactIntegrationDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DockerArtifactIntegrationDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuildDetails) {
		toSerialize["buildDetails"] = o.BuildDetails
	}
	if !IsNil(o.DeploymentsDetails) {
		toSerialize["deploymentsDetails"] = o.DeploymentsDetails
	}
	if !IsNil(o.SbomDetails) {
		toSerialize["sbomDetails"] = o.SbomDetails
	}
	if !IsNil(o.SlsaDetails) {
		toSerialize["slsaDetails"] = o.SlsaDetails
	}
	if !IsNil(o.StoDetails) {
		toSerialize["stoDetails"] = o.StoDetails
	}
	return toSerialize, nil
}

type NullableDockerArtifactIntegrationDetail struct {
	value *DockerArtifactIntegrationDetail
	isSet bool
}

func (v NullableDockerArtifactIntegrationDetail) Get() *DockerArtifactIntegrationDetail {
	return v.value
}

func (v *NullableDockerArtifactIntegrationDetail) Set(val *DockerArtifactIntegrationDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableDockerArtifactIntegrationDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableDockerArtifactIntegrationDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDockerArtifactIntegrationDetail(val *DockerArtifactIntegrationDetail) *NullableDockerArtifactIntegrationDetail {
	return &NullableDockerArtifactIntegrationDetail{value: val, isSet: true}
}

func (v NullableDockerArtifactIntegrationDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDockerArtifactIntegrationDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


