/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WebhookRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookRequest{}

// WebhookRequest struct for WebhookRequest
type WebhookRequest struct {
	Description *string `json:"description,omitempty"`
	Enabled bool `json:"enabled"`
	ExtraHeaders []ExtraHeader `json:"extraHeaders,omitempty"`
	Identifier string `json:"identifier"`
	Insecure bool `json:"insecure"`
	Name string `json:"name"`
	SecretIdentifier *string `json:"secretIdentifier,omitempty"`
	SecretSpaceId *int64 `json:"secretSpaceId,omitempty"`
	SecretSpacePath *string `json:"secretSpacePath,omitempty"`
	Triggers []Trigger `json:"triggers,omitempty"`
	Url string `json:"url"`
}

type _WebhookRequest WebhookRequest

// NewWebhookRequest instantiates a new WebhookRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookRequest(enabled bool, identifier string, insecure bool, name string, url string) *WebhookRequest {
	this := WebhookRequest{}
	this.Enabled = enabled
	this.Identifier = identifier
	this.Insecure = insecure
	this.Name = name
	this.Url = url
	return &this
}

// NewWebhookRequestWithDefaults instantiates a new WebhookRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookRequestWithDefaults() *WebhookRequest {
	this := WebhookRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *WebhookRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *WebhookRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *WebhookRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *WebhookRequest) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *WebhookRequest) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *WebhookRequest) SetEnabled(v bool) {
	o.Enabled = v
}

// GetExtraHeaders returns the ExtraHeaders field value if set, zero value otherwise.
func (o *WebhookRequest) GetExtraHeaders() []ExtraHeader {
	if o == nil || IsNil(o.ExtraHeaders) {
		var ret []ExtraHeader
		return ret
	}
	return o.ExtraHeaders
}

// GetExtraHeadersOk returns a tuple with the ExtraHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookRequest) GetExtraHeadersOk() ([]ExtraHeader, bool) {
	if o == nil || IsNil(o.ExtraHeaders) {
		return nil, false
	}
	return o.ExtraHeaders, true
}

// HasExtraHeaders returns a boolean if a field has been set.
func (o *WebhookRequest) HasExtraHeaders() bool {
	if o != nil && !IsNil(o.ExtraHeaders) {
		return true
	}

	return false
}

// SetExtraHeaders gets a reference to the given []ExtraHeader and assigns it to the ExtraHeaders field.
func (o *WebhookRequest) SetExtraHeaders(v []ExtraHeader) {
	o.ExtraHeaders = v
}

// GetIdentifier returns the Identifier field value
func (o *WebhookRequest) GetIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *WebhookRequest) GetIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *WebhookRequest) SetIdentifier(v string) {
	o.Identifier = v
}

// GetInsecure returns the Insecure field value
func (o *WebhookRequest) GetInsecure() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Insecure
}

// GetInsecureOk returns a tuple with the Insecure field value
// and a boolean to check if the value has been set.
func (o *WebhookRequest) GetInsecureOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Insecure, true
}

// SetInsecure sets field value
func (o *WebhookRequest) SetInsecure(v bool) {
	o.Insecure = v
}

// GetName returns the Name field value
func (o *WebhookRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WebhookRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WebhookRequest) SetName(v string) {
	o.Name = v
}

// GetSecretIdentifier returns the SecretIdentifier field value if set, zero value otherwise.
func (o *WebhookRequest) GetSecretIdentifier() string {
	if o == nil || IsNil(o.SecretIdentifier) {
		var ret string
		return ret
	}
	return *o.SecretIdentifier
}

// GetSecretIdentifierOk returns a tuple with the SecretIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookRequest) GetSecretIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.SecretIdentifier) {
		return nil, false
	}
	return o.SecretIdentifier, true
}

// HasSecretIdentifier returns a boolean if a field has been set.
func (o *WebhookRequest) HasSecretIdentifier() bool {
	if o != nil && !IsNil(o.SecretIdentifier) {
		return true
	}

	return false
}

// SetSecretIdentifier gets a reference to the given string and assigns it to the SecretIdentifier field.
func (o *WebhookRequest) SetSecretIdentifier(v string) {
	o.SecretIdentifier = &v
}

// GetSecretSpaceId returns the SecretSpaceId field value if set, zero value otherwise.
func (o *WebhookRequest) GetSecretSpaceId() int64 {
	if o == nil || IsNil(o.SecretSpaceId) {
		var ret int64
		return ret
	}
	return *o.SecretSpaceId
}

// GetSecretSpaceIdOk returns a tuple with the SecretSpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookRequest) GetSecretSpaceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SecretSpaceId) {
		return nil, false
	}
	return o.SecretSpaceId, true
}

// HasSecretSpaceId returns a boolean if a field has been set.
func (o *WebhookRequest) HasSecretSpaceId() bool {
	if o != nil && !IsNil(o.SecretSpaceId) {
		return true
	}

	return false
}

// SetSecretSpaceId gets a reference to the given int64 and assigns it to the SecretSpaceId field.
func (o *WebhookRequest) SetSecretSpaceId(v int64) {
	o.SecretSpaceId = &v
}

// GetSecretSpacePath returns the SecretSpacePath field value if set, zero value otherwise.
func (o *WebhookRequest) GetSecretSpacePath() string {
	if o == nil || IsNil(o.SecretSpacePath) {
		var ret string
		return ret
	}
	return *o.SecretSpacePath
}

// GetSecretSpacePathOk returns a tuple with the SecretSpacePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookRequest) GetSecretSpacePathOk() (*string, bool) {
	if o == nil || IsNil(o.SecretSpacePath) {
		return nil, false
	}
	return o.SecretSpacePath, true
}

// HasSecretSpacePath returns a boolean if a field has been set.
func (o *WebhookRequest) HasSecretSpacePath() bool {
	if o != nil && !IsNil(o.SecretSpacePath) {
		return true
	}

	return false
}

// SetSecretSpacePath gets a reference to the given string and assigns it to the SecretSpacePath field.
func (o *WebhookRequest) SetSecretSpacePath(v string) {
	o.SecretSpacePath = &v
}

// GetTriggers returns the Triggers field value if set, zero value otherwise.
func (o *WebhookRequest) GetTriggers() []Trigger {
	if o == nil || IsNil(o.Triggers) {
		var ret []Trigger
		return ret
	}
	return o.Triggers
}

// GetTriggersOk returns a tuple with the Triggers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookRequest) GetTriggersOk() ([]Trigger, bool) {
	if o == nil || IsNil(o.Triggers) {
		return nil, false
	}
	return o.Triggers, true
}

// HasTriggers returns a boolean if a field has been set.
func (o *WebhookRequest) HasTriggers() bool {
	if o != nil && !IsNil(o.Triggers) {
		return true
	}

	return false
}

// SetTriggers gets a reference to the given []Trigger and assigns it to the Triggers field.
func (o *WebhookRequest) SetTriggers(v []Trigger) {
	o.Triggers = v
}

// GetUrl returns the Url field value
func (o *WebhookRequest) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *WebhookRequest) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *WebhookRequest) SetUrl(v string) {
	o.Url = v
}

func (o WebhookRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.ExtraHeaders) {
		toSerialize["extraHeaders"] = o.ExtraHeaders
	}
	toSerialize["identifier"] = o.Identifier
	toSerialize["insecure"] = o.Insecure
	toSerialize["name"] = o.Name
	if !IsNil(o.SecretIdentifier) {
		toSerialize["secretIdentifier"] = o.SecretIdentifier
	}
	if !IsNil(o.SecretSpaceId) {
		toSerialize["secretSpaceId"] = o.SecretSpaceId
	}
	if !IsNil(o.SecretSpacePath) {
		toSerialize["secretSpacePath"] = o.SecretSpacePath
	}
	if !IsNil(o.Triggers) {
		toSerialize["triggers"] = o.Triggers
	}
	toSerialize["url"] = o.Url
	return toSerialize, nil
}

func (o *WebhookRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"enabled",
		"identifier",
		"insecure",
		"name",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookRequest := _WebhookRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhookRequest)

	if err != nil {
		return err
	}

	*o = WebhookRequest(varWebhookRequest)

	return err
}

type NullableWebhookRequest struct {
	value *WebhookRequest
	isSet bool
}

func (v NullableWebhookRequest) Get() *WebhookRequest {
	return v.value
}

func (v *NullableWebhookRequest) Set(val *WebhookRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookRequest(val *WebhookRequest) *NullableWebhookRequest {
	return &NullableWebhookRequest{value: val, isSet: true}
}

func (v NullableWebhookRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


