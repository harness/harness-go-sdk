/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
)

// checks if the VirtualConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VirtualConfig{}

// VirtualConfig Configuration for Harness Virtual Artifact Registries
type VirtualConfig struct {
	UpstreamProxies []string `json:"upstreamProxies,omitempty"`
}

// NewVirtualConfig instantiates a new VirtualConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualConfig() *VirtualConfig {
	this := VirtualConfig{}
	return &this
}

// NewVirtualConfigWithDefaults instantiates a new VirtualConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualConfigWithDefaults() *VirtualConfig {
	this := VirtualConfig{}
	return &this
}

// GetUpstreamProxies returns the UpstreamProxies field value if set, zero value otherwise.
func (o *VirtualConfig) GetUpstreamProxies() []string {
	if o == nil || IsNil(o.UpstreamProxies) {
		var ret []string
		return ret
	}
	return o.UpstreamProxies
}

// GetUpstreamProxiesOk returns a tuple with the UpstreamProxies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualConfig) GetUpstreamProxiesOk() ([]string, bool) {
	if o == nil || IsNil(o.UpstreamProxies) {
		return nil, false
	}
	return o.UpstreamProxies, true
}

// HasUpstreamProxies returns a boolean if a field has been set.
func (o *VirtualConfig) HasUpstreamProxies() bool {
	if o != nil && !IsNil(o.UpstreamProxies) {
		return true
	}

	return false
}

// SetUpstreamProxies gets a reference to the given []string and assigns it to the UpstreamProxies field.
func (o *VirtualConfig) SetUpstreamProxies(v []string) {
	o.UpstreamProxies = v
}

func (o VirtualConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VirtualConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UpstreamProxies) {
		toSerialize["upstreamProxies"] = o.UpstreamProxies
	}
	return toSerialize, nil
}

type NullableVirtualConfig struct {
	value *VirtualConfig
	isSet bool
}

func (v NullableVirtualConfig) Get() *VirtualConfig {
	return v.value
}

func (v *NullableVirtualConfig) Set(val *VirtualConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualConfig(val *VirtualConfig) *NullableVirtualConfig {
	return &NullableVirtualConfig{value: val, isSet: true}
}

func (v NullableVirtualConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


