/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
)

// checks if the ArtifactStats type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArtifactStats{}

// ArtifactStats Harness Artifact Stats
type ArtifactStats struct {
	DownloadCount *int64 `json:"downloadCount,omitempty"`
	DownloadSize *int64 `json:"downloadSize,omitempty"`
	TotalStorageSize *int64 `json:"totalStorageSize,omitempty"`
	UploadSize *int64 `json:"uploadSize,omitempty"`
}

// NewArtifactStats instantiates a new ArtifactStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtifactStats() *ArtifactStats {
	this := ArtifactStats{}
	return &this
}

// NewArtifactStatsWithDefaults instantiates a new ArtifactStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtifactStatsWithDefaults() *ArtifactStats {
	this := ArtifactStats{}
	return &this
}

// GetDownloadCount returns the DownloadCount field value if set, zero value otherwise.
func (o *ArtifactStats) GetDownloadCount() int64 {
	if o == nil || IsNil(o.DownloadCount) {
		var ret int64
		return ret
	}
	return *o.DownloadCount
}

// GetDownloadCountOk returns a tuple with the DownloadCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactStats) GetDownloadCountOk() (*int64, bool) {
	if o == nil || IsNil(o.DownloadCount) {
		return nil, false
	}
	return o.DownloadCount, true
}

// HasDownloadCount returns a boolean if a field has been set.
func (o *ArtifactStats) HasDownloadCount() bool {
	if o != nil && !IsNil(o.DownloadCount) {
		return true
	}

	return false
}

// SetDownloadCount gets a reference to the given int64 and assigns it to the DownloadCount field.
func (o *ArtifactStats) SetDownloadCount(v int64) {
	o.DownloadCount = &v
}

// GetDownloadSize returns the DownloadSize field value if set, zero value otherwise.
func (o *ArtifactStats) GetDownloadSize() int64 {
	if o == nil || IsNil(o.DownloadSize) {
		var ret int64
		return ret
	}
	return *o.DownloadSize
}

// GetDownloadSizeOk returns a tuple with the DownloadSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactStats) GetDownloadSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.DownloadSize) {
		return nil, false
	}
	return o.DownloadSize, true
}

// HasDownloadSize returns a boolean if a field has been set.
func (o *ArtifactStats) HasDownloadSize() bool {
	if o != nil && !IsNil(o.DownloadSize) {
		return true
	}

	return false
}

// SetDownloadSize gets a reference to the given int64 and assigns it to the DownloadSize field.
func (o *ArtifactStats) SetDownloadSize(v int64) {
	o.DownloadSize = &v
}

// GetTotalStorageSize returns the TotalStorageSize field value if set, zero value otherwise.
func (o *ArtifactStats) GetTotalStorageSize() int64 {
	if o == nil || IsNil(o.TotalStorageSize) {
		var ret int64
		return ret
	}
	return *o.TotalStorageSize
}

// GetTotalStorageSizeOk returns a tuple with the TotalStorageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactStats) GetTotalStorageSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalStorageSize) {
		return nil, false
	}
	return o.TotalStorageSize, true
}

// HasTotalStorageSize returns a boolean if a field has been set.
func (o *ArtifactStats) HasTotalStorageSize() bool {
	if o != nil && !IsNil(o.TotalStorageSize) {
		return true
	}

	return false
}

// SetTotalStorageSize gets a reference to the given int64 and assigns it to the TotalStorageSize field.
func (o *ArtifactStats) SetTotalStorageSize(v int64) {
	o.TotalStorageSize = &v
}

// GetUploadSize returns the UploadSize field value if set, zero value otherwise.
func (o *ArtifactStats) GetUploadSize() int64 {
	if o == nil || IsNil(o.UploadSize) {
		var ret int64
		return ret
	}
	return *o.UploadSize
}

// GetUploadSizeOk returns a tuple with the UploadSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactStats) GetUploadSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.UploadSize) {
		return nil, false
	}
	return o.UploadSize, true
}

// HasUploadSize returns a boolean if a field has been set.
func (o *ArtifactStats) HasUploadSize() bool {
	if o != nil && !IsNil(o.UploadSize) {
		return true
	}

	return false
}

// SetUploadSize gets a reference to the given int64 and assigns it to the UploadSize field.
func (o *ArtifactStats) SetUploadSize(v int64) {
	o.UploadSize = &v
}

func (o ArtifactStats) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArtifactStats) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DownloadCount) {
		toSerialize["downloadCount"] = o.DownloadCount
	}
	if !IsNil(o.DownloadSize) {
		toSerialize["downloadSize"] = o.DownloadSize
	}
	if !IsNil(o.TotalStorageSize) {
		toSerialize["totalStorageSize"] = o.TotalStorageSize
	}
	if !IsNil(o.UploadSize) {
		toSerialize["uploadSize"] = o.UploadSize
	}
	return toSerialize, nil
}

type NullableArtifactStats struct {
	value *ArtifactStats
	isSet bool
}

func (v NullableArtifactStats) Get() *ArtifactStats {
	return v.value
}

func (v *NullableArtifactStats) Set(val *ArtifactStats) {
	v.value = val
	v.isSet = true
}

func (v NullableArtifactStats) IsSet() bool {
	return v.isSet
}

func (v *NullableArtifactStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtifactStats(val *ArtifactStats) *NullableArtifactStats {
	return &NullableArtifactStats{value: val, isSet: true}
}

func (v NullableArtifactStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtifactStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


