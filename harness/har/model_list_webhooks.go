/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListWebhooks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListWebhooks{}

// ListWebhooks A list of Harness Registries webhooks
type ListWebhooks struct {
	// The total number of items
	ItemCount *int64 `json:"itemCount,omitempty"`
	// The total number of pages
	PageCount *int64 `json:"pageCount,omitempty"`
	// The current page
	PageIndex *int64 `json:"pageIndex,omitempty"`
	// The number of items per page
	PageSize *int32 `json:"pageSize,omitempty"`
	// A list of Registries webhooks
	Webhooks []Webhook `json:"webhooks"`
}

type _ListWebhooks ListWebhooks

// NewListWebhooks instantiates a new ListWebhooks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListWebhooks(webhooks []Webhook) *ListWebhooks {
	this := ListWebhooks{}
	this.Webhooks = webhooks
	return &this
}

// NewListWebhooksWithDefaults instantiates a new ListWebhooks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListWebhooksWithDefaults() *ListWebhooks {
	this := ListWebhooks{}
	return &this
}

// GetItemCount returns the ItemCount field value if set, zero value otherwise.
func (o *ListWebhooks) GetItemCount() int64 {
	if o == nil || IsNil(o.ItemCount) {
		var ret int64
		return ret
	}
	return *o.ItemCount
}

// GetItemCountOk returns a tuple with the ItemCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWebhooks) GetItemCountOk() (*int64, bool) {
	if o == nil || IsNil(o.ItemCount) {
		return nil, false
	}
	return o.ItemCount, true
}

// HasItemCount returns a boolean if a field has been set.
func (o *ListWebhooks) HasItemCount() bool {
	if o != nil && !IsNil(o.ItemCount) {
		return true
	}

	return false
}

// SetItemCount gets a reference to the given int64 and assigns it to the ItemCount field.
func (o *ListWebhooks) SetItemCount(v int64) {
	o.ItemCount = &v
}

// GetPageCount returns the PageCount field value if set, zero value otherwise.
func (o *ListWebhooks) GetPageCount() int64 {
	if o == nil || IsNil(o.PageCount) {
		var ret int64
		return ret
	}
	return *o.PageCount
}

// GetPageCountOk returns a tuple with the PageCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWebhooks) GetPageCountOk() (*int64, bool) {
	if o == nil || IsNil(o.PageCount) {
		return nil, false
	}
	return o.PageCount, true
}

// HasPageCount returns a boolean if a field has been set.
func (o *ListWebhooks) HasPageCount() bool {
	if o != nil && !IsNil(o.PageCount) {
		return true
	}

	return false
}

// SetPageCount gets a reference to the given int64 and assigns it to the PageCount field.
func (o *ListWebhooks) SetPageCount(v int64) {
	o.PageCount = &v
}

// GetPageIndex returns the PageIndex field value if set, zero value otherwise.
func (o *ListWebhooks) GetPageIndex() int64 {
	if o == nil || IsNil(o.PageIndex) {
		var ret int64
		return ret
	}
	return *o.PageIndex
}

// GetPageIndexOk returns a tuple with the PageIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWebhooks) GetPageIndexOk() (*int64, bool) {
	if o == nil || IsNil(o.PageIndex) {
		return nil, false
	}
	return o.PageIndex, true
}

// HasPageIndex returns a boolean if a field has been set.
func (o *ListWebhooks) HasPageIndex() bool {
	if o != nil && !IsNil(o.PageIndex) {
		return true
	}

	return false
}

// SetPageIndex gets a reference to the given int64 and assigns it to the PageIndex field.
func (o *ListWebhooks) SetPageIndex(v int64) {
	o.PageIndex = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *ListWebhooks) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListWebhooks) GetPageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *ListWebhooks) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *ListWebhooks) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetWebhooks returns the Webhooks field value
func (o *ListWebhooks) GetWebhooks() []Webhook {
	if o == nil {
		var ret []Webhook
		return ret
	}

	return o.Webhooks
}

// GetWebhooksOk returns a tuple with the Webhooks field value
// and a boolean to check if the value has been set.
func (o *ListWebhooks) GetWebhooksOk() ([]Webhook, bool) {
	if o == nil {
		return nil, false
	}
	return o.Webhooks, true
}

// SetWebhooks sets field value
func (o *ListWebhooks) SetWebhooks(v []Webhook) {
	o.Webhooks = v
}

func (o ListWebhooks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListWebhooks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ItemCount) {
		toSerialize["itemCount"] = o.ItemCount
	}
	if !IsNil(o.PageCount) {
		toSerialize["pageCount"] = o.PageCount
	}
	if !IsNil(o.PageIndex) {
		toSerialize["pageIndex"] = o.PageIndex
	}
	if !IsNil(o.PageSize) {
		toSerialize["pageSize"] = o.PageSize
	}
	toSerialize["webhooks"] = o.Webhooks
	return toSerialize, nil
}

func (o *ListWebhooks) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"webhooks",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListWebhooks := _ListWebhooks{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListWebhooks)

	if err != nil {
		return err
	}

	*o = ListWebhooks(varListWebhooks)

	return err
}

type NullableListWebhooks struct {
	value *ListWebhooks
	isSet bool
}

func (v NullableListWebhooks) Get() *ListWebhooks {
	return v.value
}

func (v *NullableListWebhooks) Set(val *ListWebhooks) {
	v.value = val
	v.isSet = true
}

func (v NullableListWebhooks) IsSet() bool {
	return v.isSet
}

func (v *NullableListWebhooks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListWebhooks(val *ListWebhooks) *NullableListWebhooks {
	return &NullableListWebhooks{value: val, isSet: true}
}

func (v NullableListWebhooks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListWebhooks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


