/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
)

// checks if the TabSetupStep type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TabSetupStep{}

// TabSetupStep Tab Setup step
type TabSetupStep struct {
	Header *string `json:"header,omitempty"`
	Sections []ClientSetupSection `json:"sections,omitempty"`
}

// NewTabSetupStep instantiates a new TabSetupStep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTabSetupStep() *TabSetupStep {
	this := TabSetupStep{}
	return &this
}

// NewTabSetupStepWithDefaults instantiates a new TabSetupStep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTabSetupStepWithDefaults() *TabSetupStep {
	this := TabSetupStep{}
	return &this
}

// GetHeader returns the Header field value if set, zero value otherwise.
func (o *TabSetupStep) GetHeader() string {
	if o == nil || IsNil(o.Header) {
		var ret string
		return ret
	}
	return *o.Header
}

// GetHeaderOk returns a tuple with the Header field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TabSetupStep) GetHeaderOk() (*string, bool) {
	if o == nil || IsNil(o.Header) {
		return nil, false
	}
	return o.Header, true
}

// HasHeader returns a boolean if a field has been set.
func (o *TabSetupStep) HasHeader() bool {
	if o != nil && !IsNil(o.Header) {
		return true
	}

	return false
}

// SetHeader gets a reference to the given string and assigns it to the Header field.
func (o *TabSetupStep) SetHeader(v string) {
	o.Header = &v
}

// GetSections returns the Sections field value if set, zero value otherwise.
func (o *TabSetupStep) GetSections() []ClientSetupSection {
	if o == nil || IsNil(o.Sections) {
		var ret []ClientSetupSection
		return ret
	}
	return o.Sections
}

// GetSectionsOk returns a tuple with the Sections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TabSetupStep) GetSectionsOk() ([]ClientSetupSection, bool) {
	if o == nil || IsNil(o.Sections) {
		return nil, false
	}
	return o.Sections, true
}

// HasSections returns a boolean if a field has been set.
func (o *TabSetupStep) HasSections() bool {
	if o != nil && !IsNil(o.Sections) {
		return true
	}

	return false
}

// SetSections gets a reference to the given []ClientSetupSection and assigns it to the Sections field.
func (o *TabSetupStep) SetSections(v []ClientSetupSection) {
	o.Sections = v
}

func (o TabSetupStep) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TabSetupStep) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Header) {
		toSerialize["header"] = o.Header
	}
	if !IsNil(o.Sections) {
		toSerialize["sections"] = o.Sections
	}
	return toSerialize, nil
}

type NullableTabSetupStep struct {
	value *TabSetupStep
	isSet bool
}

func (v NullableTabSetupStep) Get() *TabSetupStep {
	return v.value
}

func (v *NullableTabSetupStep) Set(val *TabSetupStep) {
	v.value = val
	v.isSet = true
}

func (v NullableTabSetupStep) IsSet() bool {
	return v.isSet
}

func (v *NullableTabSetupStep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTabSetupStep(val *TabSetupStep) *NullableTabSetupStep {
	return &NullableTabSetupStep{value: val, isSet: true}
}

func (v NullableTabSetupStep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTabSetupStep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


