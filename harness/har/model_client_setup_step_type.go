/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
	"fmt"
)

// ClientSetupStepType ClientSetupStepType type
type ClientSetupStepType string

// List of ClientSetupStepType
const (
	STATIC ClientSetupStepType = "Static"
	GENERATE_TOKEN ClientSetupStepType = "GenerateToken"
)

// All allowed values of ClientSetupStepType enum
var AllowedClientSetupStepTypeEnumValues = []ClientSetupStepType{
	"Static",
	"GenerateToken",
}

func (v *ClientSetupStepType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ClientSetupStepType(value)
	for _, existing := range AllowedClientSetupStepTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ClientSetupStepType", value)
}

// NewClientSetupStepTypeFromValue returns a pointer to a valid ClientSetupStepType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewClientSetupStepTypeFromValue(v string) (*ClientSetupStepType, error) {
	ev := ClientSetupStepType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ClientSetupStepType: valid values are %v", v, AllowedClientSetupStepTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ClientSetupStepType) IsValid() bool {
	for _, existing := range AllowedClientSetupStepTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ClientSetupStepType value
func (v ClientSetupStepType) Ptr() *ClientSetupStepType {
	return &v
}

type NullableClientSetupStepType struct {
	value *ClientSetupStepType
	isSet bool
}

func (v NullableClientSetupStepType) Get() *ClientSetupStepType {
	return v.value
}

func (v *NullableClientSetupStepType) Set(val *ClientSetupStepType) {
	v.value = val
	v.isSet = true
}

func (v NullableClientSetupStepType) IsSet() bool {
	return v.isSet
}

func (v *NullableClientSetupStepType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientSetupStepType(val *ClientSetupStepType) *NullableClientSetupStepType {
	return &NullableClientSetupStepType{value: val, isSet: true}
}

func (v NullableClientSetupStepType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientSetupStepType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

