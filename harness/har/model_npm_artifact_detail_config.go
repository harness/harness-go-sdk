/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
)

// checks if the NpmArtifactDetailConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NpmArtifactDetailConfig{}

// NpmArtifactDetailConfig Config for npm artifact details
type NpmArtifactDetailConfig struct {
	Metadata map[string]interface{} `json:"metadata,omitempty"`
}

// NewNpmArtifactDetailConfig instantiates a new NpmArtifactDetailConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNpmArtifactDetailConfig() *NpmArtifactDetailConfig {
	this := NpmArtifactDetailConfig{}
	return &this
}

// NewNpmArtifactDetailConfigWithDefaults instantiates a new NpmArtifactDetailConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNpmArtifactDetailConfigWithDefaults() *NpmArtifactDetailConfig {
	this := NpmArtifactDetailConfig{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *NpmArtifactDetailConfig) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NpmArtifactDetailConfig) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *NpmArtifactDetailConfig) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *NpmArtifactDetailConfig) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o NpmArtifactDetailConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NpmArtifactDetailConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableNpmArtifactDetailConfig struct {
	value *NpmArtifactDetailConfig
	isSet bool
}

func (v NullableNpmArtifactDetailConfig) Get() *NpmArtifactDetailConfig {
	return v.value
}

func (v *NullableNpmArtifactDetailConfig) Set(val *NpmArtifactDetailConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableNpmArtifactDetailConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableNpmArtifactDetailConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNpmArtifactDetailConfig(val *NpmArtifactDetailConfig) *NullableNpmArtifactDetailConfig {
	return &NullableNpmArtifactDetailConfig{value: val, isSet: true}
}

func (v NullableNpmArtifactDetailConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNpmArtifactDetailConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


