/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
)

// checks if the SBOMDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SBOMDetails{}

// SBOMDetails struct for SBOMDetails
type SBOMDetails struct {
	AllowListViolations *int32 `json:"allowListViolations,omitempty"`
	ArtifactId *string `json:"artifactId,omitempty"`
	ArtifactSourceId *string `json:"artifactSourceId,omitempty"`
	AvgScore *string `json:"avgScore,omitempty"`
	ComponentsCount *int32 `json:"componentsCount,omitempty"`
	DenyListViolations *int32 `json:"denyListViolations,omitempty"`
	MaxScore *string `json:"maxScore,omitempty"`
	OrchestrationId *string `json:"orchestrationId,omitempty"`
	OrgId *string `json:"orgId,omitempty"`
	ProjectId *string `json:"projectId,omitempty"`
}

// NewSBOMDetails instantiates a new SBOMDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSBOMDetails() *SBOMDetails {
	this := SBOMDetails{}
	return &this
}

// NewSBOMDetailsWithDefaults instantiates a new SBOMDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSBOMDetailsWithDefaults() *SBOMDetails {
	this := SBOMDetails{}
	return &this
}

// GetAllowListViolations returns the AllowListViolations field value if set, zero value otherwise.
func (o *SBOMDetails) GetAllowListViolations() int32 {
	if o == nil || IsNil(o.AllowListViolations) {
		var ret int32
		return ret
	}
	return *o.AllowListViolations
}

// GetAllowListViolationsOk returns a tuple with the AllowListViolations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SBOMDetails) GetAllowListViolationsOk() (*int32, bool) {
	if o == nil || IsNil(o.AllowListViolations) {
		return nil, false
	}
	return o.AllowListViolations, true
}

// HasAllowListViolations returns a boolean if a field has been set.
func (o *SBOMDetails) HasAllowListViolations() bool {
	if o != nil && !IsNil(o.AllowListViolations) {
		return true
	}

	return false
}

// SetAllowListViolations gets a reference to the given int32 and assigns it to the AllowListViolations field.
func (o *SBOMDetails) SetAllowListViolations(v int32) {
	o.AllowListViolations = &v
}

// GetArtifactId returns the ArtifactId field value if set, zero value otherwise.
func (o *SBOMDetails) GetArtifactId() string {
	if o == nil || IsNil(o.ArtifactId) {
		var ret string
		return ret
	}
	return *o.ArtifactId
}

// GetArtifactIdOk returns a tuple with the ArtifactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SBOMDetails) GetArtifactIdOk() (*string, bool) {
	if o == nil || IsNil(o.ArtifactId) {
		return nil, false
	}
	return o.ArtifactId, true
}

// HasArtifactId returns a boolean if a field has been set.
func (o *SBOMDetails) HasArtifactId() bool {
	if o != nil && !IsNil(o.ArtifactId) {
		return true
	}

	return false
}

// SetArtifactId gets a reference to the given string and assigns it to the ArtifactId field.
func (o *SBOMDetails) SetArtifactId(v string) {
	o.ArtifactId = &v
}

// GetArtifactSourceId returns the ArtifactSourceId field value if set, zero value otherwise.
func (o *SBOMDetails) GetArtifactSourceId() string {
	if o == nil || IsNil(o.ArtifactSourceId) {
		var ret string
		return ret
	}
	return *o.ArtifactSourceId
}

// GetArtifactSourceIdOk returns a tuple with the ArtifactSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SBOMDetails) GetArtifactSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ArtifactSourceId) {
		return nil, false
	}
	return o.ArtifactSourceId, true
}

// HasArtifactSourceId returns a boolean if a field has been set.
func (o *SBOMDetails) HasArtifactSourceId() bool {
	if o != nil && !IsNil(o.ArtifactSourceId) {
		return true
	}

	return false
}

// SetArtifactSourceId gets a reference to the given string and assigns it to the ArtifactSourceId field.
func (o *SBOMDetails) SetArtifactSourceId(v string) {
	o.ArtifactSourceId = &v
}

// GetAvgScore returns the AvgScore field value if set, zero value otherwise.
func (o *SBOMDetails) GetAvgScore() string {
	if o == nil || IsNil(o.AvgScore) {
		var ret string
		return ret
	}
	return *o.AvgScore
}

// GetAvgScoreOk returns a tuple with the AvgScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SBOMDetails) GetAvgScoreOk() (*string, bool) {
	if o == nil || IsNil(o.AvgScore) {
		return nil, false
	}
	return o.AvgScore, true
}

// HasAvgScore returns a boolean if a field has been set.
func (o *SBOMDetails) HasAvgScore() bool {
	if o != nil && !IsNil(o.AvgScore) {
		return true
	}

	return false
}

// SetAvgScore gets a reference to the given string and assigns it to the AvgScore field.
func (o *SBOMDetails) SetAvgScore(v string) {
	o.AvgScore = &v
}

// GetComponentsCount returns the ComponentsCount field value if set, zero value otherwise.
func (o *SBOMDetails) GetComponentsCount() int32 {
	if o == nil || IsNil(o.ComponentsCount) {
		var ret int32
		return ret
	}
	return *o.ComponentsCount
}

// GetComponentsCountOk returns a tuple with the ComponentsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SBOMDetails) GetComponentsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.ComponentsCount) {
		return nil, false
	}
	return o.ComponentsCount, true
}

// HasComponentsCount returns a boolean if a field has been set.
func (o *SBOMDetails) HasComponentsCount() bool {
	if o != nil && !IsNil(o.ComponentsCount) {
		return true
	}

	return false
}

// SetComponentsCount gets a reference to the given int32 and assigns it to the ComponentsCount field.
func (o *SBOMDetails) SetComponentsCount(v int32) {
	o.ComponentsCount = &v
}

// GetDenyListViolations returns the DenyListViolations field value if set, zero value otherwise.
func (o *SBOMDetails) GetDenyListViolations() int32 {
	if o == nil || IsNil(o.DenyListViolations) {
		var ret int32
		return ret
	}
	return *o.DenyListViolations
}

// GetDenyListViolationsOk returns a tuple with the DenyListViolations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SBOMDetails) GetDenyListViolationsOk() (*int32, bool) {
	if o == nil || IsNil(o.DenyListViolations) {
		return nil, false
	}
	return o.DenyListViolations, true
}

// HasDenyListViolations returns a boolean if a field has been set.
func (o *SBOMDetails) HasDenyListViolations() bool {
	if o != nil && !IsNil(o.DenyListViolations) {
		return true
	}

	return false
}

// SetDenyListViolations gets a reference to the given int32 and assigns it to the DenyListViolations field.
func (o *SBOMDetails) SetDenyListViolations(v int32) {
	o.DenyListViolations = &v
}

// GetMaxScore returns the MaxScore field value if set, zero value otherwise.
func (o *SBOMDetails) GetMaxScore() string {
	if o == nil || IsNil(o.MaxScore) {
		var ret string
		return ret
	}
	return *o.MaxScore
}

// GetMaxScoreOk returns a tuple with the MaxScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SBOMDetails) GetMaxScoreOk() (*string, bool) {
	if o == nil || IsNil(o.MaxScore) {
		return nil, false
	}
	return o.MaxScore, true
}

// HasMaxScore returns a boolean if a field has been set.
func (o *SBOMDetails) HasMaxScore() bool {
	if o != nil && !IsNil(o.MaxScore) {
		return true
	}

	return false
}

// SetMaxScore gets a reference to the given string and assigns it to the MaxScore field.
func (o *SBOMDetails) SetMaxScore(v string) {
	o.MaxScore = &v
}

// GetOrchestrationId returns the OrchestrationId field value if set, zero value otherwise.
func (o *SBOMDetails) GetOrchestrationId() string {
	if o == nil || IsNil(o.OrchestrationId) {
		var ret string
		return ret
	}
	return *o.OrchestrationId
}

// GetOrchestrationIdOk returns a tuple with the OrchestrationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SBOMDetails) GetOrchestrationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrchestrationId) {
		return nil, false
	}
	return o.OrchestrationId, true
}

// HasOrchestrationId returns a boolean if a field has been set.
func (o *SBOMDetails) HasOrchestrationId() bool {
	if o != nil && !IsNil(o.OrchestrationId) {
		return true
	}

	return false
}

// SetOrchestrationId gets a reference to the given string and assigns it to the OrchestrationId field.
func (o *SBOMDetails) SetOrchestrationId(v string) {
	o.OrchestrationId = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *SBOMDetails) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SBOMDetails) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *SBOMDetails) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *SBOMDetails) SetOrgId(v string) {
	o.OrgId = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *SBOMDetails) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SBOMDetails) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *SBOMDetails) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *SBOMDetails) SetProjectId(v string) {
	o.ProjectId = &v
}

func (o SBOMDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SBOMDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowListViolations) {
		toSerialize["allowListViolations"] = o.AllowListViolations
	}
	if !IsNil(o.ArtifactId) {
		toSerialize["artifactId"] = o.ArtifactId
	}
	if !IsNil(o.ArtifactSourceId) {
		toSerialize["artifactSourceId"] = o.ArtifactSourceId
	}
	if !IsNil(o.AvgScore) {
		toSerialize["avgScore"] = o.AvgScore
	}
	if !IsNil(o.ComponentsCount) {
		toSerialize["componentsCount"] = o.ComponentsCount
	}
	if !IsNil(o.DenyListViolations) {
		toSerialize["denyListViolations"] = o.DenyListViolations
	}
	if !IsNil(o.MaxScore) {
		toSerialize["maxScore"] = o.MaxScore
	}
	if !IsNil(o.OrchestrationId) {
		toSerialize["orchestrationId"] = o.OrchestrationId
	}
	if !IsNil(o.OrgId) {
		toSerialize["orgId"] = o.OrgId
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	return toSerialize, nil
}

type NullableSBOMDetails struct {
	value *SBOMDetails
	isSet bool
}

func (v NullableSBOMDetails) Get() *SBOMDetails {
	return v.value
}

func (v *NullableSBOMDetails) Set(val *SBOMDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableSBOMDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableSBOMDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSBOMDetails(val *SBOMDetails) *NullableSBOMDetails {
	return &NullableSBOMDetails{value: val, isSet: true}
}

func (v NullableSBOMDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSBOMDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


