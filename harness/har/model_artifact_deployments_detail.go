/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
)

// checks if the ArtifactDeploymentsDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArtifactDeploymentsDetail{}

// ArtifactDeploymentsDetail Artifact deployments Detail
type ArtifactDeploymentsDetail struct {
	Count *int32 `json:"count,omitempty"`
	EnvIdentifier *string `json:"envIdentifier,omitempty"`
	EnvName *string `json:"envName,omitempty"`
	EnvType *EnvironmentType `json:"envType,omitempty"`
	InfraIdentifier *string `json:"infraIdentifier,omitempty"`
	InfraName *string `json:"infraName,omitempty"`
	LastDeployedAt *string `json:"lastDeployedAt,omitempty"`
	LastDeployedById *string `json:"lastDeployedById,omitempty"`
	LastDeployedByName *string `json:"lastDeployedByName,omitempty"`
	LastPipelineExecutionId *string `json:"lastPipelineExecutionId,omitempty"`
	LastPipelineExecutionName *string `json:"lastPipelineExecutionName,omitempty"`
	OrgIdentifier *string `json:"orgIdentifier,omitempty"`
	PipelineId *string `json:"pipelineId,omitempty"`
	ProjectIdentifier *string `json:"projectIdentifier,omitempty"`
	ServiceIdentifier *string `json:"serviceIdentifier,omitempty"`
	ServiceName *string `json:"serviceName,omitempty"`
}

// NewArtifactDeploymentsDetail instantiates a new ArtifactDeploymentsDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtifactDeploymentsDetail() *ArtifactDeploymentsDetail {
	this := ArtifactDeploymentsDetail{}
	return &this
}

// NewArtifactDeploymentsDetailWithDefaults instantiates a new ArtifactDeploymentsDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtifactDeploymentsDetailWithDefaults() *ArtifactDeploymentsDetail {
	this := ArtifactDeploymentsDetail{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ArtifactDeploymentsDetail) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsDetail) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ArtifactDeploymentsDetail) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *ArtifactDeploymentsDetail) SetCount(v int32) {
	o.Count = &v
}

// GetEnvIdentifier returns the EnvIdentifier field value if set, zero value otherwise.
func (o *ArtifactDeploymentsDetail) GetEnvIdentifier() string {
	if o == nil || IsNil(o.EnvIdentifier) {
		var ret string
		return ret
	}
	return *o.EnvIdentifier
}

// GetEnvIdentifierOk returns a tuple with the EnvIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsDetail) GetEnvIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.EnvIdentifier) {
		return nil, false
	}
	return o.EnvIdentifier, true
}

// HasEnvIdentifier returns a boolean if a field has been set.
func (o *ArtifactDeploymentsDetail) HasEnvIdentifier() bool {
	if o != nil && !IsNil(o.EnvIdentifier) {
		return true
	}

	return false
}

// SetEnvIdentifier gets a reference to the given string and assigns it to the EnvIdentifier field.
func (o *ArtifactDeploymentsDetail) SetEnvIdentifier(v string) {
	o.EnvIdentifier = &v
}

// GetEnvName returns the EnvName field value if set, zero value otherwise.
func (o *ArtifactDeploymentsDetail) GetEnvName() string {
	if o == nil || IsNil(o.EnvName) {
		var ret string
		return ret
	}
	return *o.EnvName
}

// GetEnvNameOk returns a tuple with the EnvName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsDetail) GetEnvNameOk() (*string, bool) {
	if o == nil || IsNil(o.EnvName) {
		return nil, false
	}
	return o.EnvName, true
}

// HasEnvName returns a boolean if a field has been set.
func (o *ArtifactDeploymentsDetail) HasEnvName() bool {
	if o != nil && !IsNil(o.EnvName) {
		return true
	}

	return false
}

// SetEnvName gets a reference to the given string and assigns it to the EnvName field.
func (o *ArtifactDeploymentsDetail) SetEnvName(v string) {
	o.EnvName = &v
}

// GetEnvType returns the EnvType field value if set, zero value otherwise.
func (o *ArtifactDeploymentsDetail) GetEnvType() EnvironmentType {
	if o == nil || IsNil(o.EnvType) {
		var ret EnvironmentType
		return ret
	}
	return *o.EnvType
}

// GetEnvTypeOk returns a tuple with the EnvType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsDetail) GetEnvTypeOk() (*EnvironmentType, bool) {
	if o == nil || IsNil(o.EnvType) {
		return nil, false
	}
	return o.EnvType, true
}

// HasEnvType returns a boolean if a field has been set.
func (o *ArtifactDeploymentsDetail) HasEnvType() bool {
	if o != nil && !IsNil(o.EnvType) {
		return true
	}

	return false
}

// SetEnvType gets a reference to the given EnvironmentType and assigns it to the EnvType field.
func (o *ArtifactDeploymentsDetail) SetEnvType(v EnvironmentType) {
	o.EnvType = &v
}

// GetInfraIdentifier returns the InfraIdentifier field value if set, zero value otherwise.
func (o *ArtifactDeploymentsDetail) GetInfraIdentifier() string {
	if o == nil || IsNil(o.InfraIdentifier) {
		var ret string
		return ret
	}
	return *o.InfraIdentifier
}

// GetInfraIdentifierOk returns a tuple with the InfraIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsDetail) GetInfraIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.InfraIdentifier) {
		return nil, false
	}
	return o.InfraIdentifier, true
}

// HasInfraIdentifier returns a boolean if a field has been set.
func (o *ArtifactDeploymentsDetail) HasInfraIdentifier() bool {
	if o != nil && !IsNil(o.InfraIdentifier) {
		return true
	}

	return false
}

// SetInfraIdentifier gets a reference to the given string and assigns it to the InfraIdentifier field.
func (o *ArtifactDeploymentsDetail) SetInfraIdentifier(v string) {
	o.InfraIdentifier = &v
}

// GetInfraName returns the InfraName field value if set, zero value otherwise.
func (o *ArtifactDeploymentsDetail) GetInfraName() string {
	if o == nil || IsNil(o.InfraName) {
		var ret string
		return ret
	}
	return *o.InfraName
}

// GetInfraNameOk returns a tuple with the InfraName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsDetail) GetInfraNameOk() (*string, bool) {
	if o == nil || IsNil(o.InfraName) {
		return nil, false
	}
	return o.InfraName, true
}

// HasInfraName returns a boolean if a field has been set.
func (o *ArtifactDeploymentsDetail) HasInfraName() bool {
	if o != nil && !IsNil(o.InfraName) {
		return true
	}

	return false
}

// SetInfraName gets a reference to the given string and assigns it to the InfraName field.
func (o *ArtifactDeploymentsDetail) SetInfraName(v string) {
	o.InfraName = &v
}

// GetLastDeployedAt returns the LastDeployedAt field value if set, zero value otherwise.
func (o *ArtifactDeploymentsDetail) GetLastDeployedAt() string {
	if o == nil || IsNil(o.LastDeployedAt) {
		var ret string
		return ret
	}
	return *o.LastDeployedAt
}

// GetLastDeployedAtOk returns a tuple with the LastDeployedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsDetail) GetLastDeployedAtOk() (*string, bool) {
	if o == nil || IsNil(o.LastDeployedAt) {
		return nil, false
	}
	return o.LastDeployedAt, true
}

// HasLastDeployedAt returns a boolean if a field has been set.
func (o *ArtifactDeploymentsDetail) HasLastDeployedAt() bool {
	if o != nil && !IsNil(o.LastDeployedAt) {
		return true
	}

	return false
}

// SetLastDeployedAt gets a reference to the given string and assigns it to the LastDeployedAt field.
func (o *ArtifactDeploymentsDetail) SetLastDeployedAt(v string) {
	o.LastDeployedAt = &v
}

// GetLastDeployedById returns the LastDeployedById field value if set, zero value otherwise.
func (o *ArtifactDeploymentsDetail) GetLastDeployedById() string {
	if o == nil || IsNil(o.LastDeployedById) {
		var ret string
		return ret
	}
	return *o.LastDeployedById
}

// GetLastDeployedByIdOk returns a tuple with the LastDeployedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsDetail) GetLastDeployedByIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastDeployedById) {
		return nil, false
	}
	return o.LastDeployedById, true
}

// HasLastDeployedById returns a boolean if a field has been set.
func (o *ArtifactDeploymentsDetail) HasLastDeployedById() bool {
	if o != nil && !IsNil(o.LastDeployedById) {
		return true
	}

	return false
}

// SetLastDeployedById gets a reference to the given string and assigns it to the LastDeployedById field.
func (o *ArtifactDeploymentsDetail) SetLastDeployedById(v string) {
	o.LastDeployedById = &v
}

// GetLastDeployedByName returns the LastDeployedByName field value if set, zero value otherwise.
func (o *ArtifactDeploymentsDetail) GetLastDeployedByName() string {
	if o == nil || IsNil(o.LastDeployedByName) {
		var ret string
		return ret
	}
	return *o.LastDeployedByName
}

// GetLastDeployedByNameOk returns a tuple with the LastDeployedByName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsDetail) GetLastDeployedByNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastDeployedByName) {
		return nil, false
	}
	return o.LastDeployedByName, true
}

// HasLastDeployedByName returns a boolean if a field has been set.
func (o *ArtifactDeploymentsDetail) HasLastDeployedByName() bool {
	if o != nil && !IsNil(o.LastDeployedByName) {
		return true
	}

	return false
}

// SetLastDeployedByName gets a reference to the given string and assigns it to the LastDeployedByName field.
func (o *ArtifactDeploymentsDetail) SetLastDeployedByName(v string) {
	o.LastDeployedByName = &v
}

// GetLastPipelineExecutionId returns the LastPipelineExecutionId field value if set, zero value otherwise.
func (o *ArtifactDeploymentsDetail) GetLastPipelineExecutionId() string {
	if o == nil || IsNil(o.LastPipelineExecutionId) {
		var ret string
		return ret
	}
	return *o.LastPipelineExecutionId
}

// GetLastPipelineExecutionIdOk returns a tuple with the LastPipelineExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsDetail) GetLastPipelineExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.LastPipelineExecutionId) {
		return nil, false
	}
	return o.LastPipelineExecutionId, true
}

// HasLastPipelineExecutionId returns a boolean if a field has been set.
func (o *ArtifactDeploymentsDetail) HasLastPipelineExecutionId() bool {
	if o != nil && !IsNil(o.LastPipelineExecutionId) {
		return true
	}

	return false
}

// SetLastPipelineExecutionId gets a reference to the given string and assigns it to the LastPipelineExecutionId field.
func (o *ArtifactDeploymentsDetail) SetLastPipelineExecutionId(v string) {
	o.LastPipelineExecutionId = &v
}

// GetLastPipelineExecutionName returns the LastPipelineExecutionName field value if set, zero value otherwise.
func (o *ArtifactDeploymentsDetail) GetLastPipelineExecutionName() string {
	if o == nil || IsNil(o.LastPipelineExecutionName) {
		var ret string
		return ret
	}
	return *o.LastPipelineExecutionName
}

// GetLastPipelineExecutionNameOk returns a tuple with the LastPipelineExecutionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsDetail) GetLastPipelineExecutionNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastPipelineExecutionName) {
		return nil, false
	}
	return o.LastPipelineExecutionName, true
}

// HasLastPipelineExecutionName returns a boolean if a field has been set.
func (o *ArtifactDeploymentsDetail) HasLastPipelineExecutionName() bool {
	if o != nil && !IsNil(o.LastPipelineExecutionName) {
		return true
	}

	return false
}

// SetLastPipelineExecutionName gets a reference to the given string and assigns it to the LastPipelineExecutionName field.
func (o *ArtifactDeploymentsDetail) SetLastPipelineExecutionName(v string) {
	o.LastPipelineExecutionName = &v
}

// GetOrgIdentifier returns the OrgIdentifier field value if set, zero value otherwise.
func (o *ArtifactDeploymentsDetail) GetOrgIdentifier() string {
	if o == nil || IsNil(o.OrgIdentifier) {
		var ret string
		return ret
	}
	return *o.OrgIdentifier
}

// GetOrgIdentifierOk returns a tuple with the OrgIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsDetail) GetOrgIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.OrgIdentifier) {
		return nil, false
	}
	return o.OrgIdentifier, true
}

// HasOrgIdentifier returns a boolean if a field has been set.
func (o *ArtifactDeploymentsDetail) HasOrgIdentifier() bool {
	if o != nil && !IsNil(o.OrgIdentifier) {
		return true
	}

	return false
}

// SetOrgIdentifier gets a reference to the given string and assigns it to the OrgIdentifier field.
func (o *ArtifactDeploymentsDetail) SetOrgIdentifier(v string) {
	o.OrgIdentifier = &v
}

// GetPipelineId returns the PipelineId field value if set, zero value otherwise.
func (o *ArtifactDeploymentsDetail) GetPipelineId() string {
	if o == nil || IsNil(o.PipelineId) {
		var ret string
		return ret
	}
	return *o.PipelineId
}

// GetPipelineIdOk returns a tuple with the PipelineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsDetail) GetPipelineIdOk() (*string, bool) {
	if o == nil || IsNil(o.PipelineId) {
		return nil, false
	}
	return o.PipelineId, true
}

// HasPipelineId returns a boolean if a field has been set.
func (o *ArtifactDeploymentsDetail) HasPipelineId() bool {
	if o != nil && !IsNil(o.PipelineId) {
		return true
	}

	return false
}

// SetPipelineId gets a reference to the given string and assigns it to the PipelineId field.
func (o *ArtifactDeploymentsDetail) SetPipelineId(v string) {
	o.PipelineId = &v
}

// GetProjectIdentifier returns the ProjectIdentifier field value if set, zero value otherwise.
func (o *ArtifactDeploymentsDetail) GetProjectIdentifier() string {
	if o == nil || IsNil(o.ProjectIdentifier) {
		var ret string
		return ret
	}
	return *o.ProjectIdentifier
}

// GetProjectIdentifierOk returns a tuple with the ProjectIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsDetail) GetProjectIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectIdentifier) {
		return nil, false
	}
	return o.ProjectIdentifier, true
}

// HasProjectIdentifier returns a boolean if a field has been set.
func (o *ArtifactDeploymentsDetail) HasProjectIdentifier() bool {
	if o != nil && !IsNil(o.ProjectIdentifier) {
		return true
	}

	return false
}

// SetProjectIdentifier gets a reference to the given string and assigns it to the ProjectIdentifier field.
func (o *ArtifactDeploymentsDetail) SetProjectIdentifier(v string) {
	o.ProjectIdentifier = &v
}

// GetServiceIdentifier returns the ServiceIdentifier field value if set, zero value otherwise.
func (o *ArtifactDeploymentsDetail) GetServiceIdentifier() string {
	if o == nil || IsNil(o.ServiceIdentifier) {
		var ret string
		return ret
	}
	return *o.ServiceIdentifier
}

// GetServiceIdentifierOk returns a tuple with the ServiceIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsDetail) GetServiceIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceIdentifier) {
		return nil, false
	}
	return o.ServiceIdentifier, true
}

// HasServiceIdentifier returns a boolean if a field has been set.
func (o *ArtifactDeploymentsDetail) HasServiceIdentifier() bool {
	if o != nil && !IsNil(o.ServiceIdentifier) {
		return true
	}

	return false
}

// SetServiceIdentifier gets a reference to the given string and assigns it to the ServiceIdentifier field.
func (o *ArtifactDeploymentsDetail) SetServiceIdentifier(v string) {
	o.ServiceIdentifier = &v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *ArtifactDeploymentsDetail) GetServiceName() string {
	if o == nil || IsNil(o.ServiceName) {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsDetail) GetServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceName) {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *ArtifactDeploymentsDetail) HasServiceName() bool {
	if o != nil && !IsNil(o.ServiceName) {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *ArtifactDeploymentsDetail) SetServiceName(v string) {
	o.ServiceName = &v
}

func (o ArtifactDeploymentsDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArtifactDeploymentsDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.EnvIdentifier) {
		toSerialize["envIdentifier"] = o.EnvIdentifier
	}
	if !IsNil(o.EnvName) {
		toSerialize["envName"] = o.EnvName
	}
	if !IsNil(o.EnvType) {
		toSerialize["envType"] = o.EnvType
	}
	if !IsNil(o.InfraIdentifier) {
		toSerialize["infraIdentifier"] = o.InfraIdentifier
	}
	if !IsNil(o.InfraName) {
		toSerialize["infraName"] = o.InfraName
	}
	if !IsNil(o.LastDeployedAt) {
		toSerialize["lastDeployedAt"] = o.LastDeployedAt
	}
	if !IsNil(o.LastDeployedById) {
		toSerialize["lastDeployedById"] = o.LastDeployedById
	}
	if !IsNil(o.LastDeployedByName) {
		toSerialize["lastDeployedByName"] = o.LastDeployedByName
	}
	if !IsNil(o.LastPipelineExecutionId) {
		toSerialize["lastPipelineExecutionId"] = o.LastPipelineExecutionId
	}
	if !IsNil(o.LastPipelineExecutionName) {
		toSerialize["lastPipelineExecutionName"] = o.LastPipelineExecutionName
	}
	if !IsNil(o.OrgIdentifier) {
		toSerialize["orgIdentifier"] = o.OrgIdentifier
	}
	if !IsNil(o.PipelineId) {
		toSerialize["pipelineId"] = o.PipelineId
	}
	if !IsNil(o.ProjectIdentifier) {
		toSerialize["projectIdentifier"] = o.ProjectIdentifier
	}
	if !IsNil(o.ServiceIdentifier) {
		toSerialize["serviceIdentifier"] = o.ServiceIdentifier
	}
	if !IsNil(o.ServiceName) {
		toSerialize["serviceName"] = o.ServiceName
	}
	return toSerialize, nil
}

type NullableArtifactDeploymentsDetail struct {
	value *ArtifactDeploymentsDetail
	isSet bool
}

func (v NullableArtifactDeploymentsDetail) Get() *ArtifactDeploymentsDetail {
	return v.value
}

func (v *NullableArtifactDeploymentsDetail) Set(val *ArtifactDeploymentsDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableArtifactDeploymentsDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableArtifactDeploymentsDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtifactDeploymentsDetail(val *ArtifactDeploymentsDetail) *NullableArtifactDeploymentsDetail {
	return &NullableArtifactDeploymentsDetail{value: val, isSet: true}
}

func (v NullableArtifactDeploymentsDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtifactDeploymentsDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


