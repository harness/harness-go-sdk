/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
)

// checks if the ArtifactDeploymentsList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArtifactDeploymentsList{}

// ArtifactDeploymentsList A list of Artifact Deployments
type ArtifactDeploymentsList struct {
	// A list of Artifact
	Deployments []ArtifactDeploymentsDetail `json:"deployments,omitempty"`
	// The total number of items
	ItemCount *int64 `json:"itemCount,omitempty"`
	// The total number of pages
	PageCount *int64 `json:"pageCount,omitempty"`
	// The current page
	PageIndex *int64 `json:"pageIndex,omitempty"`
	// The number of items per page
	PageSize *int32 `json:"pageSize,omitempty"`
}

// NewArtifactDeploymentsList instantiates a new ArtifactDeploymentsList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtifactDeploymentsList() *ArtifactDeploymentsList {
	this := ArtifactDeploymentsList{}
	return &this
}

// NewArtifactDeploymentsListWithDefaults instantiates a new ArtifactDeploymentsList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtifactDeploymentsListWithDefaults() *ArtifactDeploymentsList {
	this := ArtifactDeploymentsList{}
	return &this
}

// GetDeployments returns the Deployments field value if set, zero value otherwise.
func (o *ArtifactDeploymentsList) GetDeployments() []ArtifactDeploymentsDetail {
	if o == nil || IsNil(o.Deployments) {
		var ret []ArtifactDeploymentsDetail
		return ret
	}
	return o.Deployments
}

// GetDeploymentsOk returns a tuple with the Deployments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsList) GetDeploymentsOk() ([]ArtifactDeploymentsDetail, bool) {
	if o == nil || IsNil(o.Deployments) {
		return nil, false
	}
	return o.Deployments, true
}

// HasDeployments returns a boolean if a field has been set.
func (o *ArtifactDeploymentsList) HasDeployments() bool {
	if o != nil && !IsNil(o.Deployments) {
		return true
	}

	return false
}

// SetDeployments gets a reference to the given []ArtifactDeploymentsDetail and assigns it to the Deployments field.
func (o *ArtifactDeploymentsList) SetDeployments(v []ArtifactDeploymentsDetail) {
	o.Deployments = v
}

// GetItemCount returns the ItemCount field value if set, zero value otherwise.
func (o *ArtifactDeploymentsList) GetItemCount() int64 {
	if o == nil || IsNil(o.ItemCount) {
		var ret int64
		return ret
	}
	return *o.ItemCount
}

// GetItemCountOk returns a tuple with the ItemCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsList) GetItemCountOk() (*int64, bool) {
	if o == nil || IsNil(o.ItemCount) {
		return nil, false
	}
	return o.ItemCount, true
}

// HasItemCount returns a boolean if a field has been set.
func (o *ArtifactDeploymentsList) HasItemCount() bool {
	if o != nil && !IsNil(o.ItemCount) {
		return true
	}

	return false
}

// SetItemCount gets a reference to the given int64 and assigns it to the ItemCount field.
func (o *ArtifactDeploymentsList) SetItemCount(v int64) {
	o.ItemCount = &v
}

// GetPageCount returns the PageCount field value if set, zero value otherwise.
func (o *ArtifactDeploymentsList) GetPageCount() int64 {
	if o == nil || IsNil(o.PageCount) {
		var ret int64
		return ret
	}
	return *o.PageCount
}

// GetPageCountOk returns a tuple with the PageCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsList) GetPageCountOk() (*int64, bool) {
	if o == nil || IsNil(o.PageCount) {
		return nil, false
	}
	return o.PageCount, true
}

// HasPageCount returns a boolean if a field has been set.
func (o *ArtifactDeploymentsList) HasPageCount() bool {
	if o != nil && !IsNil(o.PageCount) {
		return true
	}

	return false
}

// SetPageCount gets a reference to the given int64 and assigns it to the PageCount field.
func (o *ArtifactDeploymentsList) SetPageCount(v int64) {
	o.PageCount = &v
}

// GetPageIndex returns the PageIndex field value if set, zero value otherwise.
func (o *ArtifactDeploymentsList) GetPageIndex() int64 {
	if o == nil || IsNil(o.PageIndex) {
		var ret int64
		return ret
	}
	return *o.PageIndex
}

// GetPageIndexOk returns a tuple with the PageIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsList) GetPageIndexOk() (*int64, bool) {
	if o == nil || IsNil(o.PageIndex) {
		return nil, false
	}
	return o.PageIndex, true
}

// HasPageIndex returns a boolean if a field has been set.
func (o *ArtifactDeploymentsList) HasPageIndex() bool {
	if o != nil && !IsNil(o.PageIndex) {
		return true
	}

	return false
}

// SetPageIndex gets a reference to the given int64 and assigns it to the PageIndex field.
func (o *ArtifactDeploymentsList) SetPageIndex(v int64) {
	o.PageIndex = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *ArtifactDeploymentsList) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactDeploymentsList) GetPageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *ArtifactDeploymentsList) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *ArtifactDeploymentsList) SetPageSize(v int32) {
	o.PageSize = &v
}

func (o ArtifactDeploymentsList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArtifactDeploymentsList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Deployments) {
		toSerialize["deployments"] = o.Deployments
	}
	if !IsNil(o.ItemCount) {
		toSerialize["itemCount"] = o.ItemCount
	}
	if !IsNil(o.PageCount) {
		toSerialize["pageCount"] = o.PageCount
	}
	if !IsNil(o.PageIndex) {
		toSerialize["pageIndex"] = o.PageIndex
	}
	if !IsNil(o.PageSize) {
		toSerialize["pageSize"] = o.PageSize
	}
	return toSerialize, nil
}

type NullableArtifactDeploymentsList struct {
	value *ArtifactDeploymentsList
	isSet bool
}

func (v NullableArtifactDeploymentsList) Get() *ArtifactDeploymentsList {
	return v.value
}

func (v *NullableArtifactDeploymentsList) Set(val *ArtifactDeploymentsList) {
	v.value = val
	v.isSet = true
}

func (v NullableArtifactDeploymentsList) IsSet() bool {
	return v.isSet
}

func (v *NullableArtifactDeploymentsList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtifactDeploymentsList(val *ArtifactDeploymentsList) *NullableArtifactDeploymentsList {
	return &NullableArtifactDeploymentsList{value: val, isSet: true}
}

func (v NullableArtifactDeploymentsList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtifactDeploymentsList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


