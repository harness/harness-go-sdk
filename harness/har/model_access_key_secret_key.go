/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AccessKeySecretKey type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessKeySecretKey{}

// AccessKeySecretKey struct for AccessKeySecretKey
type AccessKeySecretKey struct {
	AccessKey *string `json:"accessKey,omitempty"`
	AccessKeySecretIdentifier *string `json:"accessKeySecretIdentifier,omitempty"`
	AccessKeySecretSpaceId *int64 `json:"accessKeySecretSpaceId,omitempty"`
	AccessKeySecretSpacePath *string `json:"accessKeySecretSpacePath,omitempty"`
	SecretKeyIdentifier string `json:"secretKeyIdentifier"`
	SecretKeySpaceId *int64 `json:"secretKeySpaceId,omitempty"`
	SecretKeySpacePath *string `json:"secretKeySpacePath,omitempty"`
}

type _AccessKeySecretKey AccessKeySecretKey

// NewAccessKeySecretKey instantiates a new AccessKeySecretKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessKeySecretKey(secretKeyIdentifier string) *AccessKeySecretKey {
	this := AccessKeySecretKey{}
	this.SecretKeyIdentifier = secretKeyIdentifier
	return &this
}

// NewAccessKeySecretKeyWithDefaults instantiates a new AccessKeySecretKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessKeySecretKeyWithDefaults() *AccessKeySecretKey {
	this := AccessKeySecretKey{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *AccessKeySecretKey) GetAccessKey() string {
	if o == nil || IsNil(o.AccessKey) {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeySecretKey) GetAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKey) {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *AccessKeySecretKey) HasAccessKey() bool {
	if o != nil && !IsNil(o.AccessKey) {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *AccessKeySecretKey) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetAccessKeySecretIdentifier returns the AccessKeySecretIdentifier field value if set, zero value otherwise.
func (o *AccessKeySecretKey) GetAccessKeySecretIdentifier() string {
	if o == nil || IsNil(o.AccessKeySecretIdentifier) {
		var ret string
		return ret
	}
	return *o.AccessKeySecretIdentifier
}

// GetAccessKeySecretIdentifierOk returns a tuple with the AccessKeySecretIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeySecretKey) GetAccessKeySecretIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKeySecretIdentifier) {
		return nil, false
	}
	return o.AccessKeySecretIdentifier, true
}

// HasAccessKeySecretIdentifier returns a boolean if a field has been set.
func (o *AccessKeySecretKey) HasAccessKeySecretIdentifier() bool {
	if o != nil && !IsNil(o.AccessKeySecretIdentifier) {
		return true
	}

	return false
}

// SetAccessKeySecretIdentifier gets a reference to the given string and assigns it to the AccessKeySecretIdentifier field.
func (o *AccessKeySecretKey) SetAccessKeySecretIdentifier(v string) {
	o.AccessKeySecretIdentifier = &v
}

// GetAccessKeySecretSpaceId returns the AccessKeySecretSpaceId field value if set, zero value otherwise.
func (o *AccessKeySecretKey) GetAccessKeySecretSpaceId() int64 {
	if o == nil || IsNil(o.AccessKeySecretSpaceId) {
		var ret int64
		return ret
	}
	return *o.AccessKeySecretSpaceId
}

// GetAccessKeySecretSpaceIdOk returns a tuple with the AccessKeySecretSpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeySecretKey) GetAccessKeySecretSpaceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.AccessKeySecretSpaceId) {
		return nil, false
	}
	return o.AccessKeySecretSpaceId, true
}

// HasAccessKeySecretSpaceId returns a boolean if a field has been set.
func (o *AccessKeySecretKey) HasAccessKeySecretSpaceId() bool {
	if o != nil && !IsNil(o.AccessKeySecretSpaceId) {
		return true
	}

	return false
}

// SetAccessKeySecretSpaceId gets a reference to the given int64 and assigns it to the AccessKeySecretSpaceId field.
func (o *AccessKeySecretKey) SetAccessKeySecretSpaceId(v int64) {
	o.AccessKeySecretSpaceId = &v
}

// GetAccessKeySecretSpacePath returns the AccessKeySecretSpacePath field value if set, zero value otherwise.
func (o *AccessKeySecretKey) GetAccessKeySecretSpacePath() string {
	if o == nil || IsNil(o.AccessKeySecretSpacePath) {
		var ret string
		return ret
	}
	return *o.AccessKeySecretSpacePath
}

// GetAccessKeySecretSpacePathOk returns a tuple with the AccessKeySecretSpacePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeySecretKey) GetAccessKeySecretSpacePathOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKeySecretSpacePath) {
		return nil, false
	}
	return o.AccessKeySecretSpacePath, true
}

// HasAccessKeySecretSpacePath returns a boolean if a field has been set.
func (o *AccessKeySecretKey) HasAccessKeySecretSpacePath() bool {
	if o != nil && !IsNil(o.AccessKeySecretSpacePath) {
		return true
	}

	return false
}

// SetAccessKeySecretSpacePath gets a reference to the given string and assigns it to the AccessKeySecretSpacePath field.
func (o *AccessKeySecretKey) SetAccessKeySecretSpacePath(v string) {
	o.AccessKeySecretSpacePath = &v
}

// GetSecretKeyIdentifier returns the SecretKeyIdentifier field value
func (o *AccessKeySecretKey) GetSecretKeyIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecretKeyIdentifier
}

// GetSecretKeyIdentifierOk returns a tuple with the SecretKeyIdentifier field value
// and a boolean to check if the value has been set.
func (o *AccessKeySecretKey) GetSecretKeyIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretKeyIdentifier, true
}

// SetSecretKeyIdentifier sets field value
func (o *AccessKeySecretKey) SetSecretKeyIdentifier(v string) {
	o.SecretKeyIdentifier = v
}

// GetSecretKeySpaceId returns the SecretKeySpaceId field value if set, zero value otherwise.
func (o *AccessKeySecretKey) GetSecretKeySpaceId() int64 {
	if o == nil || IsNil(o.SecretKeySpaceId) {
		var ret int64
		return ret
	}
	return *o.SecretKeySpaceId
}

// GetSecretKeySpaceIdOk returns a tuple with the SecretKeySpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeySecretKey) GetSecretKeySpaceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SecretKeySpaceId) {
		return nil, false
	}
	return o.SecretKeySpaceId, true
}

// HasSecretKeySpaceId returns a boolean if a field has been set.
func (o *AccessKeySecretKey) HasSecretKeySpaceId() bool {
	if o != nil && !IsNil(o.SecretKeySpaceId) {
		return true
	}

	return false
}

// SetSecretKeySpaceId gets a reference to the given int64 and assigns it to the SecretKeySpaceId field.
func (o *AccessKeySecretKey) SetSecretKeySpaceId(v int64) {
	o.SecretKeySpaceId = &v
}

// GetSecretKeySpacePath returns the SecretKeySpacePath field value if set, zero value otherwise.
func (o *AccessKeySecretKey) GetSecretKeySpacePath() string {
	if o == nil || IsNil(o.SecretKeySpacePath) {
		var ret string
		return ret
	}
	return *o.SecretKeySpacePath
}

// GetSecretKeySpacePathOk returns a tuple with the SecretKeySpacePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessKeySecretKey) GetSecretKeySpacePathOk() (*string, bool) {
	if o == nil || IsNil(o.SecretKeySpacePath) {
		return nil, false
	}
	return o.SecretKeySpacePath, true
}

// HasSecretKeySpacePath returns a boolean if a field has been set.
func (o *AccessKeySecretKey) HasSecretKeySpacePath() bool {
	if o != nil && !IsNil(o.SecretKeySpacePath) {
		return true
	}

	return false
}

// SetSecretKeySpacePath gets a reference to the given string and assigns it to the SecretKeySpacePath field.
func (o *AccessKeySecretKey) SetSecretKeySpacePath(v string) {
	o.SecretKeySpacePath = &v
}

func (o AccessKeySecretKey) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessKeySecretKey) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessKey) {
		toSerialize["accessKey"] = o.AccessKey
	}
	if !IsNil(o.AccessKeySecretIdentifier) {
		toSerialize["accessKeySecretIdentifier"] = o.AccessKeySecretIdentifier
	}
	if !IsNil(o.AccessKeySecretSpaceId) {
		toSerialize["accessKeySecretSpaceId"] = o.AccessKeySecretSpaceId
	}
	if !IsNil(o.AccessKeySecretSpacePath) {
		toSerialize["accessKeySecretSpacePath"] = o.AccessKeySecretSpacePath
	}
	toSerialize["secretKeyIdentifier"] = o.SecretKeyIdentifier
	if !IsNil(o.SecretKeySpaceId) {
		toSerialize["secretKeySpaceId"] = o.SecretKeySpaceId
	}
	if !IsNil(o.SecretKeySpacePath) {
		toSerialize["secretKeySpacePath"] = o.SecretKeySpacePath
	}
	return toSerialize, nil
}

func (o *AccessKeySecretKey) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"secretKeyIdentifier",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAccessKeySecretKey := _AccessKeySecretKey{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAccessKeySecretKey)

	if err != nil {
		return err
	}

	*o = AccessKeySecretKey(varAccessKeySecretKey)

	return err
}

type NullableAccessKeySecretKey struct {
	value *AccessKeySecretKey
	isSet bool
}

func (v NullableAccessKeySecretKey) Get() *AccessKeySecretKey {
	return v.value
}

func (v *NullableAccessKeySecretKey) Set(val *AccessKeySecretKey) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessKeySecretKey) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessKeySecretKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessKeySecretKey(val *AccessKeySecretKey) *NullableAccessKeySecretKey {
	return &NullableAccessKeySecretKey{value: val, isSet: true}
}

func (v NullableAccessKeySecretKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessKeySecretKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


