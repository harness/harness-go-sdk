/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
)

// checks if the STODetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &STODetails{}

// STODetails struct for STODetails
type STODetails struct {
	Critical *int32 `json:"critical,omitempty"`
	ExecutionId *string `json:"executionId,omitempty"`
	High *int32 `json:"high,omitempty"`
	Ignored *int32 `json:"ignored,omitempty"`
	Info *int32 `json:"info,omitempty"`
	LastScanned *string `json:"lastScanned,omitempty"`
	Low *int32 `json:"low,omitempty"`
	Medium *int32 `json:"medium,omitempty"`
	PipelineId *string `json:"pipelineId,omitempty"`
	Total *int32 `json:"total,omitempty"`
}

// NewSTODetails instantiates a new STODetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSTODetails() *STODetails {
	this := STODetails{}
	return &this
}

// NewSTODetailsWithDefaults instantiates a new STODetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSTODetailsWithDefaults() *STODetails {
	this := STODetails{}
	return &this
}

// GetCritical returns the Critical field value if set, zero value otherwise.
func (o *STODetails) GetCritical() int32 {
	if o == nil || IsNil(o.Critical) {
		var ret int32
		return ret
	}
	return *o.Critical
}

// GetCriticalOk returns a tuple with the Critical field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *STODetails) GetCriticalOk() (*int32, bool) {
	if o == nil || IsNil(o.Critical) {
		return nil, false
	}
	return o.Critical, true
}

// HasCritical returns a boolean if a field has been set.
func (o *STODetails) HasCritical() bool {
	if o != nil && !IsNil(o.Critical) {
		return true
	}

	return false
}

// SetCritical gets a reference to the given int32 and assigns it to the Critical field.
func (o *STODetails) SetCritical(v int32) {
	o.Critical = &v
}

// GetExecutionId returns the ExecutionId field value if set, zero value otherwise.
func (o *STODetails) GetExecutionId() string {
	if o == nil || IsNil(o.ExecutionId) {
		var ret string
		return ret
	}
	return *o.ExecutionId
}

// GetExecutionIdOk returns a tuple with the ExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *STODetails) GetExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutionId) {
		return nil, false
	}
	return o.ExecutionId, true
}

// HasExecutionId returns a boolean if a field has been set.
func (o *STODetails) HasExecutionId() bool {
	if o != nil && !IsNil(o.ExecutionId) {
		return true
	}

	return false
}

// SetExecutionId gets a reference to the given string and assigns it to the ExecutionId field.
func (o *STODetails) SetExecutionId(v string) {
	o.ExecutionId = &v
}

// GetHigh returns the High field value if set, zero value otherwise.
func (o *STODetails) GetHigh() int32 {
	if o == nil || IsNil(o.High) {
		var ret int32
		return ret
	}
	return *o.High
}

// GetHighOk returns a tuple with the High field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *STODetails) GetHighOk() (*int32, bool) {
	if o == nil || IsNil(o.High) {
		return nil, false
	}
	return o.High, true
}

// HasHigh returns a boolean if a field has been set.
func (o *STODetails) HasHigh() bool {
	if o != nil && !IsNil(o.High) {
		return true
	}

	return false
}

// SetHigh gets a reference to the given int32 and assigns it to the High field.
func (o *STODetails) SetHigh(v int32) {
	o.High = &v
}

// GetIgnored returns the Ignored field value if set, zero value otherwise.
func (o *STODetails) GetIgnored() int32 {
	if o == nil || IsNil(o.Ignored) {
		var ret int32
		return ret
	}
	return *o.Ignored
}

// GetIgnoredOk returns a tuple with the Ignored field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *STODetails) GetIgnoredOk() (*int32, bool) {
	if o == nil || IsNil(o.Ignored) {
		return nil, false
	}
	return o.Ignored, true
}

// HasIgnored returns a boolean if a field has been set.
func (o *STODetails) HasIgnored() bool {
	if o != nil && !IsNil(o.Ignored) {
		return true
	}

	return false
}

// SetIgnored gets a reference to the given int32 and assigns it to the Ignored field.
func (o *STODetails) SetIgnored(v int32) {
	o.Ignored = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *STODetails) GetInfo() int32 {
	if o == nil || IsNil(o.Info) {
		var ret int32
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *STODetails) GetInfoOk() (*int32, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *STODetails) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given int32 and assigns it to the Info field.
func (o *STODetails) SetInfo(v int32) {
	o.Info = &v
}

// GetLastScanned returns the LastScanned field value if set, zero value otherwise.
func (o *STODetails) GetLastScanned() string {
	if o == nil || IsNil(o.LastScanned) {
		var ret string
		return ret
	}
	return *o.LastScanned
}

// GetLastScannedOk returns a tuple with the LastScanned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *STODetails) GetLastScannedOk() (*string, bool) {
	if o == nil || IsNil(o.LastScanned) {
		return nil, false
	}
	return o.LastScanned, true
}

// HasLastScanned returns a boolean if a field has been set.
func (o *STODetails) HasLastScanned() bool {
	if o != nil && !IsNil(o.LastScanned) {
		return true
	}

	return false
}

// SetLastScanned gets a reference to the given string and assigns it to the LastScanned field.
func (o *STODetails) SetLastScanned(v string) {
	o.LastScanned = &v
}

// GetLow returns the Low field value if set, zero value otherwise.
func (o *STODetails) GetLow() int32 {
	if o == nil || IsNil(o.Low) {
		var ret int32
		return ret
	}
	return *o.Low
}

// GetLowOk returns a tuple with the Low field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *STODetails) GetLowOk() (*int32, bool) {
	if o == nil || IsNil(o.Low) {
		return nil, false
	}
	return o.Low, true
}

// HasLow returns a boolean if a field has been set.
func (o *STODetails) HasLow() bool {
	if o != nil && !IsNil(o.Low) {
		return true
	}

	return false
}

// SetLow gets a reference to the given int32 and assigns it to the Low field.
func (o *STODetails) SetLow(v int32) {
	o.Low = &v
}

// GetMedium returns the Medium field value if set, zero value otherwise.
func (o *STODetails) GetMedium() int32 {
	if o == nil || IsNil(o.Medium) {
		var ret int32
		return ret
	}
	return *o.Medium
}

// GetMediumOk returns a tuple with the Medium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *STODetails) GetMediumOk() (*int32, bool) {
	if o == nil || IsNil(o.Medium) {
		return nil, false
	}
	return o.Medium, true
}

// HasMedium returns a boolean if a field has been set.
func (o *STODetails) HasMedium() bool {
	if o != nil && !IsNil(o.Medium) {
		return true
	}

	return false
}

// SetMedium gets a reference to the given int32 and assigns it to the Medium field.
func (o *STODetails) SetMedium(v int32) {
	o.Medium = &v
}

// GetPipelineId returns the PipelineId field value if set, zero value otherwise.
func (o *STODetails) GetPipelineId() string {
	if o == nil || IsNil(o.PipelineId) {
		var ret string
		return ret
	}
	return *o.PipelineId
}

// GetPipelineIdOk returns a tuple with the PipelineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *STODetails) GetPipelineIdOk() (*string, bool) {
	if o == nil || IsNil(o.PipelineId) {
		return nil, false
	}
	return o.PipelineId, true
}

// HasPipelineId returns a boolean if a field has been set.
func (o *STODetails) HasPipelineId() bool {
	if o != nil && !IsNil(o.PipelineId) {
		return true
	}

	return false
}

// SetPipelineId gets a reference to the given string and assigns it to the PipelineId field.
func (o *STODetails) SetPipelineId(v string) {
	o.PipelineId = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *STODetails) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *STODetails) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *STODetails) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *STODetails) SetTotal(v int32) {
	o.Total = &v
}

func (o STODetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o STODetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Critical) {
		toSerialize["critical"] = o.Critical
	}
	if !IsNil(o.ExecutionId) {
		toSerialize["executionId"] = o.ExecutionId
	}
	if !IsNil(o.High) {
		toSerialize["high"] = o.High
	}
	if !IsNil(o.Ignored) {
		toSerialize["ignored"] = o.Ignored
	}
	if !IsNil(o.Info) {
		toSerialize["info"] = o.Info
	}
	if !IsNil(o.LastScanned) {
		toSerialize["lastScanned"] = o.LastScanned
	}
	if !IsNil(o.Low) {
		toSerialize["low"] = o.Low
	}
	if !IsNil(o.Medium) {
		toSerialize["medium"] = o.Medium
	}
	if !IsNil(o.PipelineId) {
		toSerialize["pipelineId"] = o.PipelineId
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableSTODetails struct {
	value *STODetails
	isSet bool
}

func (v NullableSTODetails) Get() *STODetails {
	return v.value
}

func (v *NullableSTODetails) Set(val *STODetails) {
	v.value = val
	v.isSet = true
}

func (v NullableSTODetails) IsSet() bool {
	return v.isSet
}

func (v *NullableSTODetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSTODetails(val *STODetails) *NullableSTODetails {
	return &NullableSTODetails{value: val, isSet: true}
}

func (v NullableSTODetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSTODetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


