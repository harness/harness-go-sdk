/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
)

// checks if the MigrationImage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MigrationImage{}

// MigrationImage struct for MigrationImage
type MigrationImage struct {
	ImageId *string `json:"imageId,omitempty"`
	ImageTag *string `json:"imageTag,omitempty"`
	Progress *int32 `json:"progress,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewMigrationImage instantiates a new MigrationImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMigrationImage() *MigrationImage {
	this := MigrationImage{}
	return &this
}

// NewMigrationImageWithDefaults instantiates a new MigrationImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMigrationImageWithDefaults() *MigrationImage {
	this := MigrationImage{}
	return &this
}

// GetImageId returns the ImageId field value if set, zero value otherwise.
func (o *MigrationImage) GetImageId() string {
	if o == nil || IsNil(o.ImageId) {
		var ret string
		return ret
	}
	return *o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationImage) GetImageIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImageId) {
		return nil, false
	}
	return o.ImageId, true
}

// HasImageId returns a boolean if a field has been set.
func (o *MigrationImage) HasImageId() bool {
	if o != nil && !IsNil(o.ImageId) {
		return true
	}

	return false
}

// SetImageId gets a reference to the given string and assigns it to the ImageId field.
func (o *MigrationImage) SetImageId(v string) {
	o.ImageId = &v
}

// GetImageTag returns the ImageTag field value if set, zero value otherwise.
func (o *MigrationImage) GetImageTag() string {
	if o == nil || IsNil(o.ImageTag) {
		var ret string
		return ret
	}
	return *o.ImageTag
}

// GetImageTagOk returns a tuple with the ImageTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationImage) GetImageTagOk() (*string, bool) {
	if o == nil || IsNil(o.ImageTag) {
		return nil, false
	}
	return o.ImageTag, true
}

// HasImageTag returns a boolean if a field has been set.
func (o *MigrationImage) HasImageTag() bool {
	if o != nil && !IsNil(o.ImageTag) {
		return true
	}

	return false
}

// SetImageTag gets a reference to the given string and assigns it to the ImageTag field.
func (o *MigrationImage) SetImageTag(v string) {
	o.ImageTag = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *MigrationImage) GetProgress() int32 {
	if o == nil || IsNil(o.Progress) {
		var ret int32
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationImage) GetProgressOk() (*int32, bool) {
	if o == nil || IsNil(o.Progress) {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *MigrationImage) HasProgress() bool {
	if o != nil && !IsNil(o.Progress) {
		return true
	}

	return false
}

// SetProgress gets a reference to the given int32 and assigns it to the Progress field.
func (o *MigrationImage) SetProgress(v int32) {
	o.Progress = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MigrationImage) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationImage) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MigrationImage) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MigrationImage) SetStatus(v string) {
	o.Status = &v
}

func (o MigrationImage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MigrationImage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ImageId) {
		toSerialize["imageId"] = o.ImageId
	}
	if !IsNil(o.ImageTag) {
		toSerialize["imageTag"] = o.ImageTag
	}
	if !IsNil(o.Progress) {
		toSerialize["progress"] = o.Progress
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableMigrationImage struct {
	value *MigrationImage
	isSet bool
}

func (v NullableMigrationImage) Get() *MigrationImage {
	return v.value
}

func (v *NullableMigrationImage) Set(val *MigrationImage) {
	v.value = val
	v.isSet = true
}

func (v NullableMigrationImage) IsSet() bool {
	return v.isSet
}

func (v *NullableMigrationImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMigrationImage(val *MigrationImage) *NullableMigrationImage {
	return &NullableMigrationImage{value: val, isSet: true}
}

func (v NullableMigrationImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMigrationImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


