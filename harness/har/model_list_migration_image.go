/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListMigrationImage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListMigrationImage{}

// ListMigrationImage A list of migration images
type ListMigrationImage struct {
	// A list of Artifact versions
	Images []MigrationImage `json:"images"`
	// The total number of items
	ItemCount int64 `json:"itemCount"`
	// The total number of pages
	PageCount int64 `json:"pageCount"`
	// The current page
	PageIndex int64 `json:"pageIndex"`
	// The number of items per page
	PageSize int32 `json:"pageSize"`
}

type _ListMigrationImage ListMigrationImage

// NewListMigrationImage instantiates a new ListMigrationImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListMigrationImage(images []MigrationImage, itemCount int64, pageCount int64, pageIndex int64, pageSize int32) *ListMigrationImage {
	this := ListMigrationImage{}
	this.Images = images
	this.ItemCount = itemCount
	this.PageCount = pageCount
	this.PageIndex = pageIndex
	this.PageSize = pageSize
	return &this
}

// NewListMigrationImageWithDefaults instantiates a new ListMigrationImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListMigrationImageWithDefaults() *ListMigrationImage {
	this := ListMigrationImage{}
	return &this
}

// GetImages returns the Images field value
func (o *ListMigrationImage) GetImages() []MigrationImage {
	if o == nil {
		var ret []MigrationImage
		return ret
	}

	return o.Images
}

// GetImagesOk returns a tuple with the Images field value
// and a boolean to check if the value has been set.
func (o *ListMigrationImage) GetImagesOk() ([]MigrationImage, bool) {
	if o == nil {
		return nil, false
	}
	return o.Images, true
}

// SetImages sets field value
func (o *ListMigrationImage) SetImages(v []MigrationImage) {
	o.Images = v
}

// GetItemCount returns the ItemCount field value
func (o *ListMigrationImage) GetItemCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ItemCount
}

// GetItemCountOk returns a tuple with the ItemCount field value
// and a boolean to check if the value has been set.
func (o *ListMigrationImage) GetItemCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ItemCount, true
}

// SetItemCount sets field value
func (o *ListMigrationImage) SetItemCount(v int64) {
	o.ItemCount = v
}

// GetPageCount returns the PageCount field value
func (o *ListMigrationImage) GetPageCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PageCount
}

// GetPageCountOk returns a tuple with the PageCount field value
// and a boolean to check if the value has been set.
func (o *ListMigrationImage) GetPageCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageCount, true
}

// SetPageCount sets field value
func (o *ListMigrationImage) SetPageCount(v int64) {
	o.PageCount = v
}

// GetPageIndex returns the PageIndex field value
func (o *ListMigrationImage) GetPageIndex() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PageIndex
}

// GetPageIndexOk returns a tuple with the PageIndex field value
// and a boolean to check if the value has been set.
func (o *ListMigrationImage) GetPageIndexOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageIndex, true
}

// SetPageIndex sets field value
func (o *ListMigrationImage) SetPageIndex(v int64) {
	o.PageIndex = v
}

// GetPageSize returns the PageSize field value
func (o *ListMigrationImage) GetPageSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *ListMigrationImage) GetPageSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *ListMigrationImage) SetPageSize(v int32) {
	o.PageSize = v
}

func (o ListMigrationImage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListMigrationImage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["images"] = o.Images
	toSerialize["itemCount"] = o.ItemCount
	toSerialize["pageCount"] = o.PageCount
	toSerialize["pageIndex"] = o.PageIndex
	toSerialize["pageSize"] = o.PageSize
	return toSerialize, nil
}

func (o *ListMigrationImage) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"images",
		"itemCount",
		"pageCount",
		"pageIndex",
		"pageSize",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListMigrationImage := _ListMigrationImage{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListMigrationImage)

	if err != nil {
		return err
	}

	*o = ListMigrationImage(varListMigrationImage)

	return err
}

type NullableListMigrationImage struct {
	value *ListMigrationImage
	isSet bool
}

func (v NullableListMigrationImage) Get() *ListMigrationImage {
	return v.value
}

func (v *NullableListMigrationImage) Set(val *ListMigrationImage) {
	v.value = val
	v.isSet = true
}

func (v NullableListMigrationImage) IsSet() bool {
	return v.isSet
}

func (v *NullableListMigrationImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListMigrationImage(val *ListMigrationImage) *NullableListMigrationImage {
	return &NullableListMigrationImage{value: val, isSet: true}
}

func (v NullableListMigrationImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListMigrationImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


