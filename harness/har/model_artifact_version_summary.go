/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ArtifactVersionSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArtifactVersionSummary{}

// ArtifactVersionSummary Docker Artifact Version Summary
type ArtifactVersionSummary struct {
	ImageName string `json:"imageName"`
	PackageType PackageType `json:"packageType"`
	SscaArtifactId *string `json:"sscaArtifactId,omitempty"`
	SscaArtifactSourceId *string `json:"sscaArtifactSourceId,omitempty"`
	StoExecutionId *string `json:"stoExecutionId,omitempty"`
	StoPipelineId *string `json:"stoPipelineId,omitempty"`
	Version string `json:"version"`
}

type _ArtifactVersionSummary ArtifactVersionSummary

// NewArtifactVersionSummary instantiates a new ArtifactVersionSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtifactVersionSummary(imageName string, packageType PackageType, version string) *ArtifactVersionSummary {
	this := ArtifactVersionSummary{}
	this.ImageName = imageName
	this.PackageType = packageType
	this.Version = version
	return &this
}

// NewArtifactVersionSummaryWithDefaults instantiates a new ArtifactVersionSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtifactVersionSummaryWithDefaults() *ArtifactVersionSummary {
	this := ArtifactVersionSummary{}
	return &this
}

// GetImageName returns the ImageName field value
func (o *ArtifactVersionSummary) GetImageName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value
// and a boolean to check if the value has been set.
func (o *ArtifactVersionSummary) GetImageNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageName, true
}

// SetImageName sets field value
func (o *ArtifactVersionSummary) SetImageName(v string) {
	o.ImageName = v
}

// GetPackageType returns the PackageType field value
func (o *ArtifactVersionSummary) GetPackageType() PackageType {
	if o == nil {
		var ret PackageType
		return ret
	}

	return o.PackageType
}

// GetPackageTypeOk returns a tuple with the PackageType field value
// and a boolean to check if the value has been set.
func (o *ArtifactVersionSummary) GetPackageTypeOk() (*PackageType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PackageType, true
}

// SetPackageType sets field value
func (o *ArtifactVersionSummary) SetPackageType(v PackageType) {
	o.PackageType = v
}

// GetSscaArtifactId returns the SscaArtifactId field value if set, zero value otherwise.
func (o *ArtifactVersionSummary) GetSscaArtifactId() string {
	if o == nil || IsNil(o.SscaArtifactId) {
		var ret string
		return ret
	}
	return *o.SscaArtifactId
}

// GetSscaArtifactIdOk returns a tuple with the SscaArtifactId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactVersionSummary) GetSscaArtifactIdOk() (*string, bool) {
	if o == nil || IsNil(o.SscaArtifactId) {
		return nil, false
	}
	return o.SscaArtifactId, true
}

// HasSscaArtifactId returns a boolean if a field has been set.
func (o *ArtifactVersionSummary) HasSscaArtifactId() bool {
	if o != nil && !IsNil(o.SscaArtifactId) {
		return true
	}

	return false
}

// SetSscaArtifactId gets a reference to the given string and assigns it to the SscaArtifactId field.
func (o *ArtifactVersionSummary) SetSscaArtifactId(v string) {
	o.SscaArtifactId = &v
}

// GetSscaArtifactSourceId returns the SscaArtifactSourceId field value if set, zero value otherwise.
func (o *ArtifactVersionSummary) GetSscaArtifactSourceId() string {
	if o == nil || IsNil(o.SscaArtifactSourceId) {
		var ret string
		return ret
	}
	return *o.SscaArtifactSourceId
}

// GetSscaArtifactSourceIdOk returns a tuple with the SscaArtifactSourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactVersionSummary) GetSscaArtifactSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SscaArtifactSourceId) {
		return nil, false
	}
	return o.SscaArtifactSourceId, true
}

// HasSscaArtifactSourceId returns a boolean if a field has been set.
func (o *ArtifactVersionSummary) HasSscaArtifactSourceId() bool {
	if o != nil && !IsNil(o.SscaArtifactSourceId) {
		return true
	}

	return false
}

// SetSscaArtifactSourceId gets a reference to the given string and assigns it to the SscaArtifactSourceId field.
func (o *ArtifactVersionSummary) SetSscaArtifactSourceId(v string) {
	o.SscaArtifactSourceId = &v
}

// GetStoExecutionId returns the StoExecutionId field value if set, zero value otherwise.
func (o *ArtifactVersionSummary) GetStoExecutionId() string {
	if o == nil || IsNil(o.StoExecutionId) {
		var ret string
		return ret
	}
	return *o.StoExecutionId
}

// GetStoExecutionIdOk returns a tuple with the StoExecutionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactVersionSummary) GetStoExecutionIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoExecutionId) {
		return nil, false
	}
	return o.StoExecutionId, true
}

// HasStoExecutionId returns a boolean if a field has been set.
func (o *ArtifactVersionSummary) HasStoExecutionId() bool {
	if o != nil && !IsNil(o.StoExecutionId) {
		return true
	}

	return false
}

// SetStoExecutionId gets a reference to the given string and assigns it to the StoExecutionId field.
func (o *ArtifactVersionSummary) SetStoExecutionId(v string) {
	o.StoExecutionId = &v
}

// GetStoPipelineId returns the StoPipelineId field value if set, zero value otherwise.
func (o *ArtifactVersionSummary) GetStoPipelineId() string {
	if o == nil || IsNil(o.StoPipelineId) {
		var ret string
		return ret
	}
	return *o.StoPipelineId
}

// GetStoPipelineIdOk returns a tuple with the StoPipelineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ArtifactVersionSummary) GetStoPipelineIdOk() (*string, bool) {
	if o == nil || IsNil(o.StoPipelineId) {
		return nil, false
	}
	return o.StoPipelineId, true
}

// HasStoPipelineId returns a boolean if a field has been set.
func (o *ArtifactVersionSummary) HasStoPipelineId() bool {
	if o != nil && !IsNil(o.StoPipelineId) {
		return true
	}

	return false
}

// SetStoPipelineId gets a reference to the given string and assigns it to the StoPipelineId field.
func (o *ArtifactVersionSummary) SetStoPipelineId(v string) {
	o.StoPipelineId = &v
}

// GetVersion returns the Version field value
func (o *ArtifactVersionSummary) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *ArtifactVersionSummary) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *ArtifactVersionSummary) SetVersion(v string) {
	o.Version = v
}

func (o ArtifactVersionSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArtifactVersionSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["imageName"] = o.ImageName
	toSerialize["packageType"] = o.PackageType
	if !IsNil(o.SscaArtifactId) {
		toSerialize["sscaArtifactId"] = o.SscaArtifactId
	}
	if !IsNil(o.SscaArtifactSourceId) {
		toSerialize["sscaArtifactSourceId"] = o.SscaArtifactSourceId
	}
	if !IsNil(o.StoExecutionId) {
		toSerialize["stoExecutionId"] = o.StoExecutionId
	}
	if !IsNil(o.StoPipelineId) {
		toSerialize["stoPipelineId"] = o.StoPipelineId
	}
	toSerialize["version"] = o.Version
	return toSerialize, nil
}

func (o *ArtifactVersionSummary) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"imageName",
		"packageType",
		"version",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varArtifactVersionSummary := _ArtifactVersionSummary{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varArtifactVersionSummary)

	if err != nil {
		return err
	}

	*o = ArtifactVersionSummary(varArtifactVersionSummary)

	return err
}

type NullableArtifactVersionSummary struct {
	value *ArtifactVersionSummary
	isSet bool
}

func (v NullableArtifactVersionSummary) Get() *ArtifactVersionSummary {
	return v.value
}

func (v *NullableArtifactVersionSummary) Set(val *ArtifactVersionSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableArtifactVersionSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableArtifactVersionSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtifactVersionSummary(val *ArtifactVersionSummary) *NullableArtifactVersionSummary {
	return &NullableArtifactVersionSummary{value: val, isSet: true}
}

func (v NullableArtifactVersionSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtifactVersionSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


