openapi: 3.0.0
info:
  contact:
    name: Harness Artifact Registry - developers
    url: https://www.harness.io
  title: Harness Artifact Registry API
  version: 1.0.0
servers:
- description: Registry
  url: /gateway/har/api/v1
security:
- XApiKeyAuth: []
tags:
- description: "APIs to create, update, list registries"
  name: Registries
- description: "APIs to get, list artifacts"
  name: Artifacts
- description: APIs to get details of docker artifacts
  name: Docker Artifacts
- description: APIs to get details of helm artifacts
  name: Helm Artifacts
- description: "APIs to create, update, list webhooks"
  name: Webhooks
paths:
  /registry:
    post:
      description: Create a Registry.
      operationId: CreateRegistry
      parameters:
      - description: Unique space path
        explode: true
        in: query
        name: space_ref
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: "#/components/requestBodies/RegistryRequest"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_201"
          description: "response for create, get and update registry"
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Create Registry.
      tags:
      - Registries
  /registry/{registry_identifier}/artifact/{artifact}/+/redirect:
    get:
      description: Redirect to Harness Artifact Page
      operationId: RedirectHarnessArtifact
      parameters:
      - description: Unique registry Identifier in a account.
        explode: false
        in: path
        name: registry_identifier
        required: true
        schema:
          type: string
        style: simple
      - description: Account Identifier
        explode: true
        in: query
        name: accountIdentifier
        required: false
        schema:
          type: string
        style: form
      - description: Name of artifact.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      - description: Version
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      responses:
        "302":
          description: Temporary Redirect
          headers:
            Location:
              description: The URL of the redirected resource
              explode: false
              schema:
                format: uri
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Redirect to Harness Artifact Page
      tags:
      - Artifacts
  /registry/{registry_ref}/+:
    delete:
      description: Delete a Registry in the account for the given key
      operationId: DeleteRegistry
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
          description: Success Response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Delete a Registry
      tags:
      - Registries
    get:
      description: Returns Registry Details in the account for the given key
      operationId: GetRegistry
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_201"
          description: "response for create, get and update registry"
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Returns Registry Details
      tags:
      - Registries
    put:
      description: Updates a Registry in the account for the given key
      operationId: ModifyRegistry
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: "#/components/requestBodies/RegistryRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_201"
          description: "response for create, get and update registry"
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Updates a Registry
      tags:
      - Registries
  /registry/{registry_ref}/+/artifact/{artifact}/+:
    delete:
      description: Delete Artifact.
      operationId: DeleteArtifact
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Name of artifact.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
          description: Success Response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Delete Artifact
      tags:
      - Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/labels:
    put:
      description: Update Artifact Labels.
      operationId: UpdateArtifactLabels
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Name of artifact.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: "#/components/requestBodies/ArtifactLabelRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_1"
          description: response to get artifact label response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Update Artifact Labels
      tags:
      - Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/stats:
    get:
      description: Get Artifact Stats.
      operationId: GetArtifactStats
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Name of artifact.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      - description: Date. Format - MM/DD/YYYY
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: Date. Format - MM/DD/YYYY
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_2"
          description: response to get artifact stats response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Get Artifact Stats
      tags:
      - Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/summary:
    get:
      description: Get Artifact Summary.
      operationId: GetArtifactSummary
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Name of artifact.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_1"
          description: response to get artifact summary
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Get Artifact Summary
      tags:
      - Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}:
    delete:
      description: Delete Artifact Version.
      operationId: DeleteArtifactVersion
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Name of artifact.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      - description: Name of Artifact Version.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
          description: Success Response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Delete an Artifact Version
      tags:
      - Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/deploymentdetails:
    get:
      description: Get Artifact Deployments
      operationId: GetArtifactDeployments
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Name of artifact.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      - description: Name of Artifact Version.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: env type
        explode: true
        in: query
        name: env_type
        required: false
        schema:
          description: Environment Type
          enum:
          - PreProduction
          - Production
          type: string
        style: form
      - description: Current page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 20
          format: int64
          type: integer
        style: form
      - description: sortOrder
        explode: true
        in: query
        name: sort_order
        required: false
        schema:
          type: string
        style: form
      - description: sortField
        explode: true
        in: query
        name: sort_field
        required: false
        schema:
          type: string
        style: form
      - description: search Term.
        explode: true
        in: query
        name: search_term
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_3"
          description: response to get docker artifact deployments details
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Describe Artifact Deployments
      tags:
      - Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/details:
    get:
      description: Get Artifact Details
      operationId: GetArtifactDetails
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Name of artifact.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      - description: Name of Artifact Version.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: Child version incase of Docker artifacts.
        explode: true
        in: query
        name: childVersion
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_4"
          description: response to get artifact details
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Describe Artifact Details
      tags:
      - Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/docker/details:
    get:
      description: Get Docker Artifact Details
      operationId: GetDockerArtifactDetails
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Name of artifact.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      - description: Name of Artifact Version.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: Digest.
        explode: true
        in: query
        name: digest
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_5"
          description: response to get docker artifact detail
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Describe Docker Artifact Detail
      tags:
      - Docker Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/docker/integrationdetails:
    get:
      description: Get Docker Artifact Integration Details
      operationId: GetDockerArtifactIntegrationDetails
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Name of artifact.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      - description: Name of Artifact Version.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: Digest.
        explode: true
        in: query
        name: digest
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_6"
          description: response to get docker artifact integration detail
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Describe Docker Artifact Integration Detail
      tags:
      - Docker Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/docker/layers:
    get:
      description: Get Docker Artifact Layers
      operationId: GetDockerArtifactLayers
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Name of artifact.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      - description: Name of Artifact Version.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: Digest.
        explode: true
        in: query
        name: digest
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_7"
          description: response to get artifact layers
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Describe Docker Artifact Layers
      tags:
      - Docker Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/docker/manifest:
    get:
      description: Get Docker Artifact Manifest
      operationId: GetDockerArtifactManifest
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Name of artifact.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      - description: Name of Artifact Version.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: Digest.
        explode: true
        in: query
        name: digest
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_8"
          description: response to get docker artifact manifest
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Describe Docker Artifact Manifest
      tags:
      - Docker Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/docker/manifests:
    get:
      description: Get Docker Artifact Manifests
      operationId: GetDockerArtifactManifests
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Name of artifact.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      - description: Name of Artifact Version.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_9"
          description: response to get artifact layers
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Describe Docker Artifact Manifests
      tags:
      - Docker Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/file/{file_name}:
    get:
      description: just validate existence of Artifact file
      operationId: GetArtifactFile
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Name of artifact.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      - description: Name of Artifact Version.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: Name of Artifact File.
        explode: false
        in: path
        name: file_name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_10"
          description: response to head artifact file
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Get Artifact file
      tags:
      - Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/files:
    get:
      description: Get Artifact files
      operationId: GetArtifactFiles
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Name of artifact.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      - description: Name of Artifact Version.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: Current page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 20
          format: int64
          type: integer
        style: form
      - description: sortOrder
        explode: true
        in: query
        name: sort_order
        required: false
        schema:
          type: string
        style: form
      - description: sortField
        explode: true
        in: query
        name: sort_field
        required: false
        schema:
          type: string
        style: form
      - description: search Term.
        explode: true
        in: query
        name: search_term
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_11"
          description: response to get artifact files
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Describe Artifact files
      tags:
      - Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/helm/details:
    get:
      description: Get Helm Artifact Details
      operationId: GetHelmArtifactDetails
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Name of artifact.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      - description: Name of Artifact Version.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_12"
          description: response to get helm artifact detail
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Describe Helm Artifact Detail
      tags:
      - Helm Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/helm/manifest:
    get:
      description: Get Helm Artifact Manifest
      operationId: GetHelmArtifactManifest
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Name of artifact.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      - description: Name of Artifact Version.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_13"
          description: response to get helm artifact manifest
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Describe Helm Artifact Manifest
      tags:
      - Helm Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/version/{version}/summary:
    get:
      description: Get Artifact Version Summary.
      operationId: GetArtifactVersionSummary
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Name of artifact.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      - description: Name of Artifact Version.
        explode: false
        in: path
        name: version
        required: true
        schema:
          type: string
        style: simple
      - description: Digest.
        explode: true
        in: query
        name: digest
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_14"
          description: response to get docker artifact version summary
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Get Artifact Version Summary
      tags:
      - Artifacts
  /registry/{registry_ref}/+/artifact/{artifact}/+/versions:
    get:
      description: Lists all the Artifact Versions.
      operationId: GetAllArtifactVersions
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Name of artifact.
        explode: false
        in: path
        name: artifact
        required: true
        schema:
          type: string
        style: simple
      - description: Current page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 20
          format: int64
          type: integer
        style: form
      - description: sortOrder
        explode: true
        in: query
        name: sort_order
        required: false
        schema:
          type: string
        style: form
      - description: sortField
        explode: true
        in: query
        name: sort_field
        required: false
        schema:
          type: string
        style: form
      - description: search Term.
        explode: true
        in: query
        name: search_term
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_15"
          description: response for list versions of artifact
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: List Artifact Versions
      tags:
      - Artifacts
  /registry/{registry_ref}/+/artifact/labels:
    get:
      description: List Artifact Labels.
      operationId: ListArtifactLabels
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Current page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 20
          format: int64
          type: integer
        style: form
      - description: search Term.
        explode: true
        in: query
        name: search_term
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_16"
          description: response for list artifact labels
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: List Artifact Labels
      tags:
      - Artifacts
  /registry/{registry_ref}/+/artifact/stats:
    get:
      description: Get Artifact Stats.
      operationId: GetArtifactStatsForRegistry
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Date. Format - MM/DD/YYYY
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: Date. Format - MM/DD/YYYY
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_2"
          description: response to get artifact stats response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Get Artifact Stats
      tags:
      - Artifacts
  /registry/{registry_ref}/+/artifacts:
    get:
      description: Lists all the Artifacts for Registry
      operationId: GetAllArtifactsByRegistry
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Label.
        explode: true
        in: query
        name: label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Current page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 20
          format: int64
          type: integer
        style: form
      - description: sortOrder
        explode: true
        in: query
        name: sort_order
        required: false
        schema:
          type: string
        style: form
      - description: sortField
        explode: true
        in: query
        name: sort_field
        required: false
        schema:
          type: string
        style: form
      - description: search Term.
        explode: true
        in: query
        name: search_term
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_17"
          description: response for list artifact
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: List Artifacts for Registry
      tags:
      - Registries
  /registry/{registry_ref}/+/client-setup-details:
    get:
      description: Returns CLI Client Setup Details based on package type
      operationId: GetClientSetupDetails
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Artifat
        explode: true
        in: query
        name: artifact
        required: false
        schema:
          type: string
        style: form
      - description: Version
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_18"
          description: response for client setup details
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Returns CLI Client Setup Details
      tags:
      - Registries
  /registry/{registry_ref}/+/webhooks:
    get:
      description: Returns List of Webhook Details
      operationId: ListWebhooks
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Current page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 20
          format: int64
          type: integer
        style: form
      - description: sortOrder
        explode: true
        in: query
        name: sort_order
        required: false
        schema:
          type: string
        style: form
      - description: sortField
        explode: true
        in: query
        name: sort_field
        required: false
        schema:
          type: string
        style: form
      - description: search Term.
        explode: true
        in: query
        name: search_term
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_19"
          description: response for list webhooks
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: ListWebhooks
      tags:
      - Webhooks
    post:
      description: Returns Webhook Details
      operationId: CreateWebhook
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: "#/components/requestBodies/WebhookRequest"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_201_1"
          description: "response for create, get and update webhook"
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: CreateWebhook
      tags:
      - Webhooks
  /registry/{registry_ref}/+/webhooks/{webhook_identifier}:
    delete:
      description: Delete a Webhook
      operationId: DeleteWebhook
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Unique webhook identifier.
        explode: false
        in: path
        name: webhook_identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
          description: Success Response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: DeleteWebhook
      tags:
      - Webhooks
    get:
      description: Returns Webhook Details
      operationId: GetWebhook
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Unique webhook identifier.
        explode: false
        in: path
        name: webhook_identifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_201_1"
          description: "response for create, get and update webhook"
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: GetWebhook
      tags:
      - Webhooks
    put:
      description: Returns Webhook Details
      operationId: UpdateWebhook
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Unique webhook identifier.
        explode: false
        in: path
        name: webhook_identifier
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: "#/components/requestBodies/WebhookRequest"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_201_1"
          description: "response for create, get and update webhook"
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: UpdateWebhook
      tags:
      - Webhooks
  /registry/{registry_ref}/+/webhooks/{webhook_identifier}/executions:
    get:
      description: Returns Webhook Execution Details List
      operationId: ListWebhookExecutions
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Unique webhook identifier.
        explode: false
        in: path
        name: webhook_identifier
        required: true
        schema:
          type: string
        style: simple
      - description: Current page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 20
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_20"
          description: list webhooks executions response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: ListWebhookExecutions
      tags:
      - Webhooks
  /registry/{registry_ref}/+/webhooks/{webhook_identifier}/executions/{webhook_execution_id}:
    get:
      description: Returns Webhook Execution Details
      operationId: GetWebhookExecution
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Unique webhook identifier.
        explode: false
        in: path
        name: webhook_identifier
        required: true
        schema:
          type: string
        style: simple
      - description: Unique webhook execution identifier.
        explode: false
        in: path
        name: webhook_execution_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_21"
          description: webhook execution response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: GetWebhookExecution
      tags:
      - Webhooks
  /registry/{registry_ref}/+/webhooks/{webhook_identifier}/executions/{webhook_execution_id}/retrigger:
    get:
      description: Retrigger Webhook Execution
      operationId: ReTriggerWebhookExecution
      parameters:
      - description: Unique registry path.
        explode: false
        in: path
        name: registry_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Unique webhook identifier.
        explode: false
        in: path
        name: webhook_identifier
        required: true
        schema:
          type: string
        style: simple
      - description: Unique webhook execution identifier.
        explode: false
        in: path
        name: webhook_execution_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_21"
          description: webhook execution response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: ReTriggerWebhookExecution
      tags:
      - Webhooks
  /replication/rules:
    get:
      description: List all replication rules
      operationId: listReplicationRules
      parameters:
      - description: Unique space path
        explode: true
        in: query
        name: space_ref
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_22"
          description: Response for list replication rules
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: List replication rules
      tags:
      - Replication
    post:
      description: Create a replication rule
      operationId: createReplicationRule
      parameters:
      - description: Unique space path
        explode: true
        in: query
        name: space_ref
        required: false
        schema:
          type: string
        style: form
      requestBody:
        $ref: "#/components/requestBodies/ReplicationRuleRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_23"
          description: Response for replication rule update
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Create a replication rule
      tags:
      - Replication
  /replication/rules/{id}:
    delete:
      description: Delete a replication rule
      operationId: deleteReplicationRule
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
          description: Success Response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Delete a replication rule
      tags:
      - Replication
    get:
      description: Get a replication rule
      operationId: getReplicationRule
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_23"
          description: Response for replication rule update
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Get a replication rule
      tags:
      - Replication
    put:
      description: Update a replication rule
      operationId: updateReplicationRule
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: "#/components/requestBodies/ReplicationRuleRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_23"
          description: Response for replication rule update
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Update a replication rule
      tags:
      - Replication
  /replication/rules/{id}/migration/images:
    get:
      description: List migration images given an id
      operationId: listMigrationImages
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Current page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 20
          format: int64
          type: integer
        style: form
      - description: sortOrder
        explode: true
        in: query
        name: sort_order
        required: false
        schema:
          type: string
        style: form
      - description: sortField
        explode: true
        in: query
        name: sort_field
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_24"
          description: Response for list migration images
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: List migration images
      tags:
      - Replication
  /replication/rules/{id}/migration/images/{image_id}/logs:
    get:
      operationId: getMigrationLogsForImage
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: image_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain; charset=utf-8:
              schema:
                example: "Hello, world!"
                type: string
                x-content-type: text/plain; charset=utf-8
          description: A plain text response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Get migration logs for an image
      tags:
      - Replication
  /replication/rules/{id}/migration/start:
    post:
      description: Start migration given an id
      operationId: startMigration
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
          description: Success Response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Start migration
      tags:
      - Replication
  /replication/rules/{id}/migration/stop:
    post:
      description: Stop migration given an id
      operationId: stopMigration
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200"
          description: Success Response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Stop migration
      tags:
      - Replication
  /spaces/{space_ref}/artifact/stats:
    get:
      description: Get artifact stats
      operationId: GetArtifactStatsForSpace
      parameters:
      - description: Unique space path.
        explode: false
        in: path
        name: space_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Date. Format - MM/DD/YYYY
        explode: true
        in: query
        name: from
        required: false
        schema:
          type: string
        style: form
      - description: Date. Format - MM/DD/YYYY
        explode: true
        in: query
        name: to
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_2"
          description: response to get artifact stats response
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Get artifact stats
      tags:
      - Spaces
  /spaces/{space_ref}/artifacts:
    get:
      description: Lists all the Harness Artifacts.
      operationId: GetAllHarnessArtifacts
      parameters:
      - description: Unique space path.
        explode: false
        in: path
        name: space_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Identifier
        explode: true
        in: query
        name: reg_identifier
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Current page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 20
          format: int64
          type: integer
        style: form
      - description: sortOrder
        explode: true
        in: query
        name: sort_order
        required: false
        schema:
          type: string
        style: form
      - description: sortField
        explode: true
        in: query
        name: sort_field
        required: false
        schema:
          type: string
        style: form
      - description: search Term.
        explode: true
        in: query
        name: search_term
        required: false
        schema:
          type: string
        style: form
      - description: Latest Version Filter.
        explode: true
        in: query
        name: latest_version
        required: false
        schema:
          type: boolean
        style: form
      - description: Deployed Artifact Filter.
        explode: true
        in: query
        name: deployed_artifact
        required: false
        schema:
          type: boolean
        style: form
      - description: Registry Package Type
        explode: true
        in: query
        name: package_type
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_25"
          description: response for list artifact
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: List Harness Artifacts
      tags:
      - Spaces
  /spaces/{space_ref}/details:
    get:
      description: Get storage details for given space
      operationId: GetStorageDetails
      parameters:
      - description: Unique space path.
        explode: false
        in: path
        name: space_ref
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_26"
          description: response for storage details
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Get storage details for given space
      tags:
      - Spaces
  /spaces/{space_ref}/registries:
    get:
      description: Lists all the registries.
      operationId: GetAllRegistries
      parameters:
      - description: Unique space path.
        explode: false
        in: path
        name: space_ref
        required: true
        schema:
          type: string
        style: simple
      - description: Registry Package Type
        explode: true
        in: query
        name: package_type
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Registry Type
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - VIRTUAL
          - UPSTREAM
          type: string
        style: form
      - description: Current page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int64
          type: integer
        style: form
      - description: Number of items per page
        explode: true
        in: query
        name: size
        required: false
        schema:
          default: 20
          format: int64
          type: integer
        style: form
      - description: sortOrder
        explode: true
        in: query
        name: sort_order
        required: false
        schema:
          type: string
        style: form
      - description: sortField
        explode: true
        in: query
        name: sort_field
        required: false
        schema:
          type: string
        style: form
      - description: search Term.
        explode: true
        in: query
        name: search_term
        required: false
        schema:
          type: string
        style: form
      - description: Whether to list registries recursively.
        explode: true
        in: query
        name: recursive
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inline_response_200_27"
          description: response for list registry
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthenticated
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: The specified resource was not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: List registries
      tags:
      - Spaces
components:
  parameters:
    AccountIdentifierParam:
      description: Account Identifier
      explode: true
      in: query
      name: accountIdentifier
      required: false
      schema:
        type: string
      style: form
    LabelsParam:
      description: Label.
      explode: true
      in: query
      name: label
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    RegistryIdentifierParam:
      description: Registry Identifier
      explode: true
      in: query
      name: reg_identifier
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    RegistryIdentifierPathParam:
      description: Unique registry Identifier in a account.
      explode: false
      in: path
      name: registry_identifier
      required: true
      schema:
        type: string
      style: simple
    RegistryTypeParam:
      description: Registry Type
      explode: true
      in: query
      name: type
      required: false
      schema:
        enum:
        - VIRTUAL
        - UPSTREAM
        type: string
      style: form
    artifactParam:
      description: Artifat
      explode: true
      in: query
      name: artifact
      required: false
      schema:
        type: string
      style: form
    artifactPathParam:
      description: Name of artifact.
      explode: false
      in: path
      name: artifact
      required: true
      schema:
        type: string
      style: simple
    childVersionParam:
      description: Child version incase of Docker artifacts.
      explode: true
      in: query
      name: childVersion
      required: false
      schema:
        type: string
      style: form
    deployedArtifact:
      description: Deployed Artifact Filter.
      explode: true
      in: query
      name: deployed_artifact
      required: false
      schema:
        type: boolean
      style: form
    digestOptParam:
      description: Digest.
      explode: true
      in: query
      name: digest
      required: false
      schema:
        type: string
      style: form
    digestParam:
      description: Digest.
      explode: true
      in: query
      name: digest
      required: true
      schema:
        type: string
      style: form
    envType:
      description: env type
      explode: true
      in: query
      name: env_type
      required: false
      schema:
        description: Environment Type
        enum:
        - PreProduction
        - Production
        type: string
      style: form
    fileNamePathParam:
      description: Name of Artifact File.
      explode: false
      in: path
      name: file_name
      required: true
      schema:
        type: string
      style: simple
    fromDateParam:
      description: Date. Format - MM/DD/YYYY
      explode: true
      in: query
      name: from
      required: false
      schema:
        type: string
      style: form
    latestVersion:
      description: Latest Version Filter.
      explode: true
      in: query
      name: latest_version
      required: false
      schema:
        type: boolean
      style: form
    packageTypeParam:
      description: Registry Package Type
      explode: true
      in: query
      name: package_type
      required: false
      schema:
        items:
          type: string
        type: array
      style: form
    pageNumber:
      description: Current page number
      explode: true
      in: query
      name: page
      required: false
      schema:
        default: 1
        format: int64
        type: integer
      style: form
    pageSize:
      description: Number of items per page
      explode: true
      in: query
      name: size
      required: false
      schema:
        default: 20
        format: int64
        type: integer
      style: form
    recursiveParam:
      description: Whether to list registries recursively.
      explode: true
      in: query
      name: recursive
      required: false
      schema:
        default: false
        type: boolean
      style: form
    registryRefPathParam:
      description: Unique registry path.
      explode: false
      in: path
      name: registry_ref
      required: true
      schema:
        type: string
      style: simple
    searchTerm:
      description: search Term.
      explode: true
      in: query
      name: search_term
      required: false
      schema:
        type: string
      style: form
    sortField:
      description: sortField
      explode: true
      in: query
      name: sort_field
      required: false
      schema:
        type: string
      style: form
    sortOrder:
      description: sortOrder
      explode: true
      in: query
      name: sort_order
      required: false
      schema:
        type: string
      style: form
    spaceRefPathParam:
      description: Unique space path.
      explode: false
      in: path
      name: space_ref
      required: true
      schema:
        type: string
      style: simple
    spaceRefQueryParam:
      description: Unique space path
      explode: true
      in: query
      name: space_ref
      required: false
      schema:
        type: string
      style: form
    toDateParam:
      description: Date. Format - MM/DD/YYYY
      explode: true
      in: query
      name: to
      required: false
      schema:
        type: string
      style: form
    versionParam:
      description: Version
      explode: true
      in: query
      name: version
      required: false
      schema:
        type: string
      style: form
    versionPathParam:
      description: Name of Artifact Version.
      explode: false
      in: path
      name: version
      required: true
      schema:
        type: string
      style: simple
    webhookExecutionIdPathParam:
      description: Unique webhook execution identifier.
      explode: false
      in: path
      name: webhook_execution_id
      required: true
      schema:
        type: string
      style: simple
    webhookIdentifierPathParam:
      description: Unique webhook identifier.
      explode: false
      in: path
      name: webhook_identifier
      required: true
      schema:
        type: string
      style: simple
  requestBodies:
    ArtifactLabelRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ArtifactLabelRequest"
      description: request to update artifact labels
    RegistryRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegistryRequest"
      description: request for create and update registry
    ReplicationRuleRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ReplicationRuleRequest"
      description: request for create and update replication rule
    WebhookRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/WebhookRequest"
      description: request for create and update webhook
  responses:
    ArtifactDeploymentsResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_3"
      description: response to get docker artifact deployments details
    ArtifactDetailResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_4"
      description: response to get artifact details
    ArtifactFileResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_10"
      description: response to head artifact file
    ArtifactLabelResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_1"
      description: response to get artifact label response
    ArtifactStatsResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_2"
      description: response to get artifact stats response
    ArtifactSummaryResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_1"
      description: response to get artifact summary
    ArtifactVersionSummaryResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_14"
      description: response to get docker artifact version summary
    BadRequest:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: Bad request
    ClientSetupDetailsResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_18"
      description: response for client setup details
    DockerArtifactDetailIntegrationResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_6"
      description: response to get docker artifact integration detail
    DockerArtifactDetailResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_5"
      description: response to get docker artifact detail
    DockerArtifactManifestResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_8"
      description: response to get docker artifact manifest
    DockerLayersResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_7"
      description: response to get artifact layers
    DockerManifestsResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_9"
      description: response to get artifact layers
    FileDetailResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_11"
      description: response to get artifact files
    HelmArtifactDetailResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_12"
      description: response to get helm artifact detail
    HelmArtifactManifestResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_13"
      description: response to get helm artifact manifest
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: Internal server error
    ListArtifactLabelResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_16"
      description: response for list artifact labels
    ListArtifactResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_25"
      description: response for list artifact
    ListArtifactVersionResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_15"
      description: response for list versions of artifact
    ListMigrationImageResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_24"
      description: Response for list migration images
    ListRegistryArtifactResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_17"
      description: response for list artifact
    ListRegistryResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_27"
      description: response for list registry
    ListReplicationRuleResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_22"
      description: Response for list replication rules
    ListWebhooksExecutionResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_20"
      description: list webhooks executions response
    ListWebhooksResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_19"
      description: response for list webhooks
    NotFound:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: The specified resource was not found
    PlainTextResponse:
      content:
        text/plain; charset=utf-8:
          schema:
            example: "Hello, world!"
            type: string
            x-content-type: text/plain; charset=utf-8
      description: A plain text response
    Redirect:
      description: Temporary Redirect
      headers:
        Location:
          description: The URL of the redirected resource
          explode: false
          schema:
            format: uri
            type: string
          style: simple
    RegistryResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_201"
      description: "response for create, get and update registry"
    ReplicationRuleResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_23"
      description: Response for replication rule update
    StorageDetailsResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_26"
      description: response for storage details
    Success:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200"
      description: Success Response
    Unauthenticated:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: Unauthenticated
    Unauthorized:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
      description: Unauthorized
    WebhookExecutionResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_200_21"
      description: webhook execution response
    WebhookResponse:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/inline_response_201_1"
      description: "response for create, get and update webhook"
  schemas:
    AccessKeySecretKey:
      properties:
        accessKey:
          type: string
        accessKeySecretIdentifier:
          type: string
        accessKeySecretSpaceId:
          format: int64
          type: integer
        accessKeySecretSpacePath:
          type: string
        secretKeyIdentifier:
          type: string
        secretKeySpaceId:
          format: int64
          type: integer
        secretKeySpacePath:
          type: string
      required:
      - secretKeyIdentifier
    Anonymous: {}
    ArtifactDeploymentsDetail:
      description: Artifact deployments Detail
      example:
        lastDeployedAt: lastDeployedAt
        infraIdentifier: infraIdentifier
        orgIdentifier: orgIdentifier
        count: 0
        infraName: infraName
        lastDeployedById: lastDeployedById
        serviceName: serviceName
        pipelineId: pipelineId
        serviceIdentifier: serviceIdentifier
        lastDeployedByName: lastDeployedByName
        envName: envName
        envType: PreProduction
        lastPipelineExecutionId: lastPipelineExecutionId
        projectIdentifier: projectIdentifier
        envIdentifier: envIdentifier
        lastPipelineExecutionName: lastPipelineExecutionName
      properties:
        count:
          type: integer
        envIdentifier:
          type: string
        envName:
          type: string
        envType:
          $ref: "#/components/schemas/EnvironmentType"
        infraIdentifier:
          type: string
        infraName:
          type: string
        lastDeployedAt:
          type: string
        lastDeployedById:
          type: string
        lastDeployedByName:
          type: string
        lastPipelineExecutionId:
          type: string
        lastPipelineExecutionName:
          type: string
        orgIdentifier:
          type: string
        pipelineId:
          type: string
        projectIdentifier:
          type: string
        serviceIdentifier:
          type: string
        serviceName:
          type: string
      type: object
    ArtifactDeploymentsDetails:
      description: Docker Artifact deployments Details
      example:
        deployments:
          deployments:
          - lastDeployedAt: lastDeployedAt
            infraIdentifier: infraIdentifier
            orgIdentifier: orgIdentifier
            count: 0
            infraName: infraName
            lastDeployedById: lastDeployedById
            serviceName: serviceName
            pipelineId: pipelineId
            serviceIdentifier: serviceIdentifier
            lastDeployedByName: lastDeployedByName
            envName: envName
            envType: PreProduction
            lastPipelineExecutionId: lastPipelineExecutionId
            projectIdentifier: projectIdentifier
            envIdentifier: envIdentifier
            lastPipelineExecutionName: lastPipelineExecutionName
          - lastDeployedAt: lastDeployedAt
            infraIdentifier: infraIdentifier
            orgIdentifier: orgIdentifier
            count: 0
            infraName: infraName
            lastDeployedById: lastDeployedById
            serviceName: serviceName
            pipelineId: pipelineId
            serviceIdentifier: serviceIdentifier
            lastDeployedByName: lastDeployedByName
            envName: envName
            envType: PreProduction
            lastPipelineExecutionId: lastPipelineExecutionId
            projectIdentifier: projectIdentifier
            envIdentifier: envIdentifier
            lastPipelineExecutionName: lastPipelineExecutionName
          pageCount: 100
          pageIndex: 0
          pageSize: 1
          itemCount: 1
        deploymentsStats:
          Production: 1
          PreProduction: 6
      properties:
        deployments:
          $ref: "#/components/schemas/ArtifactDeploymentsList"
        deploymentsStats:
          $ref: "#/components/schemas/DeploymentStats"
      required:
      - deployments
      type: object
    ArtifactDeploymentsList:
      description: A list of Artifact Deployments
      example:
        deployments:
        - lastDeployedAt: lastDeployedAt
          infraIdentifier: infraIdentifier
          orgIdentifier: orgIdentifier
          count: 0
          infraName: infraName
          lastDeployedById: lastDeployedById
          serviceName: serviceName
          pipelineId: pipelineId
          serviceIdentifier: serviceIdentifier
          lastDeployedByName: lastDeployedByName
          envName: envName
          envType: PreProduction
          lastPipelineExecutionId: lastPipelineExecutionId
          projectIdentifier: projectIdentifier
          envIdentifier: envIdentifier
          lastPipelineExecutionName: lastPipelineExecutionName
        - lastDeployedAt: lastDeployedAt
          infraIdentifier: infraIdentifier
          orgIdentifier: orgIdentifier
          count: 0
          infraName: infraName
          lastDeployedById: lastDeployedById
          serviceName: serviceName
          pipelineId: pipelineId
          serviceIdentifier: serviceIdentifier
          lastDeployedByName: lastDeployedByName
          envName: envName
          envType: PreProduction
          lastPipelineExecutionId: lastPipelineExecutionId
          projectIdentifier: projectIdentifier
          envIdentifier: envIdentifier
          lastPipelineExecutionName: lastPipelineExecutionName
        pageCount: 100
        pageIndex: 0
        pageSize: 1
        itemCount: 1
      properties:
        deployments:
          description: A list of Artifact
          items:
            $ref: "#/components/schemas/ArtifactDeploymentsDetail"
          type: array
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 1
          type: integer
      required:
      - artifacts
      type: object
    ArtifactDetail:
      description: Artifact Detail
      discriminator:
        mapping:
          CARGO: "#/components/schemas/CargoArtifactDetailConfig"
          DOCKER: "#/components/schemas/DockerArtifactDetailConfig"
          GENERIC: "#/components/schemas/GenericArtifactDetailConfig"
          HELM: "#/components/schemas/HelmArtifactDetailConfig"
          MAVEN: "#/components/schemas/MavenArtifactDetailConfig"
          NPM: "#/components/schemas/NpmArtifactDetailConfig"
          NUGET: "#/components/schemas/NugetArtifactDetailConfig"
          PYTHON: "#/components/schemas/PythonArtifactDetailConfig"
          RPM: "#/components/schemas/RpmArtifactDetailConfig"
        propertyName: packageType
      example:
        createdAt: createdAt
        size: size
        createdBy: createdBy
        modifiedAt: modifiedAt
        name: name
        packageType: DOCKER
        version: version
        downloadCount: 0
      oneOf:
      - $ref: "#/components/schemas/DockerArtifactDetailConfig"
      - $ref: "#/components/schemas/HelmArtifactDetailConfig"
      - $ref: "#/components/schemas/GenericArtifactDetailConfig"
      - $ref: "#/components/schemas/MavenArtifactDetailConfig"
      - $ref: "#/components/schemas/PythonArtifactDetailConfig"
      - $ref: "#/components/schemas/NpmArtifactDetailConfig"
      - $ref: "#/components/schemas/RpmArtifactDetailConfig"
      - $ref: "#/components/schemas/NugetArtifactDetailConfig"
      - $ref: "#/components/schemas/CargoArtifactDetailConfig"
      properties:
        createdAt:
          type: string
        createdBy:
          type: string
        downloadCount:
          format: int64
          type: integer
        modifiedAt:
          type: string
        name:
          type: string
        packageType:
          $ref: "#/components/schemas/PackageType"
        size:
          type: string
        version:
          type: string
      required:
      - imageName
      - packageType
      - registryPath
      - url
      - version
      type: object
    ArtifactLabelRequest:
      example:
        labels:
        - labels
        - labels
      properties:
        labels:
          items:
            type: string
          type: array
      required:
      - labels
      type: object
    ArtifactMetadata:
      description: Artifact Metadata
      example:
        downloadsCount: 0
        latestVersion: latestVersion
        deploymentMetadata:
          nonProdEnvCount: 0
          prodEnvCount: 6
        registryPath: registryPath
        name: name
        lastModified: lastModified
        packageType: DOCKER
        pullCommand: pullCommand
        version: version
        labels:
        - labels
        - labels
        registryIdentifier: registryIdentifier
      properties:
        deploymentMetadata:
          $ref: "#/components/schemas/DeploymentMetadata"
        downloadsCount:
          format: int64
          type: integer
        labels:
          items:
            type: string
          type: array
        lastModified:
          type: string
        latestVersion:
          type: string
        name:
          type: string
        packageType:
          $ref: "#/components/schemas/PackageType"
        pullCommand:
          type: string
        registryIdentifier:
          type: string
        registryPath:
          type: string
        version:
          type: string
      required:
      - latestVersion
      - name
      - registryIdentifier
      - registryPath
      - version
      type: object
    ArtifactStats:
      description: Harness Artifact Stats
      example:
        uploadSize: 5
        downloadSize: 6
        downloadCount: 0
        totalStorageSize: 1
      properties:
        downloadCount:
          format: int64
          type: integer
        downloadSize:
          format: int64
          type: integer
        totalStorageSize:
          format: int64
          type: integer
        uploadSize:
          format: int64
          type: integer
      type: object
    ArtifactSummary:
      description: Harness Artifact Summary
      example:
        createdAt: createdAt
        downloadsCount: 0
        imageName: imageName
        modifiedAt: modifiedAt
        packageType: DOCKER
        labels:
        - labels
        - labels
      properties:
        createdAt:
          type: string
        downloadsCount:
          format: int64
          type: integer
        imageName:
          type: string
        labels:
          items:
            type: string
          type: array
        modifiedAt:
          type: string
        packageType:
          $ref: "#/components/schemas/PackageType"
      required:
      - imageName
      - packageType
      type: object
    ArtifactVersionMetadata:
      description: Artifact Version Metadata
      example:
        downloadsCount: 5
        size: size
        deploymentMetadata:
          nonProdEnvCount: 0
          prodEnvCount: 6
        registryPath: registryPath
        name: name
        lastModified: lastModified
        digestCount: 1
        fileCount: 5
        packageType: DOCKER
        pullCommand: pullCommand
        registryIdentifier: registryIdentifier
      properties:
        deploymentMetadata:
          $ref: "#/components/schemas/DeploymentMetadata"
        digestCount:
          format: int64
          type: integer
        downloadsCount:
          format: int64
          type: integer
        fileCount:
          format: int64
          type: integer
        lastModified:
          type: string
        name:
          type: string
        packageType:
          $ref: "#/components/schemas/PackageType"
        pullCommand:
          type: string
        registryIdentifier:
          type: string
        registryPath:
          type: string
        size:
          type: string
      required:
      - latestVersion
      - name
      - registryIdentifier
      - registryPath
      type: object
    ArtifactVersionSummary:
      description: Docker Artifact Version Summary
      example:
        imageName: imageName
        stoPipelineId: stoPipelineId
        stoExecutionId: stoExecutionId
        sscaArtifactId: sscaArtifactId
        sscaArtifactSourceId: sscaArtifactSourceId
        packageType: DOCKER
        version: version
      properties:
        imageName:
          type: string
        packageType:
          $ref: "#/components/schemas/PackageType"
        sscaArtifactId:
          type: string
        sscaArtifactSourceId:
          type: string
        stoExecutionId:
          type: string
        stoPipelineId:
          type: string
        version:
          type: string
      required:
      - imageName
      - packageType
      - version
      type: object
    AuthType:
      description: Authentication type
      enum:
      - UserPassword
      - AccessKeySecretKey
      - Anonymous
      type: string
    BuildDetails:
      example:
        stepExecutionId: stepExecutionId
        pipelineIdentifier: pipelineIdentifier
        stageExecutionId: stageExecutionId
        orgIdentifier: orgIdentifier
        pipelineDisplayName: pipelineDisplayName
        pipelineExecutionId: pipelineExecutionId
        projectIdentifier: projectIdentifier
      properties:
        orgIdentifier:
          type: string
        pipelineDisplayName:
          type: string
        pipelineExecutionId:
          type: string
        pipelineIdentifier:
          type: string
        projectIdentifier:
          type: string
        stageExecutionId:
          type: string
        stepExecutionId:
          type: string
      type: object
    CargoArtifactDetailConfig:
      description: Config for Cargo artifact details
      properties:
        metadata:
          additionalProperties: true
          type: object
      type: object
    CleanupPolicy:
      description: Cleanup Policy for Harness Artifact Registries
      example:
        expireDays: 0
        versionPrefix:
        - versionPrefix
        - versionPrefix
        packagePrefix:
        - packagePrefix
        - packagePrefix
        name: name
      properties:
        expireDays:
          type: integer
        name:
          type: string
        packagePrefix:
          items:
            type: string
          type: array
        versionPrefix:
          items:
            type: string
          type: array
      type: object
    ClientSetupDetails:
      description: Client Setup Details
      example:
        mainHeader: mainHeader
        secHeader: secHeader
        sections:
        - header: header
          secHeader: secHeader
          type: INLINE
        - header: header
          secHeader: secHeader
          type: INLINE
      properties:
        mainHeader:
          type: string
        secHeader:
          type: string
        sections:
          items:
            $ref: "#/components/schemas/ClientSetupSection"
          type: array
      required:
      - mainHeader
      - secHeader
      - sections
      type: object
    ClientSetupSection:
      description: Client Setup Section
      discriminator:
        mapping:
          INLINE: "#/components/schemas/ClientSetupStepConfig"
          TABS: "#/components/schemas/TabSetupStepConfig"
        propertyName: type
      example:
        header: header
        secHeader: secHeader
        type: INLINE
      oneOf:
      - $ref: "#/components/schemas/ClientSetupStepConfig"
      - $ref: "#/components/schemas/TabSetupStepConfig"
      properties:
        header:
          type: string
        secHeader:
          type: string
        type:
          $ref: "#/components/schemas/SectionType"
      required:
      - type
      type: object
    ClientSetupStep:
      description: Client Setup Step
      properties:
        commands:
          items:
            $ref: "#/components/schemas/ClientSetupStepCommand"
          type: array
        header:
          type: string
        type:
          $ref: "#/components/schemas/ClientSetupStepType"
      type: object
    ClientSetupStepCommand:
      description: Client Setup Step Command
      properties:
        label:
          type: string
        value:
          type: string
      type: object
    ClientSetupStepConfig:
      description: Client Setup Step
      properties:
        steps:
          items:
            $ref: "#/components/schemas/ClientSetupStep"
          type: array
      type: object
    ClientSetupStepType:
      description: ClientSetupStepType type
      enum:
      - Static
      - GenerateToken
      type: string
    DeploymentDetails:
      example:
        totalDeployment: 1
        prodDeployment: 6
        nonProdDeployment: 0
      properties:
        nonProdDeployment:
          type: integer
        prodDeployment:
          type: integer
        totalDeployment:
          type: integer
      required:
      - nonProdDeployment
      - prodDeployment
      - totalDeployment
      type: object
    DeploymentMetadata:
      example:
        nonProdEnvCount: 0
        prodEnvCount: 6
      properties:
        nonProdEnvCount:
          type: integer
        prodEnvCount:
          type: integer
      required:
      - nonProdEnvCount
      - prodEnvCount
      type: object
    DeploymentStats:
      description: DeploymentStats
      example:
        Production: 1
        PreProduction: 6
      properties:
        PreProduction:
          type: integer
        Production:
          type: integer
      required:
      - PreProduction
      - Production
      type: object
    DockerArtifactDetail:
      description: Docker Artifact Detail
      example:
        createdAt: createdAt
        downloadsCount: 0
        imageName: imageName
        size: size
        modifiedAt: modifiedAt
        registryPath: registryPath
        packageType: DOCKER
        pullCommand: pullCommand
        version: version
        url: url
      properties:
        createdAt:
          type: string
        downloadsCount:
          format: int64
          type: integer
        imageName:
          type: string
        modifiedAt:
          type: string
        packageType:
          $ref: "#/components/schemas/PackageType"
        pullCommand:
          type: string
        registryPath:
          type: string
        size:
          type: string
        url:
          type: string
        version:
          type: string
      required:
      - imageName
      - packageType
      - registryPath
      - url
      - version
      type: object
    DockerArtifactDetailConfig:
      description: Config for docker artifact details
      properties:
        pullCommand:
          type: string
      type: object
    DockerArtifactIntegrationDetail:
      description: Docker Artifact Detail
      example:
        stoDetails:
          executionId: executionId
          ignored: 3
          high: 9
          total: 1
          critical: 7
          low: 4
          medium: 7
          info: 2
          lastScanned: lastScanned
          pipelineId: pipelineId
        sbomDetails:
          avgScore: avgScore
          orchestrationId: orchestrationId
          allowListViolations: 5
          artifactSourceId: artifactSourceId
          artifactId: artifactId
          denyListViolations: 2
          maxScore: maxScore
          componentsCount: 5
          projectId: projectId
          orgId: orgId
        slsaDetails:
          provenanceId: provenanceId
          status: status
        deploymentsDetails:
          totalDeployment: 1
          prodDeployment: 6
          nonProdDeployment: 0
        buildDetails:
          stepExecutionId: stepExecutionId
          pipelineIdentifier: pipelineIdentifier
          stageExecutionId: stageExecutionId
          orgIdentifier: orgIdentifier
          pipelineDisplayName: pipelineDisplayName
          pipelineExecutionId: pipelineExecutionId
          projectIdentifier: projectIdentifier
      properties:
        buildDetails:
          $ref: "#/components/schemas/BuildDetails"
        deploymentsDetails:
          $ref: "#/components/schemas/DeploymentDetails"
        sbomDetails:
          $ref: "#/components/schemas/SBOMDetails"
        slsaDetails:
          $ref: "#/components/schemas/SLSADetails"
        stoDetails:
          $ref: "#/components/schemas/STODetails"
      type: object
    DockerArtifactManifest:
      description: Docker Artifact Manifest
      example:
        manifest: manifest
      properties:
        manifest:
          type: string
      required:
      - manifest
      type: object
    DockerLayerEntry:
      description: Harness Artifact Layers
      example:
        size: size
        command: command
      properties:
        command:
          type: string
        size:
          type: string
      required:
      - command
      type: object
    DockerLayersSummary:
      description: Harness Layers Summary
      example:
        osArch: osArch
        digest: digest
        layers:
        - size: size
          command: command
        - size: size
          command: command
      properties:
        digest:
          type: string
        layers:
          items:
            $ref: "#/components/schemas/DockerLayerEntry"
          type: array
        osArch:
          type: string
      required:
      - digest
      type: object
    DockerManifestDetails:
      description: Harness Artifact Layers
      example:
        stoDetails:
          executionId: executionId
          ignored: 3
          high: 9
          total: 1
          critical: 7
          low: 4
          medium: 7
          info: 2
          lastScanned: lastScanned
          pipelineId: pipelineId
        createdAt: createdAt
        downloadsCount: 0
        stoPipelineId: stoPipelineId
        size: size
        stoExecutionId: stoExecutionId
        osArch: osArch
        digest: digest
      properties:
        createdAt:
          type: string
        digest:
          type: string
        downloadsCount:
          format: int64
          type: integer
        osArch:
          type: string
        size:
          type: string
        stoDetails:
          $ref: "#/components/schemas/STODetails"
        stoExecutionId:
          type: string
        stoPipelineId:
          type: string
      required:
      - digest
      - layers
      - osArch
      type: object
    DockerManifests:
      description: Harness Manifests
      example:
        imageName: imageName
        manifests:
        - stoDetails:
            executionId: executionId
            ignored: 3
            high: 9
            total: 1
            critical: 7
            low: 4
            medium: 7
            info: 2
            lastScanned: lastScanned
            pipelineId: pipelineId
          createdAt: createdAt
          downloadsCount: 0
          stoPipelineId: stoPipelineId
          size: size
          stoExecutionId: stoExecutionId
          osArch: osArch
          digest: digest
        - stoDetails:
            executionId: executionId
            ignored: 3
            high: 9
            total: 1
            critical: 7
            low: 4
            medium: 7
            info: 2
            lastScanned: lastScanned
            pipelineId: pipelineId
          createdAt: createdAt
          downloadsCount: 0
          stoPipelineId: stoPipelineId
          size: size
          stoExecutionId: stoExecutionId
          osArch: osArch
          digest: digest
        version: version
      properties:
        imageName:
          type: string
        manifests:
          items:
            $ref: "#/components/schemas/DockerManifestDetails"
          type: array
        version:
          type: string
      required:
      - imageName
      - version
      type: object
    EnvironmentType:
      description: Environment Type
      enum:
      - PreProduction
      - Production
      type: string
    Error:
      example:
        code: "404"
        details: "{}"
        message: message
      properties:
        code:
          description: The http error code
          example: "404"
          type: string
        details:
          description: Additional details about the error
          type: object
        message:
          description: The reason the request failed
          type: string
      required:
      - code
      - message
      type: object
    ExtraHeader:
      description: Webhook Extra Header
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
    FileDetail:
      description: File Detail
      example:
        checksums:
        - checksums
        - checksums
        createdAt: createdAt
        downloadCommand: downloadCommand
        size: size
        name: name
      properties:
        checksums:
          items:
            type: string
          type: array
        createdAt:
          type: string
        downloadCommand:
          type: string
        name:
          type: string
        size:
          type: string
      required:
      - checksums
      - createdAt
      - downloadCommand
      - name
      - size
      type: object
    GenericArtifactDetailConfig:
      description: Config for generic artifact details
      properties:
        description:
          type: string
      type: object
    HelmArtifactDetail:
      description: Helm Artifact Detail
      example:
        artifact: artifact
        createdAt: createdAt
        downloadsCount: 0
        size: size
        modifiedAt: modifiedAt
        registryPath: registryPath
        packageType: DOCKER
        pullCommand: pullCommand
        version: version
        url: url
      properties:
        artifact:
          type: string
        createdAt:
          type: string
        downloadsCount:
          format: int64
          type: integer
        modifiedAt:
          type: string
        packageType:
          $ref: "#/components/schemas/PackageType"
        pullCommand:
          type: string
        registryPath:
          type: string
        size:
          type: string
        url:
          type: string
        version:
          type: string
      required:
      - imageName
      - packageType
      - registryPath
      - url
      - version
      type: object
    HelmArtifactDetailConfig:
      description: Config for helm artifact details
      properties:
        pullCommand:
          type: string
      type: object
    HelmArtifactManifest:
      description: Helm Artifact Manifest
      example:
        manifest: manifest
      properties:
        manifest:
          type: string
      required:
      - manifest
      type: object
    JfrogReplicationRegistry:
      properties:
        namespace:
          type: string
        passwordSecretId:
          type: string
        passwordSecretSpaceId:
          type: string
        url:
          format: uri
          type: string
        username:
          type: string
      required:
      - namespace
      - url
      type: object
    ListArtifact:
      description: A list of Artifacts
      example:
        pageCount: 100
        pageIndex: 0
        pageSize: 1
        artifacts:
        - downloadsCount: 0
          latestVersion: latestVersion
          deploymentMetadata:
            nonProdEnvCount: 0
            prodEnvCount: 6
          registryPath: registryPath
          name: name
          lastModified: lastModified
          packageType: DOCKER
          pullCommand: pullCommand
          version: version
          labels:
          - labels
          - labels
          registryIdentifier: registryIdentifier
        - downloadsCount: 0
          latestVersion: latestVersion
          deploymentMetadata:
            nonProdEnvCount: 0
            prodEnvCount: 6
          registryPath: registryPath
          name: name
          lastModified: lastModified
          packageType: DOCKER
          pullCommand: pullCommand
          version: version
          labels:
          - labels
          - labels
          registryIdentifier: registryIdentifier
        itemCount: 1
      properties:
        artifacts:
          description: A list of Artifact
          items:
            $ref: "#/components/schemas/ArtifactMetadata"
          type: array
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 1
          type: integer
      required:
      - artifacts
      type: object
    ListArtifactLabel:
      description: A list of Harness Artifact Labels
      example:
        pageCount: 100
        pageIndex: 0
        pageSize: 1
        itemCount: 1
        labels:
        - labels
        - labels
      properties:
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        labels:
          items:
            type: string
          type: array
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 1
          type: integer
      required:
      - labels
      type: object
    ListArtifactVersion:
      description: A list of Artifact versions
      example:
        pageCount: 100
        artifactVersions:
        - downloadsCount: 5
          size: size
          deploymentMetadata:
            nonProdEnvCount: 0
            prodEnvCount: 6
          registryPath: registryPath
          name: name
          lastModified: lastModified
          digestCount: 1
          fileCount: 5
          packageType: DOCKER
          pullCommand: pullCommand
          registryIdentifier: registryIdentifier
        - downloadsCount: 5
          size: size
          deploymentMetadata:
            nonProdEnvCount: 0
            prodEnvCount: 6
          registryPath: registryPath
          name: name
          lastModified: lastModified
          digestCount: 1
          fileCount: 5
          packageType: DOCKER
          pullCommand: pullCommand
          registryIdentifier: registryIdentifier
        pageIndex: 0
        pageSize: 1
        itemCount: 1
      properties:
        artifactVersions:
          description: A list of Artifact versions
          items:
            $ref: "#/components/schemas/ArtifactVersionMetadata"
          type: array
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 1
          type: integer
      required:
      - artifacts
      type: object
    ListMigrationImage:
      description: A list of migration images
      example:
        images:
        - imageId: imageId
          progress: 0
          imageTag: imageTag
          status: status
        - imageId: imageId
          progress: 0
          imageTag: imageTag
          status: status
        pageCount: 100
        pageIndex: 0
        pageSize: 1
        itemCount: 1
      properties:
        images:
          description: A list of Artifact versions
          items:
            $ref: "#/components/schemas/MigrationImage"
          type: array
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 1
          type: integer
      required:
      - images
      - itemCount
      - pageCount
      - pageIndex
      - pageSize
      type: object
    ListRegistry:
      description: A list of Harness Artifact Registries
      example:
        pageCount: 100
        pageIndex: 0
        pageSize: 1
        registries:
        - downloadsCount: 6
          identifier: identifier
          path: path
          artifactsCount: 0
          description: description
          registrySize: registrySize
          lastModified: lastModified
          type: VIRTUAL
          packageType: DOCKER
          url: url
          labels:
          - labels
          - labels
        - downloadsCount: 6
          identifier: identifier
          path: path
          artifactsCount: 0
          description: description
          registrySize: registrySize
          lastModified: lastModified
          type: VIRTUAL
          packageType: DOCKER
          url: url
          labels:
          - labels
          - labels
        itemCount: 1
      properties:
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 1
          type: integer
        registries:
          description: A list of Harness Artifact Registries
          items:
            $ref: "#/components/schemas/RegistryMetadata"
          type: array
      required:
      - registries
      type: object
    ListRegistryArtifact:
      description: A list of Artifacts
      example:
        pageCount: 100
        pageIndex: 0
        pageSize: 1
        artifacts:
        - downloadsCount: 0
          latestVersion: latestVersion
          registryPath: registryPath
          name: name
          lastModified: lastModified
          packageType: DOCKER
          labels:
          - labels
          - labels
          registryIdentifier: registryIdentifier
        - downloadsCount: 0
          latestVersion: latestVersion
          registryPath: registryPath
          name: name
          lastModified: lastModified
          packageType: DOCKER
          labels:
          - labels
          - labels
          registryIdentifier: registryIdentifier
        itemCount: 1
      properties:
        artifacts:
          description: A list of Artifact
          items:
            $ref: "#/components/schemas/RegistryArtifactMetadata"
          type: array
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 1
          type: integer
      required:
      - artifacts
      type: object
    ListReplicationRule:
      description: A list of replication rules
      example:
        pageCount: 100
        pageIndex: 0
        pageSize: 10
        rules:
        - createdAt: createdAt
          identifier: identifier
          blockedPatterns:
          - blockedPatterns
          - blockedPatterns
          sourceType: Local
          modifiedAt: modifiedAt
          destination: ""
          destinationType: Local
          source: null
          allowedPatterns:
          - allowedPatterns
          - allowedPatterns
          parentRef: parentRef
        - createdAt: createdAt
          identifier: identifier
          blockedPatterns:
          - blockedPatterns
          - blockedPatterns
          sourceType: Local
          modifiedAt: modifiedAt
          destination: ""
          destinationType: Local
          source: null
          allowedPatterns:
          - allowedPatterns
          - allowedPatterns
          parentRef: parentRef
        itemCount: 1
      properties:
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 10
          type: integer
        rules:
          description: A list of Replication Rules
          items:
            $ref: "#/components/schemas/ReplicationRule"
          type: array
      required:
      - itemCount
      - pageCount
      - pageIndex
      - pageSize
      - rules
      type: object
    ListWebhooks:
      description: A list of Harness Registries webhooks
      example:
        pageCount: 100
        pageIndex: 0
        webhooks:
        - identifier: identifier
          internal: true
          modifiedAt: modifiedAt
          description: description
          extraHeaders:
          - value: value
            key: key
          - value: value
            key: key
          triggers:
          - ARTIFACT_CREATION
          - ARTIFACT_CREATION
          latestExecutionResult: SUCCESS
          version: 1
          enabled: true
          url: url
          createdAt: createdAt
          secretSpacePath: secretSpacePath
          createdBy: 0
          insecure: true
          name: name
          secretSpaceId: 6
          secretIdentifier: secretIdentifier
        - identifier: identifier
          internal: true
          modifiedAt: modifiedAt
          description: description
          extraHeaders:
          - value: value
            key: key
          - value: value
            key: key
          triggers:
          - ARTIFACT_CREATION
          - ARTIFACT_CREATION
          latestExecutionResult: SUCCESS
          version: 1
          enabled: true
          url: url
          createdAt: createdAt
          secretSpacePath: secretSpacePath
          createdBy: 0
          insecure: true
          name: name
          secretSpaceId: 6
          secretIdentifier: secretIdentifier
        pageSize: 1
        itemCount: 1
      properties:
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 1
          type: integer
        webhooks:
          description: A list of Registries webhooks
          items:
            $ref: "#/components/schemas/Webhook"
          type: array
      required:
      - webhooks
      type: object
    ListWebhooksExecutions:
      description: A list of Harness Registries webhooks executions
      example:
        pageCount: 100
        executions:
        - duration: 6
          result: SUCCESS
          request:
            headers: headers
            body: body
            url: url
          retriggerable: true
          webhookId: 2
          created: 0
          response:
            headers: headers
            body: body
            status: status
            statusCode: 5
          retriggerOf: 5
          id: 1
          triggerType: ARTIFACT_CREATION
          error: error
        - duration: 6
          result: SUCCESS
          request:
            headers: headers
            body: body
            url: url
          retriggerable: true
          webhookId: 2
          created: 0
          response:
            headers: headers
            body: body
            status: status
            statusCode: 5
          retriggerOf: 5
          id: 1
          triggerType: ARTIFACT_CREATION
          error: error
        pageIndex: 0
        pageSize: 1
        itemCount: 1
      properties:
        executions:
          description: A list of Registries webhooks executions
          items:
            $ref: "#/components/schemas/WebhookExecution"
          type: array
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 1
          type: integer
      required:
      - executions
      type: object
    LocalReplicationRegistry:
      example:
        registryIdentifier: registryIdentifier
      properties:
        registryIdentifier:
          type: string
      required:
      - registryIdentifier
      type: object
    MavenArtifactDetailConfig:
      description: Config for maven artifact details
      properties:
        artifactId:
          type: string
        groupId:
          type: string
      type: object
    MigrationImage:
      example:
        imageId: imageId
        progress: 0
        imageTag: imageTag
        status: status
      properties:
        imageId:
          type: string
        imageTag:
          type: string
        progress:
          type: integer
        status:
          type: string
      type: object
    MigrationLog:
      properties:
        message:
          type: string
        timestamp:
          type: string
      type: object
    NpmArtifactDetailConfig:
      description: Config for npm artifact details
      properties:
        metadata:
          additionalProperties: true
          type: object
      type: object
    NugetArtifactDetailConfig:
      description: Config for nuget artifact details
      properties:
        metadata:
          additionalProperties: true
          type: object
      type: object
    PackageType:
      description: refers to package
      enum:
      - DOCKER
      - MAVEN
      - PYTHON
      - GENERIC
      - HELM
      - NUGET
      - NPM
      - RPM
      - CARGO
      type: string
    PythonArtifactDetailConfig:
      description: Config for python artifact details
      properties:
        metadata:
          additionalProperties: true
          type: object
      type: object
    Registry:
      description: Harness Artifact Registry
      example:
        createdAt: createdAt
        identifier: identifier
        scanners:
        - name: AQUA_TRIVY
        - name: AQUA_TRIVY
        modifiedAt: modifiedAt
        description: description
        blockedPattern:
        - blockedPattern
        - blockedPattern
        allowedPattern:
        - allowedPattern
        - allowedPattern
        config:
          type: VIRTUAL
        packageType: DOCKER
        url: url
        cleanupPolicy:
        - expireDays: 0
          versionPrefix:
          - versionPrefix
          - versionPrefix
          packagePrefix:
          - packagePrefix
          - packagePrefix
          name: name
        - expireDays: 0
          versionPrefix:
          - versionPrefix
          - versionPrefix
          packagePrefix:
          - packagePrefix
          - packagePrefix
          name: name
        labels:
        - labels
        - labels
      properties:
        allowedPattern:
          items:
            type: string
          type: array
        blockedPattern:
          items:
            type: string
          type: array
        cleanupPolicy:
          items:
            $ref: "#/components/schemas/CleanupPolicy"
          type: array
        config:
          $ref: "#/components/schemas/RegistryConfig"
        createdAt:
          type: string
        description:
          type: string
        identifier:
          type: string
        labels:
          items:
            type: string
          type: array
        modifiedAt:
          type: string
        packageType:
          $ref: "#/components/schemas/PackageType"
        scanners:
          items:
            $ref: "#/components/schemas/Scanner"
          type: array
        url:
          type: string
      required:
      - identifier
      - name
      - packageType
      - type
      - url
      type: object
    RegistryArtifactMetadata:
      description: Artifact Metadata
      example:
        downloadsCount: 0
        latestVersion: latestVersion
        registryPath: registryPath
        name: name
        lastModified: lastModified
        packageType: DOCKER
        labels:
        - labels
        - labels
        registryIdentifier: registryIdentifier
      properties:
        downloadsCount:
          format: int64
          type: integer
        labels:
          items:
            type: string
          type: array
        lastModified:
          type: string
        latestVersion:
          type: string
        name:
          type: string
        packageType:
          $ref: "#/components/schemas/PackageType"
        registryIdentifier:
          type: string
        registryPath:
          type: string
      required:
      - latestVersion
      - name
      - registryIdentifier
      - registryPath
      type: object
    RegistryConfig:
      description: SubConfig specific for Virtual or Upstream Registry
      discriminator:
        mapping:
          UPSTREAM: "#/components/schemas/UpstreamConfig"
          VIRTUAL: "#/components/schemas/VirtualConfig"
        propertyName: type
      example:
        type: VIRTUAL
      oneOf:
      - $ref: "#/components/schemas/VirtualConfig"
      - $ref: "#/components/schemas/UpstreamConfig"
      properties:
        type:
          $ref: "#/components/schemas/RegistryType"
      required:
      - type
      type: object
    RegistryMetadata:
      description: Harness Artifact Registry Metadata
      example:
        downloadsCount: 6
        identifier: identifier
        path: path
        artifactsCount: 0
        description: description
        registrySize: registrySize
        lastModified: lastModified
        type: VIRTUAL
        packageType: DOCKER
        url: url
        labels:
        - labels
        - labels
      properties:
        artifactsCount:
          format: int64
          type: integer
        description:
          type: string
        downloadsCount:
          format: int64
          type: integer
        identifier:
          type: string
        labels:
          items:
            type: string
          type: array
        lastModified:
          type: string
        packageType:
          $ref: "#/components/schemas/PackageType"
        path:
          type: string
        registrySize:
          type: string
        type:
          $ref: "#/components/schemas/RegistryType"
        url:
          type: string
      required:
      - identifier
      - packageType
      - type
      - url
      type: object
    RegistryRequest:
      example:
        identifier: identifier
        scanners:
        - name: AQUA_TRIVY
        - name: AQUA_TRIVY
        description: description
        blockedPattern:
        - blockedPattern
        - blockedPattern
        allowedPattern:
        - allowedPattern
        - allowedPattern
        config:
          type: VIRTUAL
        packageType: DOCKER
        cleanupPolicy:
        - expireDays: 0
          versionPrefix:
          - versionPrefix
          - versionPrefix
          packagePrefix:
          - packagePrefix
          - packagePrefix
          name: name
        - expireDays: 0
          versionPrefix:
          - versionPrefix
          - versionPrefix
          packagePrefix:
          - packagePrefix
          - packagePrefix
          name: name
        labels:
        - labels
        - labels
        parentRef: parentRef
      properties:
        allowedPattern:
          items:
            type: string
          type: array
        blockedPattern:
          items:
            type: string
          type: array
        cleanupPolicy:
          items:
            $ref: "#/components/schemas/CleanupPolicy"
          type: array
        config:
          $ref: "#/components/schemas/RegistryConfig"
        description:
          type: string
        identifier:
          type: string
        labels:
          items:
            type: string
          type: array
        packageType:
          $ref: "#/components/schemas/PackageType"
        parentRef:
          type: string
        scanners:
          items:
            $ref: "#/components/schemas/Scanner"
          type: array
      required:
      - identifier
      - packageType
      - type
      type: object
    RegistryType:
      description: refers to type of registry i.e virtual or upstream
      discriminator:
        propertyName: type
      enum:
      - VIRTUAL
      - UPSTREAM
      type: string
    ReplicationRegistry:
      oneOf:
      - $ref: "#/components/schemas/LocalReplicationRegistry"
      - $ref: "#/components/schemas/JfrogReplicationRegistry"
    ReplicationRule:
      example:
        createdAt: createdAt
        identifier: identifier
        blockedPatterns:
        - blockedPatterns
        - blockedPatterns
        sourceType: Local
        modifiedAt: modifiedAt
        destination: ""
        destinationType: Local
        source: null
        allowedPatterns:
        - allowedPatterns
        - allowedPatterns
        parentRef: parentRef
      properties:
        allowedPatterns:
          items:
            type: string
          type: array
        blockedPatterns:
          items:
            type: string
          type: array
        createdAt:
          type: string
        destination:
          $ref: "#/components/schemas/ReplicationRegistry"
        destinationType:
          enum:
          - Local
          - Jfrog
          - GCP
          type: string
        identifier:
          type: string
        modifiedAt:
          type: string
        parentRef:
          type: string
        source:
          $ref: "#/components/schemas/ReplicationRegistry"
        sourceType:
          enum:
          - Local
          - Jfrog
          - GCP
          type: string
      required:
      - allowedPatterns
      - blockedPatterns
      - createdAt
      - destination
      - destinationType
      - identifier
      - modifiedAt
      - parentRef
      - source
      - sourceType
      type: object
    ReplicationRuleRequest:
      example:
        blockedPatterns:
        - blockedPatterns
        - blockedPatterns
        sourceType: Local
        destination:
          registryIdentifier: registryIdentifier
        destinationType: Local
        source: null
        allowedPatterns:
        - allowedPatterns
        - allowedPatterns
      properties:
        allowedPatterns:
          items:
            type: string
          type: array
        blockedPatterns:
          items:
            type: string
          type: array
        destination:
          $ref: "#/components/schemas/ReplicationRegistry"
        destinationType:
          enum:
          - Local
          - Jfrog
          - GCP
          type: string
        source:
          $ref: "#/components/schemas/ReplicationRegistry"
        sourceType:
          enum:
          - Local
          - Jfrog
          - GCP
          type: string
      required:
      - allowedPatterns
      - blockedPatterns
      - destination
      - destinationType
      - source
      - sourceType
      type: object
    RpmArtifactDetailConfig:
      description: Config for RPM artifact details
      properties:
        metadata:
          additionalProperties: true
          type: object
      type: object
    SBOMDetails:
      example:
        avgScore: avgScore
        orchestrationId: orchestrationId
        allowListViolations: 5
        artifactSourceId: artifactSourceId
        artifactId: artifactId
        denyListViolations: 2
        maxScore: maxScore
        componentsCount: 5
        projectId: projectId
        orgId: orgId
      properties:
        allowListViolations:
          type: integer
        artifactId:
          type: string
        artifactSourceId:
          type: string
        avgScore:
          type: string
        componentsCount:
          type: integer
        denyListViolations:
          type: integer
        maxScore:
          type: string
        orchestrationId:
          type: string
        orgId:
          type: string
        projectId:
          type: string
      type: object
    SLSADetails:
      example:
        provenanceId: provenanceId
        status: status
      properties:
        provenanceId:
          type: string
        status:
          type: string
      type: object
    STODetails:
      example:
        executionId: executionId
        ignored: 3
        high: 9
        total: 1
        critical: 7
        low: 4
        medium: 7
        info: 2
        lastScanned: lastScanned
        pipelineId: pipelineId
      properties:
        critical:
          type: integer
        executionId:
          type: string
        high:
          type: integer
        ignored:
          type: integer
        info:
          type: integer
        lastScanned:
          type: string
        low:
          type: integer
        medium:
          type: integer
        pipelineId:
          type: string
        total:
          type: integer
      type: object
    Scanner:
      description: Scanner for Harness Artifact Registries
      example:
        name: AQUA_TRIVY
      properties:
        name:
          enum:
          - AQUA_TRIVY
          - GRYPE
          type: string
      type: object
    SectionType:
      description: refers to client setup section type
      discriminator:
        propertyName: type
      enum:
      - INLINE
      - TABS
      type: string
    Status:
      description: Indicates if the request was successful or not
      enum:
      - SUCCESS
      - FAILURE
      - ERROR
      type: string
    StorageDetails:
      description: storage details
      example:
        totalSize: totalSize
      properties:
        totalSize:
          type: string
      required:
      - totalSize
      type: object
    TabSetupStep:
      description: Tab Setup step
      properties:
        header:
          type: string
        sections:
          items:
            $ref: "#/components/schemas/ClientSetupSection"
          type: array
      type: object
    TabSetupStepConfig:
      description: Tab Setup step config
      properties:
        tabs:
          items:
            $ref: "#/components/schemas/TabSetupStep"
          type: array
      type: object
    Trigger:
      description: refers to trigger
      enum:
      - ARTIFACT_CREATION
      - ARTIFACT_DELETION
      type: string
    UpstreamConfig:
      description: Configuration for Harness Artifact UpstreamProxies
      properties:
        auth:
          $ref: "#/components/schemas/UpstreamConfig_auth"
        authType:
          $ref: "#/components/schemas/AuthType"
        source:
          enum:
          - Dockerhub
          - Custom
          - AwsEcr
          - MavenCentral
          - PyPi
          - NpmJs
          - NugetOrg
          - Crates
          type: string
        url:
          type: string
      required:
      - authType
      type: object
      x-discriminator-value: UPSTREAM
    UserPassword:
      properties:
        secretIdentifier:
          type: string
        secretSpaceId:
          type: integer
        secretSpacePath:
          type: string
        userName:
          type: string
      required:
      - password
      - userName
    VirtualConfig:
      description: Configuration for Harness Virtual Artifact Registries
      properties:
        upstreamProxies:
          items:
            type: string
          type: array
      type: object
    Webhook:
      description: Harness Regstries Webhook
      example:
        identifier: identifier
        internal: true
        modifiedAt: modifiedAt
        description: description
        extraHeaders:
        - value: value
          key: key
        - value: value
          key: key
        triggers:
        - ARTIFACT_CREATION
        - ARTIFACT_CREATION
        latestExecutionResult: SUCCESS
        version: 1
        enabled: true
        url: url
        createdAt: createdAt
        secretSpacePath: secretSpacePath
        createdBy: 0
        insecure: true
        name: name
        secretSpaceId: 6
        secretIdentifier: secretIdentifier
      properties:
        createdAt:
          type: string
        createdBy:
          format: int64
          type: integer
        description:
          type: string
        enabled:
          type: boolean
        extraHeaders:
          items:
            $ref: "#/components/schemas/ExtraHeader"
          type: array
        identifier:
          type: string
        insecure:
          type: boolean
        internal:
          type: boolean
        latestExecutionResult:
          $ref: "#/components/schemas/WebhookExecResult"
        modifiedAt:
          type: string
        name:
          type: string
        secretIdentifier:
          type: string
        secretSpaceId:
          format: int64
          type: integer
        secretSpacePath:
          type: string
        triggers:
          items:
            $ref: "#/components/schemas/Trigger"
          type: array
        url:
          type: string
        version:
          format: int64
          type: integer
      required:
      - enabled
      - identifier
      - insecure
      - name
      - url
      type: object
    WebhookExecRequest:
      description: Harness Regstries HTTP Webhook Request
      example:
        headers: headers
        body: body
        url: url
      properties:
        body:
          type: string
        headers:
          type: string
        url:
          type: string
      type: object
    WebhookExecResponse:
      description: Harness Regstries HTTP Webhook Response
      example:
        headers: headers
        body: body
        status: status
        statusCode: 5
      properties:
        body:
          type: string
        headers:
          type: string
        status:
          type: string
        statusCode:
          type: integer
      type: object
    WebhookExecResult:
      description: refers to webhook execution
      enum:
      - SUCCESS
      - RETRIABLE_ERROR
      - FATAL_ERROR
      type: string
    WebhookExecution:
      description: Harness Regstries Webhook Execution
      example:
        duration: 6
        result: SUCCESS
        request:
          headers: headers
          body: body
          url: url
        retriggerable: true
        webhookId: 2
        created: 0
        response:
          headers: headers
          body: body
          status: status
          statusCode: 5
        retriggerOf: 5
        id: 1
        triggerType: ARTIFACT_CREATION
        error: error
      properties:
        created:
          format: int64
          type: integer
        duration:
          format: int64
          type: integer
        error:
          type: string
        id:
          format: int64
          type: integer
        request:
          $ref: "#/components/schemas/WebhookExecRequest"
        response:
          $ref: "#/components/schemas/WebhookExecResponse"
        result:
          $ref: "#/components/schemas/WebhookExecResult"
        retriggerOf:
          format: int64
          type: integer
        retriggerable:
          type: boolean
        triggerType:
          $ref: "#/components/schemas/Trigger"
        webhookId:
          format: int64
          type: integer
      type: object
    WebhookRequest:
      example:
        identifier: identifier
        secretSpacePath: secretSpacePath
        insecure: true
        name: name
        secretSpaceId: 0
        description: description
        extraHeaders:
        - value: value
          key: key
        - value: value
          key: key
        triggers:
        - ARTIFACT_CREATION
        - ARTIFACT_CREATION
        enabled: true
        secretIdentifier: secretIdentifier
        url: url
      properties:
        description:
          type: string
        enabled:
          type: boolean
        extraHeaders:
          items:
            $ref: "#/components/schemas/ExtraHeader"
          type: array
        identifier:
          type: string
        insecure:
          type: boolean
        name:
          type: string
        secretIdentifier:
          type: string
        secretSpaceId:
          format: int64
          type: integer
        secretSpacePath:
          type: string
        triggers:
          items:
            $ref: "#/components/schemas/Trigger"
          type: array
        url:
          type: string
      required:
      - enabled
      - identifier
      - insecure
      - name
      - url
      type: object
    inline_response_201:
      example:
        data:
          createdAt: createdAt
          identifier: identifier
          scanners:
          - name: AQUA_TRIVY
          - name: AQUA_TRIVY
          modifiedAt: modifiedAt
          description: description
          blockedPattern:
          - blockedPattern
          - blockedPattern
          allowedPattern:
          - allowedPattern
          - allowedPattern
          config:
            type: VIRTUAL
          packageType: DOCKER
          url: url
          cleanupPolicy:
          - expireDays: 0
            versionPrefix:
            - versionPrefix
            - versionPrefix
            packagePrefix:
            - packagePrefix
            - packagePrefix
            name: name
          - expireDays: 0
            versionPrefix:
            - versionPrefix
            - versionPrefix
            packagePrefix:
            - packagePrefix
            - packagePrefix
            name: name
          labels:
          - labels
          - labels
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/Registry"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200:
      example:
        status: SUCCESS
      properties:
        status:
          $ref: "#/components/schemas/Status"
      required:
      - status
      type: object
    inline_response_200_1:
      example:
        data:
          createdAt: createdAt
          downloadsCount: 0
          imageName: imageName
          modifiedAt: modifiedAt
          packageType: DOCKER
          labels:
          - labels
          - labels
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/ArtifactSummary"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_2:
      example:
        data:
          uploadSize: 5
          downloadSize: 6
          downloadCount: 0
          totalStorageSize: 1
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/ArtifactStats"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_3:
      example:
        data:
          deployments:
            deployments:
            - lastDeployedAt: lastDeployedAt
              infraIdentifier: infraIdentifier
              orgIdentifier: orgIdentifier
              count: 0
              infraName: infraName
              lastDeployedById: lastDeployedById
              serviceName: serviceName
              pipelineId: pipelineId
              serviceIdentifier: serviceIdentifier
              lastDeployedByName: lastDeployedByName
              envName: envName
              envType: PreProduction
              lastPipelineExecutionId: lastPipelineExecutionId
              projectIdentifier: projectIdentifier
              envIdentifier: envIdentifier
              lastPipelineExecutionName: lastPipelineExecutionName
            - lastDeployedAt: lastDeployedAt
              infraIdentifier: infraIdentifier
              orgIdentifier: orgIdentifier
              count: 0
              infraName: infraName
              lastDeployedById: lastDeployedById
              serviceName: serviceName
              pipelineId: pipelineId
              serviceIdentifier: serviceIdentifier
              lastDeployedByName: lastDeployedByName
              envName: envName
              envType: PreProduction
              lastPipelineExecutionId: lastPipelineExecutionId
              projectIdentifier: projectIdentifier
              envIdentifier: envIdentifier
              lastPipelineExecutionName: lastPipelineExecutionName
            pageCount: 100
            pageIndex: 0
            pageSize: 1
            itemCount: 1
          deploymentsStats:
            Production: 1
            PreProduction: 6
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/ArtifactDeploymentsDetails"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_4:
      example:
        data:
          createdAt: createdAt
          size: size
          createdBy: createdBy
          modifiedAt: modifiedAt
          name: name
          packageType: DOCKER
          version: version
          downloadCount: 0
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/ArtifactDetail"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_5:
      example:
        data:
          createdAt: createdAt
          downloadsCount: 0
          imageName: imageName
          size: size
          modifiedAt: modifiedAt
          registryPath: registryPath
          packageType: DOCKER
          pullCommand: pullCommand
          version: version
          url: url
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/DockerArtifactDetail"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_6:
      example:
        data:
          stoDetails:
            executionId: executionId
            ignored: 3
            high: 9
            total: 1
            critical: 7
            low: 4
            medium: 7
            info: 2
            lastScanned: lastScanned
            pipelineId: pipelineId
          sbomDetails:
            avgScore: avgScore
            orchestrationId: orchestrationId
            allowListViolations: 5
            artifactSourceId: artifactSourceId
            artifactId: artifactId
            denyListViolations: 2
            maxScore: maxScore
            componentsCount: 5
            projectId: projectId
            orgId: orgId
          slsaDetails:
            provenanceId: provenanceId
            status: status
          deploymentsDetails:
            totalDeployment: 1
            prodDeployment: 6
            nonProdDeployment: 0
          buildDetails:
            stepExecutionId: stepExecutionId
            pipelineIdentifier: pipelineIdentifier
            stageExecutionId: stageExecutionId
            orgIdentifier: orgIdentifier
            pipelineDisplayName: pipelineDisplayName
            pipelineExecutionId: pipelineExecutionId
            projectIdentifier: projectIdentifier
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/DockerArtifactIntegrationDetail"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_7:
      example:
        data:
          osArch: osArch
          digest: digest
          layers:
          - size: size
            command: command
          - size: size
            command: command
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/DockerLayersSummary"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_8:
      example:
        data:
          manifest: manifest
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/DockerArtifactManifest"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_9:
      example:
        data:
          imageName: imageName
          manifests:
          - stoDetails:
              executionId: executionId
              ignored: 3
              high: 9
              total: 1
              critical: 7
              low: 4
              medium: 7
              info: 2
              lastScanned: lastScanned
              pipelineId: pipelineId
            createdAt: createdAt
            downloadsCount: 0
            stoPipelineId: stoPipelineId
            size: size
            stoExecutionId: stoExecutionId
            osArch: osArch
            digest: digest
          - stoDetails:
              executionId: executionId
              ignored: 3
              high: 9
              total: 1
              critical: 7
              low: 4
              medium: 7
              info: 2
              lastScanned: lastScanned
              pipelineId: pipelineId
            createdAt: createdAt
            downloadsCount: 0
            stoPipelineId: stoPipelineId
            size: size
            stoExecutionId: stoExecutionId
            osArch: osArch
            digest: digest
          version: version
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/DockerManifests"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_10:
      example:
        downloadUrl: downloadUrl
        status: SUCCESS
      properties:
        downloadUrl:
          description: download url of artifact
          type: string
        status:
          $ref: "#/components/schemas/Status"
      required:
      - downloadUrl
      - status
      type: object
    inline_response_200_11:
      example:
        pageCount: 100
        pageIndex: 0
        files:
        - checksums:
          - checksums
          - checksums
          createdAt: createdAt
          downloadCommand: downloadCommand
          size: size
          name: name
        - checksums:
          - checksums
          - checksums
          createdAt: createdAt
          downloadCommand: downloadCommand
          size: size
          name: name
        pageSize: 1
        itemCount: 1
        status: SUCCESS
      properties:
        files:
          description: A list of Harness Artifact Files
          items:
            $ref: "#/components/schemas/FileDetail"
          type: array
        itemCount:
          description: The total number of items
          example: 1
          format: int64
          type: integer
        pageCount:
          description: The total number of pages
          example: 100
          format: int64
          type: integer
        pageIndex:
          description: The current page
          example: 0
          format: int64
          type: integer
        pageSize:
          description: The number of items per page
          example: 1
          type: integer
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - files
      - status
      type: object
    inline_response_200_12:
      example:
        data:
          artifact: artifact
          createdAt: createdAt
          downloadsCount: 0
          size: size
          modifiedAt: modifiedAt
          registryPath: registryPath
          packageType: DOCKER
          pullCommand: pullCommand
          version: version
          url: url
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/HelmArtifactDetail"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_13:
      example:
        data:
          manifest: manifest
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/HelmArtifactManifest"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_14:
      example:
        data:
          imageName: imageName
          stoPipelineId: stoPipelineId
          stoExecutionId: stoExecutionId
          sscaArtifactId: sscaArtifactId
          sscaArtifactSourceId: sscaArtifactSourceId
          packageType: DOCKER
          version: version
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/ArtifactVersionSummary"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_15:
      example:
        data:
          pageCount: 100
          artifactVersions:
          - downloadsCount: 5
            size: size
            deploymentMetadata:
              nonProdEnvCount: 0
              prodEnvCount: 6
            registryPath: registryPath
            name: name
            lastModified: lastModified
            digestCount: 1
            fileCount: 5
            packageType: DOCKER
            pullCommand: pullCommand
            registryIdentifier: registryIdentifier
          - downloadsCount: 5
            size: size
            deploymentMetadata:
              nonProdEnvCount: 0
              prodEnvCount: 6
            registryPath: registryPath
            name: name
            lastModified: lastModified
            digestCount: 1
            fileCount: 5
            packageType: DOCKER
            pullCommand: pullCommand
            registryIdentifier: registryIdentifier
          pageIndex: 0
          pageSize: 1
          itemCount: 1
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/ListArtifactVersion"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_16:
      example:
        data:
          pageCount: 100
          pageIndex: 0
          pageSize: 1
          itemCount: 1
          labels:
          - labels
          - labels
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/ListArtifactLabel"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_17:
      example:
        data:
          pageCount: 100
          pageIndex: 0
          pageSize: 1
          artifacts:
          - downloadsCount: 0
            latestVersion: latestVersion
            registryPath: registryPath
            name: name
            lastModified: lastModified
            packageType: DOCKER
            labels:
            - labels
            - labels
            registryIdentifier: registryIdentifier
          - downloadsCount: 0
            latestVersion: latestVersion
            registryPath: registryPath
            name: name
            lastModified: lastModified
            packageType: DOCKER
            labels:
            - labels
            - labels
            registryIdentifier: registryIdentifier
          itemCount: 1
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/ListRegistryArtifact"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_18:
      example:
        data:
          mainHeader: mainHeader
          secHeader: secHeader
          sections:
          - header: header
            secHeader: secHeader
            type: INLINE
          - header: header
            secHeader: secHeader
            type: INLINE
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/ClientSetupDetails"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_19:
      example:
        data:
          pageCount: 100
          pageIndex: 0
          webhooks:
          - identifier: identifier
            internal: true
            modifiedAt: modifiedAt
            description: description
            extraHeaders:
            - value: value
              key: key
            - value: value
              key: key
            triggers:
            - ARTIFACT_CREATION
            - ARTIFACT_CREATION
            latestExecutionResult: SUCCESS
            version: 1
            enabled: true
            url: url
            createdAt: createdAt
            secretSpacePath: secretSpacePath
            createdBy: 0
            insecure: true
            name: name
            secretSpaceId: 6
            secretIdentifier: secretIdentifier
          - identifier: identifier
            internal: true
            modifiedAt: modifiedAt
            description: description
            extraHeaders:
            - value: value
              key: key
            - value: value
              key: key
            triggers:
            - ARTIFACT_CREATION
            - ARTIFACT_CREATION
            latestExecutionResult: SUCCESS
            version: 1
            enabled: true
            url: url
            createdAt: createdAt
            secretSpacePath: secretSpacePath
            createdBy: 0
            insecure: true
            name: name
            secretSpaceId: 6
            secretIdentifier: secretIdentifier
          pageSize: 1
          itemCount: 1
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/ListWebhooks"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_201_1:
      example:
        data:
          identifier: identifier
          internal: true
          modifiedAt: modifiedAt
          description: description
          extraHeaders:
          - value: value
            key: key
          - value: value
            key: key
          triggers:
          - ARTIFACT_CREATION
          - ARTIFACT_CREATION
          latestExecutionResult: SUCCESS
          version: 1
          enabled: true
          url: url
          createdAt: createdAt
          secretSpacePath: secretSpacePath
          createdBy: 0
          insecure: true
          name: name
          secretSpaceId: 6
          secretIdentifier: secretIdentifier
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/Webhook"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_20:
      example:
        data:
          pageCount: 100
          executions:
          - duration: 6
            result: SUCCESS
            request:
              headers: headers
              body: body
              url: url
            retriggerable: true
            webhookId: 2
            created: 0
            response:
              headers: headers
              body: body
              status: status
              statusCode: 5
            retriggerOf: 5
            id: 1
            triggerType: ARTIFACT_CREATION
            error: error
          - duration: 6
            result: SUCCESS
            request:
              headers: headers
              body: body
              url: url
            retriggerable: true
            webhookId: 2
            created: 0
            response:
              headers: headers
              body: body
              status: status
              statusCode: 5
            retriggerOf: 5
            id: 1
            triggerType: ARTIFACT_CREATION
            error: error
          pageIndex: 0
          pageSize: 1
          itemCount: 1
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/ListWebhooksExecutions"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_21:
      example:
        data:
          duration: 6
          result: SUCCESS
          request:
            headers: headers
            body: body
            url: url
          retriggerable: true
          webhookId: 2
          created: 0
          response:
            headers: headers
            body: body
            status: status
            statusCode: 5
          retriggerOf: 5
          id: 1
          triggerType: ARTIFACT_CREATION
          error: error
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/WebhookExecution"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_22:
      example:
        data:
          pageCount: 100
          pageIndex: 0
          pageSize: 10
          rules:
          - createdAt: createdAt
            identifier: identifier
            blockedPatterns:
            - blockedPatterns
            - blockedPatterns
            sourceType: Local
            modifiedAt: modifiedAt
            destination: ""
            destinationType: Local
            source: null
            allowedPatterns:
            - allowedPatterns
            - allowedPatterns
            parentRef: parentRef
          - createdAt: createdAt
            identifier: identifier
            blockedPatterns:
            - blockedPatterns
            - blockedPatterns
            sourceType: Local
            modifiedAt: modifiedAt
            destination: ""
            destinationType: Local
            source: null
            allowedPatterns:
            - allowedPatterns
            - allowedPatterns
            parentRef: parentRef
          itemCount: 1
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/ListReplicationRule"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_23:
      example:
        data:
          createdAt: createdAt
          identifier: identifier
          blockedPatterns:
          - blockedPatterns
          - blockedPatterns
          sourceType: Local
          modifiedAt: modifiedAt
          destination: ""
          destinationType: Local
          source: null
          allowedPatterns:
          - allowedPatterns
          - allowedPatterns
          parentRef: parentRef
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/ReplicationRule"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_24:
      example:
        data:
          images:
          - imageId: imageId
            progress: 0
            imageTag: imageTag
            status: status
          - imageId: imageId
            progress: 0
            imageTag: imageTag
            status: status
          pageCount: 100
          pageIndex: 0
          pageSize: 1
          itemCount: 1
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/ListMigrationImage"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_25:
      example:
        data:
          pageCount: 100
          pageIndex: 0
          pageSize: 1
          artifacts:
          - downloadsCount: 0
            latestVersion: latestVersion
            deploymentMetadata:
              nonProdEnvCount: 0
              prodEnvCount: 6
            registryPath: registryPath
            name: name
            lastModified: lastModified
            packageType: DOCKER
            pullCommand: pullCommand
            version: version
            labels:
            - labels
            - labels
            registryIdentifier: registryIdentifier
          - downloadsCount: 0
            latestVersion: latestVersion
            deploymentMetadata:
              nonProdEnvCount: 0
              prodEnvCount: 6
            registryPath: registryPath
            name: name
            lastModified: lastModified
            packageType: DOCKER
            pullCommand: pullCommand
            version: version
            labels:
            - labels
            - labels
            registryIdentifier: registryIdentifier
          itemCount: 1
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/ListArtifact"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_26:
      example:
        data:
          totalSize: totalSize
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/StorageDetails"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    inline_response_200_27:
      example:
        data:
          pageCount: 100
          pageIndex: 0
          pageSize: 1
          registries:
          - downloadsCount: 6
            identifier: identifier
            path: path
            artifactsCount: 0
            description: description
            registrySize: registrySize
            lastModified: lastModified
            type: VIRTUAL
            packageType: DOCKER
            url: url
            labels:
            - labels
            - labels
          - downloadsCount: 6
            identifier: identifier
            path: path
            artifactsCount: 0
            description: description
            registrySize: registrySize
            lastModified: lastModified
            type: VIRTUAL
            packageType: DOCKER
            url: url
            labels:
            - labels
            - labels
          itemCount: 1
        status: SUCCESS
      properties:
        data:
          $ref: "#/components/schemas/ListRegistry"
        status:
          $ref: "#/components/schemas/Status"
      required:
      - data
      - status
      type: object
    UpstreamConfig_auth:
      nullable: true
      oneOf:
      - $ref: "#/components/schemas/UserPassword"
      - $ref: "#/components/schemas/AccessKeySecretKey"
  securitySchemes:
    XApiKeyAuth:
      in: header
      name: x-api-key
      type: apiKey
