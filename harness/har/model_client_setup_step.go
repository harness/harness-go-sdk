/*
Harness Artifact Registry API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package har

import (
	"encoding/json"
)

// checks if the ClientSetupStep type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientSetupStep{}

// ClientSetupStep Client Setup Step
type ClientSetupStep struct {
	Commands []ClientSetupStepCommand `json:"commands,omitempty"`
	Header *string `json:"header,omitempty"`
	Type *ClientSetupStepType `json:"type,omitempty"`
}

// NewClientSetupStep instantiates a new ClientSetupStep object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientSetupStep() *ClientSetupStep {
	this := ClientSetupStep{}
	return &this
}

// NewClientSetupStepWithDefaults instantiates a new ClientSetupStep object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientSetupStepWithDefaults() *ClientSetupStep {
	this := ClientSetupStep{}
	return &this
}

// GetCommands returns the Commands field value if set, zero value otherwise.
func (o *ClientSetupStep) GetCommands() []ClientSetupStepCommand {
	if o == nil || IsNil(o.Commands) {
		var ret []ClientSetupStepCommand
		return ret
	}
	return o.Commands
}

// GetCommandsOk returns a tuple with the Commands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientSetupStep) GetCommandsOk() ([]ClientSetupStepCommand, bool) {
	if o == nil || IsNil(o.Commands) {
		return nil, false
	}
	return o.Commands, true
}

// HasCommands returns a boolean if a field has been set.
func (o *ClientSetupStep) HasCommands() bool {
	if o != nil && !IsNil(o.Commands) {
		return true
	}

	return false
}

// SetCommands gets a reference to the given []ClientSetupStepCommand and assigns it to the Commands field.
func (o *ClientSetupStep) SetCommands(v []ClientSetupStepCommand) {
	o.Commands = v
}

// GetHeader returns the Header field value if set, zero value otherwise.
func (o *ClientSetupStep) GetHeader() string {
	if o == nil || IsNil(o.Header) {
		var ret string
		return ret
	}
	return *o.Header
}

// GetHeaderOk returns a tuple with the Header field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientSetupStep) GetHeaderOk() (*string, bool) {
	if o == nil || IsNil(o.Header) {
		return nil, false
	}
	return o.Header, true
}

// HasHeader returns a boolean if a field has been set.
func (o *ClientSetupStep) HasHeader() bool {
	if o != nil && !IsNil(o.Header) {
		return true
	}

	return false
}

// SetHeader gets a reference to the given string and assigns it to the Header field.
func (o *ClientSetupStep) SetHeader(v string) {
	o.Header = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ClientSetupStep) GetType() ClientSetupStepType {
	if o == nil || IsNil(o.Type) {
		var ret ClientSetupStepType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientSetupStep) GetTypeOk() (*ClientSetupStepType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ClientSetupStep) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given ClientSetupStepType and assigns it to the Type field.
func (o *ClientSetupStep) SetType(v ClientSetupStepType) {
	o.Type = &v
}

func (o ClientSetupStep) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientSetupStep) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Commands) {
		toSerialize["commands"] = o.Commands
	}
	if !IsNil(o.Header) {
		toSerialize["header"] = o.Header
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableClientSetupStep struct {
	value *ClientSetupStep
	isSet bool
}

func (v NullableClientSetupStep) Get() *ClientSetupStep {
	return v.value
}

func (v *NullableClientSetupStep) Set(val *ClientSetupStep) {
	v.value = val
	v.isSet = true
}

func (v NullableClientSetupStep) IsSet() bool {
	return v.isSet
}

func (v *NullableClientSetupStep) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientSetupStep(val *ClientSetupStep) *NullableClientSetupStep {
	return &NullableClientSetupStep{value: val, isSet: true}
}

func (v NullableClientSetupStep) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientSetupStep) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


