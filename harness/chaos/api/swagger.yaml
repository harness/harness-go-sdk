openapi: 3.0.1
info:
  title: Chaos Manager API
  contact: {}
  version: "1.0"
servers:
- url: /api/manager
paths:
  /experimentHelperImageVersion:
    get:
      summary: Get experiment helper image version
      description: Get experiment helper image version
      operationId: getExperimentHelperImageVersion
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/handlers.ExperimentHelperImageVersion"
  /internal/execution-node/{experimentId}/{experimentRunId}:
    get:
      summary: Get chaos execution node
      description: Get chaos execution node
      operationId: experimentExecutionNodeDetails
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: org id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: name of the node
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: experimentId
        in: path
        description: experimentId to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: experimentRunId
        in: path
        description: experimentRunId to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/execution.ChaosExecutionNode"
                x-content-type: application/json
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    put:
      summary: Create chaos execution node
      description: Create chaos execution node
      operationId: createChaosExperimentExecutionNode
      parameters:
      - name: experimentId
        in: path
        description: experimentId to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: experimentRunId
        in: path
        description: experimentRunId to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Create chaos execution node
        content:
          '*/*':
            schema:
              type: array
              items:
                $ref: "#/components/schemas/execution.ChaosExecutionNode"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: node
  /internal/execution-node/{experimentId}/{experimentRunId}/{name}:
    post:
      summary: Update chaos execution node
      description: Update chaos execution node
      operationId: updateChaosExperimentExecutionNode
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: path
        description: name of the node
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: experimentId
        in: path
        description: experimentId to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: experimentRunId
        in: path
        description: experimentRunId to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Create chaos execution node
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/execution.ChaosExecutionNode"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: node
  /internal/recommendations/event:
    post:
      summary: process the recommendation event
      description: process the recommendation event
      operationId: recommendationEvent
      requestBody:
        description: request body
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/recommendation.EventRequest"
        required: true
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: request
  /internal/v2/experiments/{experimentId}/run:
    post:
      summary: Run a chaos v2 experiment internal API
      description: Run a chaos v2 experiment internal API
      operationId: runChaosV2InternalAPI
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: experimentId to be executed
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Run Experiment
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/types.InternalExperimentRunRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model.ReRunChaosWorkflowResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: '"runExperiment"'
  /internal/v2/experiments/{experimentId}/run/{notifyId}:
    post:
      summary: Get the chaos v2 experiment run internal API
      description: Get the execution details of a chaos v2 experiment
      operationId: getChaosV2ExperimentRunInternalAPI
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: experimentId to be filtered
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: notifyId
        in: path
        description: notifyId for which execution is to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: get Experiment
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/types.InternalExperimentRunRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model.WorkflowRun"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: '"getExperimentRun"'
  /rest/actions:
    get:
      summary: List actions with filtering options
      description: "Retrieve a list of actions based on various filters like name,\
        \ tags, date range, and infrastructure type, with pagination support."
      operationId: listActions
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: chaos hub identity
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: search
        in: query
        description: name of the action
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 15
      - name: infraType
        in: query
        description: infra type of the action
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: actionType
        in: query
        description: filter based on Action
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: includeAllScope
        in: query
        description: include all scope
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the list of Actions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions.ListActionTemplateResponse"
        "400":
          description: Bad request - Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "401":
          description: Unauthorized - Invalid credentials or insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    post:
      summary: Create a new action
      description: Create a new action
      operationId: createAction
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: action configuration
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_actions.Action"
        required: true
      responses:
        "200":
          description: Successfully created Action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_actions.Action"
        "400":
          description: Bad request - Invalid input or validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "401":
          description: Unauthorized - Invalid credentials or insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: action
  /rest/actions/{identity}:
    get:
      summary: Get an action
      description: Retrieve details of a specific action by its ID
      operationId: getAction
      parameters:
      - name: accountIdentifier
        in: query
        description: Account ID for accessing the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: Organization ID for accessing the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: Project ID for accessing the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: identity
        in: path
        description: ID of the Action to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved Action details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/actions.ActionResponse"
        "400":
          description: Bad request - Missing or invalid Action ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "401":
          description: Unauthorized - Invalid credentials or insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    put:
      summary: Update a new action
      description: Update a new action with the specified configuration
      operationId: updateAction
      parameters:
      - name: accountIdentifier
        in: query
        description: Account ID to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: Organization ID to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: Project ID to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: identity
        in: path
        description: ID of the Action to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Action configuration
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/actions.ActionResponse"
        required: true
      responses:
        "200":
          description: Successfully updated Action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_actions.Action"
        "400":
          description: Bad request - Invalid input or validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "401":
          description: Unauthorized - Invalid credentials or insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: Action
    delete:
      summary: Delete an action
      description: Delete an action with a provided identifier
      operationId: deleteAction
      parameters:
      - name: accountIdentifier
        in: query
        description: Account ID to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: Organization ID to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: Project ID to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: identity
        in: path
        description: ID of the Action to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully delete Action
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "400":
          description: Bad request - Invalid input or validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "401":
          description: Unauthorized - Invalid credentials or insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/actions/import:
    post:
      summary: Import a new action
      description: Import a new action
      operationId: importAction
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: action configuration
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/actions.ImportActionTemplateRequest"
        required: true
      responses:
        "200":
          description: Successfully created Action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_actions.Action"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: action
  /rest/actions/manifest/{identity}:
    get:
      summary: Get an action manifest
      description: Retrieve Action manifest of a specific action by its ID
      operationId: getActionManifest
      parameters:
      - name: accountIdentifier
        in: query
        description: Account ID for accessing the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: Organization ID for accessing the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: Project ID for accessing the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: identity
        in: path
        description: ID of the Action to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved Action manifest details
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "400":
          description: Bad request - Missing or invalid Action ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "401":
          description: Unauthorized - Invalid credentials or insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "404":
          description: Not Found - Action not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/chaos-experiment-run/report/{experimentRunId}/{notifyId}:
    get:
      summary: Generate and return kubernetesV1 chaos experiment run report
      description: Generate and return kubernetesV1 chaos experiment run report
      operationId: GetChaosExperimentRunReport
      parameters:
      - name: experimentRunId
        in: path
        description: experimentRunId for kubernetesV1 experiment run report generation
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: notifyId
        in: path
        description: notifyId for kubernetesV1 experiment run report generation
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
                x-content-type: application/pdf
        "500":
          description: Internal Server Error
          content:
            application/pdf:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/chaosDashboards:
    get:
      summary: Get chaos dashboard
      description: Get chaos dashboard
      operationId: getChaosDashboard
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/handlers.Dashboard"
                x-content-type: application/json
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /rest/genai/sgp/generate:
    post:
      summary: Get security governance conditions template
      description: Get security governance conditions template
      operationId: getSGPTemplateByGenAI
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/security_governance.Condition"
  /rest/hubs:
    get:
      summary: Lists chaos hubs based on given filters
      description: Lists chaos hubs based on given filters
      operationId: listChaosHub
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: search
        in: query
        description: search string for chaos hub name
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: includeAllScope
        in: query
        description: get hubs from all scope
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 15
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaoshubv2.ListHubResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    post:
      summary: Create chaos hub
      description: Create chaos hub
      operationId: createChaosHub
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: create hub request
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/chaoshubv2.CreateHubRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaoshubv2.GetHubResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: createHubRequest
  /rest/hubs/{hubIdentity}:
    get:
      summary: Get chaos hub based on given filters
      description: Get chaos hub based on given filters
      operationId: getChaosHub
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: path
        description: chaos hub identity
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaoshubv2.GetHubResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    put:
      summary: Update chaos hub
      description: Update chaos hub
      operationId: updateChaosHub
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: path
        description: chaos hub identity
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: update hub request
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/chaoshubv2.UpdateHubRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaoshubv2.GetHubResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: updateHubRequest
  /rest/hubs/faults:
    get:
      summary: Lists faults in a chaos hub based on given filters
      description: Lists faults in a chaos hub based on given filters
      operationId: listFault
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: identity of hub
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: infraType
        in: query
        description: type of the infra
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: permissionsRequired
        in: query
        description: permissions required for fault
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: entityType
        in: query
        description: category of the fault
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: search
        in: query
        description: search string for chaos hub name
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 15
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaoshub.ListFaultsResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "401":
          description: Unauthorised
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/imageRegistry:
    get:
      summary: Get image registry
      description: Get image registry
      operationId: getImageRegistry
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/handlers.ImageRegistryDetails"
  /rest/overview/experiment-stats:
    get:
      summary: Get chaos experiment run overview stats
      description: Get resource usage
      operationId: getExperimentRunsOverviewStats
      parameters:
      - name: accountIdentifier
        in: query
        description: Account Identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: orgIdentifier
        in: query
        description: Organization Identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: Project Identifier
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: startTime
        in: query
        description: Start Time
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: endTime
        in: query
        description: End Time
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: groupBy
        in: query
        description: Group By Parameter
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - DAY
          - WEEK
          - MONTH
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/handlers.ChaosExperimentRunsStatsResponse"
        "400":
          description: Bad Request
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /rest/recommendations:
    get:
      summary: Get recommendation details
      description: Get recommendation details based on the recommendation id
      operationId: getRecommendation
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: recommendationID
        in: query
        description: recommendation id
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_recommendation.Recommendation"
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
    post:
      summary: List recommendations
      description: List recommendations based on the filters
      operationId: listRecommendations
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: request body
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/recommendations.ListRecommendationsRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/recommendations.ListRecommendationsResponse"
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      x-codegen-request-body-name: request
    delete:
      summary: Delete recommendation from db
      description: Delete recommendation based on the recommendation id
      operationId: deleteRecommendation
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: recommendationID
        in: query
        description: recommendation id
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /rest/recommendations/action/create:
    post:
      summary: Create new experiment
      description: Create new experiment based on the recommendation
      operationId: createRecommendation
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: recommendationID
        in: query
        description: recommendation id
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/recommendations.CreateActionResponse"
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /rest/recommendations/action/run:
    post:
      summary: Run the recommended experiment
      description: Run the recommended experiment
      operationId: runRecommendation
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: recommendationID
        in: query
        description: recommendation id
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/recommendations.RunActionResponse"
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /rest/recommendations/status:
    post:
      summary: Update the recommendation status
      description: Update the recommendation status
      operationId: updateRecommendationStatus
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: recommendationID
        in: query
        description: recommendation id
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: status
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content: {}
        "400":
          description: Bad Request
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /rest/service/{accountID}:
    get:
      summary: Get service usage details for account in the requested time frame
      description: Get service details for account
      operationId: getAccountServiceDetails
      parameters:
      - name: accountID
        in: path
        description: ID of the account
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 10
      - name: startTime
        in: query
        description: start time in unix format in milliseconds
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: endTime
        in: query
        description: end time in unix format in milliseconds
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: service
        in: query
        description: search based on service name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: serviceType
        in: query
        description: search based on service type
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sortAscending
        in: query
        description: sort the response in ascending order
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: sortField
        in: query
        description: "sort the response w.r.t field: faultsRan, experiments, experimentsRan"
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: faultsRan
          enum:
          - experimentsRan
          - experiments
          - faultsRan
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaosserviceusage.ServiceDataResponse"
        "400":
          description: Bad Request
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /rest/service/overall/stats/{accountID}:
    get:
      summary: Get the overall service usage stats by type related to requested account
      description: Get overall service usage stats by type for account
      operationId: getOverallServiceUsageStats
      parameters:
      - name: accountID
        in: path
        description: ID of the account
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startTime
        in: query
        description: start time in unix format in milliseconds
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: endTime
        in: query
        description: end time in unix format in milliseconds
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaosserviceusage.OverallServiceUsageStats"
        "400":
          description: Bad Request
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /rest/service/report/{accountID}:
    get:
      summary: Generates service usage report in csv format
      description: Generates service usage report for account in a given timeframe
        in csv format
      operationId: getServiceUsageReport
      parameters:
      - name: accountID
        in: path
        description: ID of the account
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: startTime
        in: query
        description: start time in unix format in milliseconds
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: endTime
        in: query
        description: end time in unix format in milliseconds
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: array
                  items:
                    type: string
                x-content-type: application/json
        "500":
          description: Internal Server Error
          content: {}
  /rest/service/stats/{accountID}:
    get:
      summary: Get the service usage stats related to requested account grouped by
        day or month
      description: Get service usage stats for account
      operationId: getAccountServiceUsageStats
      parameters:
      - name: accountID
        in: path
        description: ID of the account
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: groupBy
        in: query
        description: group by period (day/month)
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: startTime
        in: query
        description: start time in unix format in milliseconds
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: endTime
        in: query
        description: end time in unix format in milliseconds
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaosserviceusage.UsageStats"
        "400":
          description: Bad Request
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /rest/templates/actions:
    get:
      summary: Lists all the action templates in a hub based on tag
      description: Lists all the action templates in a hub based on tag
      operationId: listActionTemplate
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: chaos hub identity
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 15
      - name: search
        in: query
        description: name of the action
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: infraType
        in: query
        description: infra type of the action
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: entityType
        in: query
        description: filter based on Action
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: includeAllScope
        in: query
        description: include all scope
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaosfaulttemplate.ListActionTemplateResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    post:
      summary: Creates the action templates in a hub based on tag
      description: Creates action templates in a hub based on tag
      operationId: createActionTemplate
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: action configuration
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/chaosfaulttemplate.ActionTemplate"
        required: true
      responses:
        "200":
          description: Successfully created Action
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/chaosfaulttemplate.ActionTemplate"
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: action
  /rest/templates/actions/{identity}:
    get:
      summary: Get the action template in a hub based on action ref
      description: Get the action template in a hub based on action ref
      operationId: getActionTemplate
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: chaos hub identity
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: revision
        in: query
        description: revision of the 1st fault template
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: identity
        in: path
        description: name of the fault
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaosfaulttemplate.GetActionTemplateResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    put:
      summary: Updates the action templates in a hub
      description: Updates an existing action template in a hub with new configuration
      operationId: updateActionTemplate
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: isDefault
        in: query
        description: mark template as default
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: identity
        in: path
        description: ID of the Action to edit
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: action configuration
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/chaosfaulttemplate.ActionTemplate"
        required: true
      responses:
        "200":
          description: Successfully updated Action
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/chaosfaulttemplate.ActionTemplate"
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: action
    delete:
      summary: Deletes action template
      operationId: deleteActionTemplate
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: reference of the hub i.e. hub ID
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: identity
        in: path
        description: name of the fault
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: revision
        in: query
        description: revision of the action template to be deleted
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/templates/actions/{identity}/compare:
    get:
      summary: Get the difference between 2 revisions of action template
      description: Get the difference between 2 revisions of action template in a
        hub
      operationId: getActionTemplateRevisionDifference
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: reference of the hub i.e. hub ID
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: identity
        in: path
        description: name of the fault
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: revision
        in: query
        description: revision of the 1st fault template
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: revisionToCompare
        in: query
        description: revision to compare
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaosfaulttemplate.ListActionTemplateResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/templates/actions/{identity}/revisions:
    get:
      summary: Lists all the revision of a fault template in a hub
      description: Lists all the revision of a fault template in a hub
      operationId: listActionTemplateRevisions
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: chaos hub identity
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: identity
        in: path
        description: name of the fault
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 15
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaosfaulttemplate.ListActionTemplateResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/templates/actions/{identity}/variables:
    get:
      summary: Get the list of variables in a fault template
      description: Get the list of variables in a fault template based on revision
      operationId: listVariablesInActionTemplate
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: reference of the hub i.e. hub ID
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: identity
        in: path
        description: name of the fault
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: revision
        in: query
        description: revision of the 1st fault template
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaosfaulttemplate.ActionTemplateVariables"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/templates/faults:
    get:
      summary: Lists all the fault templates in a hub based on tag
      description: Lists all the fault templates in a hub based on tag
      operationId: listFaultTemplate
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: chaos hub identity
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 15
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaosfaulttemplate.ListFaultTemplateResponse"
        "400":
          description: Bad Request
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
    post:
      summary: Create fault templates in a hub based on tag
      description: Create fault templates in a hub based on tag
      operationId: createFaultTemplate
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: chaos hub identity
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: create fault request
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/chaosfaulttemplate.CreateFaultTemplateRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaosfaulttemplate.CreateFaultTemplateResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: createFaultRequest
  /rest/templates/faults/{faultName}:
    get:
      summary: Lists all the fault templates in a hub based on tag
      description: Lists all the fault templates in a hub based on tag
      operationId: getFaultTemplate
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: chaos hub identity
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: revision
        in: query
        description: revision of the 1st fault template
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: faultName
        in: path
        description: name of the fault
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaosfaulttemplate.GetFaultTemplateResponse"
        "400":
          description: Bad Request
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
    put:
      summary: Update the fault templates in a hub based on tag
      description: Update the fault templates in a hub based on tag
      operationId: updateFaultTemplate
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: chaos hub identity
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: faultName
        in: path
        description: name of the fault
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaosfaulttemplate.UpdateFaultTemplateResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    delete:
      summary: Delete the fault templates in a hub based on tag
      description: Delete the fault templates in a hub based on tag
      operationId: deleteFaultTemplate
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: chaos hub identity
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: faultName
        in: path
        description: name of the fault
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_api.Empty"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/templates/faults/{faultName}/compare:
    get:
      summary: Get the difference between 2 revisions of a fault template
      description: Get the difference between 2 revisions of a fault template in a
        hub
      operationId: getFaultTemplateRevisionDifference
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: reference of the hub i.e. hub ID
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: faultName
        in: path
        description: name of the fault
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: revision
        in: query
        description: revision of the 1st fault template
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: revisionToCompare
        in: query
        description: revision to compare
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaosfaulttemplate.ListFaultTemplateResponse"
        "400":
          description: Bad Request
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /rest/templates/faults/{faultName}/revisions:
    get:
      summary: Lists all the revision of a fault template in a hub
      description: Lists all the revision of a fault template in a hub
      operationId: listFaultTemplateRevisions
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: chaos hub identity
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: faultName
        in: path
        description: name of the fault
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 15
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaosfaulttemplate.ListFaultTemplateResponse"
        "400":
          description: Bad Request
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /rest/templates/faults/{faultName}/variables:
    get:
      summary: Get the list of variables in a fault template
      description: Get the list of variables in a fault template based on revision
      operationId: listVariablesInFaultTemplate
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: reference of the hub i.e. hub ID
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: faultName
        in: path
        description: name of the fault
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: revision
        in: query
        description: revision of the 1st fault template
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaosfaulttemplate.FaultTemplateVariables"
        "400":
          description: Bad Request
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /rest/templates/probes:
    get:
      summary: Lists all the probe templates in a hub based on tag
      description: Lists all the probe templates in a hub based on tag
      operationId: listProbeTemplate
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: chaos hub identity
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 15
      - name: search
        in: query
        description: name of the probe
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: infraType
        in: query
        description: infra type of the probe
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: entityType
        in: query
        description: filter based on probe
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: includeAllScope
        in: query
        description: include all scope
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaosprobetemplate.ListProbeTemplateResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    post:
      summary: Creates the probe templates in a hub based on tag
      description: Creates probe templates in a hub based on tag
      operationId: createProbeTemplate
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: probe template configuration
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/chaosprobetemplate.ProbeTemplate"
        required: true
      responses:
        "200":
          description: Successfully created Probe template
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/chaosprobetemplate.ProbeTemplate"
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: probe
  /rest/templates/probes/{identity}:
    get:
      summary: Get the probe template in a hub based on probe ref
      description: Get the probe template in a hub based on probe ref
      operationId: getProbeTemplate
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: chaos hub identity
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: revision
        in: query
        description: revision of the 1st fault template
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: identity
        in: path
        description: name of the fault
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaosprobetemplate.GetProbeTemplateResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    put:
      summary: Updates the probe templates in a hub
      description: Updates an existing probe template in a hub with new configuration
      operationId: updateProbeTemplate
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: isDefault
        in: query
        description: mark template as default
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: identity
        in: path
        description: identity of the probe to edit
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: probe configuration
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/chaosprobetemplate.ProbeTemplate"
        required: true
      responses:
        "200":
          description: Successfully updated probe
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/chaosprobetemplate.ProbeTemplate"
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: probe
    delete:
      summary: Deletes probe template
      operationId: deleteProbeTemplate
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: reference of the hub i.e. hub ID
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: identity
        in: path
        description: name of the fault
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: revision
        in: query
        description: revision of the probe template to be deleted
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/templates/probes/{identity}/variables:
    get:
      summary: Get the list of variables in a fault template
      description: Get the list of variables in a fault template based on revision
      operationId: listVariablesInProbeTemplate
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: hubIdentity
        in: query
        description: reference of the hub i.e. hub ID
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: identity
        in: path
        description: name of the fault
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: revision
        in: query
        description: revision of the 1st fault template
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaosprobetemplate.ProbeTemplateVariables"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/usage:
    get:
      summary: Get resource usage
      description: Get resource usage
      operationId: getResourceUsage
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/handlers.CHAOSLicenseUsageDTO"
        "400":
          description: Bad Request
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
  /rest/v2/applicationmaps:
    post:
      summary: List target network maps with chaos context
      description: List target network maps with chaos context
      operationId: listTargetNetworkMaps
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 10
      - name: search
        in: query
        description: search based on name
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: list Target Network Maps request
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/networkmap.ListTargetNetworkMapRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/networkmap.ListTargetNetworkMapResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: request"
  /rest/v2/applicationmaps/{applicationmapid}:
    get:
      summary: Get target network map with chaos context
      description: Get target network map with chaos context
      operationId: getTargetNetworkMap
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: environmentIdentifier
        in: query
        description: environment id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: infraId
        in: query
        description: infra id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: applicationmapid
        in: path
        description: Application map ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/networkmap.GetTargetNetworkMapResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    delete:
      summary: Delete application network map with chaos context
      description: Delete application network map with chaos context
      operationId: deleteTargetNetworkMap
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: environmentIdentifier
        in: query
        description: environment id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: infraId
        in: query
        description: infra id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: applicationmapid
        in: path
        description: Application map ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/applicationmaps/{applicationmapid}/canretry:
    get:
      summary: can retry or not chaos experiment creation for the given target network
        map
      description: can retry or not chaos experiment creation for the given target
        network map
      operationId: canRetryExperimentCreation
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: environmentIdentifier
        in: query
        description: environment id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: infraId
        in: query
        description: infra id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: applicationmapid
        in: path
        description: Application map ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/networkmap.CanRetryExperimentCreationResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/applicationmaps/{applicationmapid}/retry:
    post:
      summary: retry chaos experiment creation for the given target network map
      description: retry chaos experiment creation for the given target network map
      operationId: retryExperimentCreation
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: environmentIdentifier
        in: query
        description: environment id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: infraId
        in: query
        description: infra id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: applicationmapid
        in: path
        description: Application map ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Retry experiment creation request
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/networkmap.RetryExperimentCreationRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/networkmap.RetryExperimentCreationResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: request"
  /rest/v2/applicationmaps/{applicationmapid}/targetservices:
    get:
      summary: List target discovered service with chaos context
      description: Get target discovered service with chaos context
      operationId: listService
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: environmentIdentifier
        in: query
        description: environment id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: infraId
        in: query
        description: infra id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: applicationmapid
        in: path
        description: Application map ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 10
      - name: search
        in: query
        description: search based on name
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/networkmap.ListTargetServiceResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/applicationmaps/{applicationmapid}/targetservices/{targetserviceid}:
    get:
      summary: Get target discovered service with chaos context
      description: Get target discovered service with chaos context
      operationId: getServiceResponse
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: environmentIdentifier
        in: query
        description: environment id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: infraId
        in: query
        description: infra id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: applicationmapid
        in: path
        description: Application map ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: targetserviceid
        in: path
        description: Target discovered service ID Identity
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/networkmap.GetTargetServiceResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/bulkaction/bulkexperimentdelete:
    post:
      summary: Deletes given experiments
      description: Deletes given experiments
      operationId: bulkExperimentDelete
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Retry experiment creation request
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/bulkaction.BulkDeleteExperimetsInput"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bulkaction.BulkDeleteExperimetsResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: experiments"
  /rest/v2/bulkaction/bulkexperimenttagsadd:
    post:
      summary: Adds tags in given experiments
      description: Adds tags in given experiments
      operationId: bulkExperimentTagAdd
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Retry experiment creation request
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/bulkaction.BulkAddTagsInExperimetsInput"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/bulkaction.BulkAddTagsInExperimetsResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: experiments"
  /rest/v2/chaos-pipeline/{experimentId}/{experimentRunId}:
    get:
      summary: Get a chaos pipeline execution
      description: Get a chaos pipeline execution
      operationId: getChaosPipelineExecution
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: experimentId to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: experimentRunId
        in: path
        description: experimentRunId to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaos_execution_nodes.ChaosExecutionResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/chaos-pipeline/step/{experimentId}/{experimentRunId}/{stepName}:
    get:
      summary: Get a chaos pipeline step execution
      description: Get a chaos pipeline step execution
      operationId: getChaosPipelineStepDetails
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: experimentId to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: experimentRunId
        in: path
        description: experimentRunId to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: stepName
        in: path
        description: stepName to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaosexperimentpipeline.GetChaosPipelineNodesResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/experiment:
    get:
      summary: Get list of Chaos V2 Experiments
      description: Get list of Chaos V2 Experiments
      operationId: listChaosV2Experiment
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 10
      - name: startDate
        in: query
        description: filter based on start time
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: endDate
        in: query
        description: filter based on end time
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: experimentName
        in: query
        description: search based on experiment name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: infraName
        in: query
        description: search based on infra name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: infraId
        in: query
        description: filter based on infraId
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: infraActive
        in: query
        description: filter based on infra state
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: tags
        in: query
        description: filter based on tags
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: experimentIds
        in: query
        description: filter based on experimentID
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: environmentIdentifier
        in: query
        description: filter based on environmentID
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: targetNetworkMapIds
        in: query
        description: filter experiments based on experiment ids
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status
        in: query
        description: filter based on status
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/types.ListExperimentV2Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    post:
      summary: Save a chaos v2 experiment
      description: Save a chaos v2 experiment
      operationId: saveChaosV2Experiment
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Save Experiment
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/types.ExperimentCreationRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/types.ExperimentCreationResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: experiment"
  /rest/v2/experiment/{experimentId}:
    delete:
      summary: Delete Chaos V2 experiment
      description: Delete Chaos V2 experiment
      operationId: deleteChaosV2Experiment
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: experiment id that will be used to delete the experiment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/types.DeleteChaosV2ExperimentResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/experiment/{experimentId}/stop:
    post:
      summary: Stop Chaos V2 experiment
      description: Stop Chaos V2 experiment
      operationId: stopChaosV2Experiment
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: experiment id that will be used to stop the experiment
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: experimentRunId
        in: query
        description: experiment run id that will be used to stop the experiment run
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: notifyId
        in: query
        description: notify id that will be used to stop the experiment run
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: force
        in: query
        description: force stop the experiment run
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/types.StopChaosV2ExperimentResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/experiment/bulk/run:
    post:
      summary: Create pipeline to run experiments in bulk
      description: Create pipeline to run experiments in bulk
      operationId: createChaosExperimentPipeline
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: object containing pipeline id along with metadata
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/pipelines.ChaosPipelineInput"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pipelines.BulkExperimentRunResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: experimentSpec
  /rest/v2/experiment/cron:
    post:
      summary: Update a chaos v2 cron experiment
      description: Update a chaos v2 cron experiment
      operationId: updateChaosV2CronExperiment
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Update Cron V2 Experiment
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/types.UpdateCronExperimentStateRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/types.UpdateCronExperimentStateResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: experiment"
  /rest/v2/experiments/{experimentId}:
    get:
      summary: Get a chaos v2 experiment
      description: Get a chaos v2 experiment
      operationId: getChaosV2Experiment
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: experimentId to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaos_experiment.ChaosExperimentRequest"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/experiments/{experimentId}/inputsets:
    get:
      summary: Get the list of input sets in an experiment
      description: Get the list of input sets in an experiment
      operationId: listInputSet
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: experimentId for whose input sets should be listed
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 15
      - name: isIdentity
        in: query
        description: is human-readable experiment identity passed
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inputsets.ListInputSetResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    post:
      summary: Create an input set
      description: Create an input set
      operationId: createInputSet
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: experimentId where input set should be created
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isIdentity
        in: query
        description: is human-readable experiment identity passed
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: create input set request
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/inputsets.CreateInputSetRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inputsets.CreateInputSetResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: '"createInputSetRequest"'
  /rest/v2/experiments/{experimentId}/inputsets/{inputsetId}:
    get:
      summary: Get the input set in an experiment
      description: Get the input set in an experiment
      operationId: getInputSet
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: experimentId whose input set should be retrieved
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: inputsetId
        in: path
        description: ID of the input set
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isIdentity
        in: query
        description: is human-readable experiment identity passed
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inputsets.GetInputSetResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    put:
      summary: Updates an input set
      description: Updates an input set
      operationId: updateInputSet
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: experimentId where input set should be created
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: inputsetId
        in: path
        description: ID of the input set
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isIdentity
        in: query
        description: is human-readable experiment identity passed
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: update input set request
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/inputsets.UpdateInputSetRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inputsets.UpdateInputSetResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: '"UpdateInputSetRequest"'
    delete:
      summary: Delete an input set
      description: Delete an input set
      operationId: deleteInputSet
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: experimentId where input set should be created
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: inputsetId
        in: path
        description: ID of the input set
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isIdentity
        in: query
        description: is human-readable experiment identity passed
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/inputsets.DeleteInputSetResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/experiments/{experimentId}/run:
    get:
      summary: Get a chaos v2 experiment run
      description: Get a chaos v2 experiment run
      operationId: getChaosV2ExperimentRun
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: experimentRunId
        in: query
        description: experimentRunId to be fetched
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: notifyId
        in: query
        description: notifyId to be fetched
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: experimentId to be executed
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaos_experiment_run.ChaosExperimentRun"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    post:
      summary: Run a chaos v2 experiment
      description: Run a chaos v2 experiment
      operationId: runChaosV2Experiment
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: experimentId to be executed
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isOnboardingRun
        in: query
        description: is it onboarding run
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      - name: isIdentity
        in: query
        description: is human-readable experiment identity passed
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      requestBody:
        description: Run Experiment
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/types.ExperimentRunRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model.ReRunChaosWorkflowResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: experiment"
  /rest/v2/experiments/{experimentId}/variables:
    get:
      summary: Get a chaos v2 experiment
      description: Get a chaos v2 experiment
      operationId: getChaosV2ExperimentVariables
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: experimentId to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: isIdentity
        in: query
        description: is human-readable experiment identity passed
        required: true
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/template.RunTimeVariables"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/experiments/timeline/run/{experimentId}:
    get:
      summary: Get a chaos v2 experiment timeline run
      description: Get a chaos v2 experiment timeline run
      operationId: getExperimentRunTimelineView
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: experimentRunId
        in: query
        description: experimentRunId to be fetched
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: notifyId
        in: query
        description: notifyId to be fetched
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: experimentId
        in: path
        description: experimentId to be executed
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/chaos_execution_nodes.ChaosExecutionResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/gameday:
    put:
      summary: Update a chaos v2 gameday
      description: Update a chaos v2 gameday
      operationId: updateGamedayV2
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Update Gameday
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/types.UpdateGamedayRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: '"updateGameday"'
    post:
      summary: Create a chaos v2 gameday
      description: Create a chaos v2 gameday
      operationId: createGamedayV2
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Create Gameday
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/types.CreateGamedayRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/types.CreateGamedayResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: '"createGameday"'
  /rest/v2/gameday/{gamedayId}:
    get:
      summary: Get a chaos v2 Gameday
      description: Get a chaos v2 Gameday
      operationId: GetGamedayV2
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gamedayId
        in: path
        description: gamedayId to be fetched
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/types.GetGamedayResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    delete:
      summary: Get a chaos v2 Gameday
      description: Get a chaos v2 Gameday
      operationId: deleteGamedayV2
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gamedayId
        in: path
        description: gamedayId of gameday to be deleted
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/gameday/{gamedayId}/run:
    post:
      summary: Create a chaos v2 gameday run
      description: Create a chaos v2 gameday run
      operationId: createGamedayRunV2
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gamedayId
        in: path
        description: gamedayId to be run
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/types.CreateGamedayRunResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/gameday/{gamedayId}/run/{gamedayRunId}:
    get:
      summary: Fetch a chaos v2 gameday run
      description: Fetch a chaos v2 gameday run
      operationId: getGamedayRunV2
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gamedayId
        in: path
        description: gamedayId of the run
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: gamedayRunId
        in: path
        description: gamedayRunId to be run
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/types.Run"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    put:
      summary: Update a chaos v2 gameday run
      description: Update a chaos v2 gameday run
      operationId: updateGamedayRunV2
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gamedayId
        in: path
        description: gamedayId of the run
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: gamedayRunId
        in: path
        description: gamedayRunId to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Update Gameday Run
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/types.UpdateGameDayRunRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: run"
  /rest/v2/gameday/{gamedayId}/run_approval/{gamedayRunId}:
    put:
      summary: Update a chaos v2 gameday run
      description: Update a chaos v2 gameday run
      operationId: updateGamedayRunStakeHolderActionsV2
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gamedayId
        in: path
        description: gamedayId of the run
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: gamedayRunId
        in: path
        description: gamedayRunId to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Update Gameday Run Stakeholder action
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/types.UpdateStakeHolderActionRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: action"
  /rest/v2/gameday/{gamedayId}/run_checklist/{gamedayRunId}:
    put:
      summary: Update a chaos v2 gameday run
      description: Update a chaos v2 gameday run
      operationId: updateGamedayRunPrerequisitesV2
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gamedayId
        in: path
        description: gamedayId of the run
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: gamedayRunId
        in: path
        description: gamedayRunId to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Update Gameday Run Prerequisite
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/types.UpdatePrerequisiteRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: prerequisites"
  /rest/v2/gameday/{gamedayId}/runs:
    get:
      summary: Fetch chaos v2 gameday runs
      description: Fetch chaos v2 gameday runs
      operationId: listGamedayRunV2
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gamedayId
        in: path
        description: gamedayId of the run
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/types.ListGamedayRunV2Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/gamedays:
    get:
      summary: Get list of Chaos V2 Gamedays
      description: Get list of Chaos V2 Gamedays
      operationId: listGamedayV2
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 10
      - name: gamedayName
        in: query
        description: search based on gameday name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: sortAscending
        in: query
        description: sort the response in ascending order
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          default: false
      - name: sortField
        in: query
        description: "sort the response w.r.t field: CREATED_AT/UPDATED_AT/NAME"
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: UPDATED_AT
          enum:
          - NAME
          - CREATED_AT
          - UPDATED_AT
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/types.ListGamedayV2Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/harness-infrastructures:
    get:
      summary: List harness infras
      description: List harness infras
      operationId: listHarnessInfra
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: environmentIdentifier
        in: query
        description: environment id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 10
      - name: search
        in: query
        description: search based on name
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.ListHarnessInfrastructureResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/infrastructure:
    put:
      tags:
      - chaos-sdk
      summary: Update a new v2 infra
      description: Update a new v2 infra
      operationId: updateInfraV2
      parameters:
      - name: correlationID
        in: query
        description: correlation id is used to debug micro svc communication
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: update Infra V2
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/infra_v2.UpdateKubernetesInfrastructureV2Request"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/infra_v2.UpdateKubernetesInfrastructureV2Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request"
    post:
      tags:
      - chaos-sdk
      summary: Register a new v2 infra
      description: Register a new v2 infra
      operationId: registerInfraV2
      parameters:
      - name: correlationID
        in: query
        description: correlation id is used to debug micro svc communication
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Register Infra V2
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/infra_v2.RegisterInfrastructureV2Request"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/infra_v2.RegisterInfrastructureV2Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request"
  /rest/v2/infrastructure/{environmentIdentifier}/{identity}:
    delete:
      tags:
      - chaos-sdk
      summary: Delete a v2 infra
      description: Delete a new v2 infra
      operationId: deleteInfraV2
      parameters:
      - name: identity
        in: path
        description: Chaos V2 Infra Identity
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: environmentIdentifier
        in: path
        description: Chaos V2 Environment Identity
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/infra_v2.DeleteKubernetesInfraV2Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      security:
      - ApiKeyAuth: []
  /rest/v2/infrastructure/{identity}:
    get:
      tags:
      - chaos-sdk
      summary: Get a new v2 infra
      description: Get a new v2 infra
      operationId: getInfraV2
      parameters:
      - name: identity
        in: path
        description: Chaos V2 Infra Identity
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: environmentIdentifier
        in: query
        description: environment identifier to filter resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/infra_v2.KubernetesInfrastructureV2Details"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      security:
      - ApiKeyAuth: []
  /rest/v2/infrastructure/{identity}/connector:
    get:
      summary: Get Connector For Infra
      description: Get Connector For Infra
      operationId: getConnectorForInfra
      parameters:
      - name: identity
        in: path
        description: Chaos V2 Infra Identity
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: environmentIdentifier
        in: query
        description: environment id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.GetHarnessInfrastructureResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/infrastructure/yaml:
    post:
      summary: Preview v2 infra Yaml
      description: Preview v2 infra Yaml
      operationId: getV2InfrastructureYaml
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: preview Infra V2 yaml
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/infra_v2.GetKubernetesInfrastructureV2YamlRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/infra_v2.GetKubernetesInfrastructureV2YamlResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: request"
  /rest/v2/infrastructures:
    post:
      tags:
      - chaos-sdk
      summary: List a new v2 infra
      description: List a new v2 infra
      operationId: listInfraV2
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: includeLegacyInfra
        in: query
        description: include legacy infra details
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: environmentIdentifier
        in: query
        description: filter infra
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 10
      - name: search
        in: query
        description: search based on name
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: list Infra V2
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/infra_v2.ListKubernetesInfraV2Request"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/infra_v2.ListKubernetesInfraV2Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: request"
  /rest/v2/infrastructures/{infrastructureIdentity}/applications:
    get:
      summary: List all applications for a given infra
      description: List all applications for a given infra
      operationId: listApplication
      parameters:
      - name: infrastructureIdentity
        in: path
        description: Chaos V2 Infrastructure identity
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: environmentIdentifier
        in: query
        description: environment identifier to filter resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/applicationchaostarget.ListApplicationResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      security:
      - ApiKeyAuth: []
  /rest/v2/infrastructures/{infrastructureIdentity}/applications/{applicationIdentity}/functions:
    get:
      summary: List instrumented functions for given application
      description: List instrumented functions for given application
      operationId: listFunction
      parameters:
      - name: infrastructureIdentity
        in: path
        description: Chaos V2 Infrastructure identity
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: applicationIdentity
        in: path
        description: application identity
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: environmentIdentifier
        in: query
        description: environment identifier to filter resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/applicationchaostarget.ListFunctionResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      security:
      - ApiKeyAuth: []
  /rest/v2/infrastructures/{infrastructureIdentity}/token:
    get:
      summary: Get a v2 infra token
      description: Get a v2 infra token
      operationId: getInfraToken
      parameters:
      - name: infrastructureIdentity
        in: path
        description: Chaos V2 Infra Identity
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: environmentIdentifier
        in: query
        description: environment identifier to filter resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/k8sinfra.GetInfraTokenResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      security:
      - ApiKeyAuth: []
  /rest/v2/infrastructures/{infrastructureIdentity}/updateemissary:
    post:
      summary: Update emissary endpoint
      description: Update emissary endpoint
      operationId: updateEmissary
      parameters:
      - name: infrastructureIdentity
        in: path
        description: Chaos V2 Infra Identity
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: environmentIdentifier
        in: query
        description: environment identifier to filter resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: update emissary request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/k8sinfra.UpdateEmissaryURLRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/k8sinfra.UpdateEmissaryURLResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      security:
      - ApiKeyAuth: []
      x-codegen-request-body-name: UpdateEmissaryRequest
  /rest/v2/infrastructures/chaos-enabled:
    post:
      summary: List a new v2 infra
      description: List a new v2 infra
      operationId: listChaosEnabledInfraV2
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: environmentIdentifier
        in: query
        description: filter infra
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 10
      - name: search
        in: query
        description: search based on name
        required: false
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: list Infra V2
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/infra_v2.ListKubernetesInfraV2Request"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/infra_v2.ListKubernetesInfraV2Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: request"
  /rest/v2/list-infras:
    post:
      summary: Get list of active unused connector
      description: Get list of active unused connector
      operationId: listK8sInfrasV2
      parameters:
      - name: correlationID
        in: query
        description: correlation id is used to debug micro svc communication
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: List Infra
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/model.ListInfraRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/model.ListInfraResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      deprecated: true
      x-codegen-request-body-name: request"
  /rest/v2/note:
    patch:
      summary: Update a resource note
      description: Update a resource note
      operationId: updateNote
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Update a note
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/types.UpdateNoteRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: '"updateNote"'
  /rest/v2/notes:
    get:
      summary: Get a chaos resource Note
      description: Get a chaos resource Note
      operationId: getNote
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: gamedayRunID
        in: query
        description: gamedayRunID as filter for summary notes
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: experimentRunId
        in: query
        description: experimentRunId as filter for experiment run notes
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: experimentId
        in: query
        description: experimentId as filter for gameday experiment notes
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: noteType
        in: query
        description: type of note
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - experiment-run
          - gameday-run-summary
          - gameday-run-experiment
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/types.Notes"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    post:
      summary: Add a resource note
      description: Add a resource note
      operationId: addNote
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Create Gameday
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/types.CreateNoteRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/types.CreateNoteResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: note"
  /rest/v2/onboarding:
    get:
      summary: Get V2 Onboarding
      description: Get V2 Onboarding
      operationId: listV2Onboarding
      parameters:
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 10
      - name: corelationID
        in: query
        description: corelation id is used to debug micro svc communication
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: search
        in: query
        description: search for the onboarding
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v2_onboarding.V2OnboardingList"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    post:
      summary: Create V2 Onboarding
      description: Create V2 Onboarding
      operationId: createV2Onboarding
      parameters:
      - name: corelationID
        in: query
        description: corelation id is used to debug micro svc communication
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Create Onboarding
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/v2_onboarding.V2OnboardingRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v2_onboarding.V2Onboarding"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: onboarding"
  /rest/v2/onboarding-confirm-discovery/{onboardingid}:
    post:
      summary: confirm discovery step in manual onboarding
      description: confirm discovery step in manual onboarding
      operationId: onboardingConfirmDiscovery
      parameters:
      - name: onboardingid
        in: path
        description: onboarding id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: corelationID
        in: query
        description: corelation id is used to debug micro svc communication
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v2_onboarding.ConfirmDiscoveryResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/onboarding-confirm-experiment-creation/{onboardingid}:
    post:
      summary: confirm experiment creation step in manual onboarding
      description: confirm experiment creation step in manual onboarding
      operationId: onboardingConfirmExperimentCreation
      parameters:
      - name: onboardingid
        in: path
        description: onboarding id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: corelationID
        in: query
        description: corelation id is used to debug micro svc communication
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Onboarding Confirm ExperimentCreation
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/v2_onboarding.ConfirmExperimentCreationRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v2_onboarding.ConfirmExperimentCreationResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: ExperimentCreation"
  /rest/v2/onboarding-confirm-experiment-run/{onboardingid}:
    post:
      summary: confirm experiment run step in manual onboarding
      description: confirm experiment run step in manual onboarding
      operationId: onboardingConfirmExperimentRun
      parameters:
      - name: onboardingid
        in: path
        description: onboarding id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: corelationID
        in: query
        description: corelation id is used to debug micro svc communication
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v2_onboarding.ConfirmExperimentRunResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/onboarding-confirm-networkmap/{onboardingid}:
    post:
      summary: confirm network map creation step in manual onboarding
      description: confirm network map creation step in manual onboarding
      operationId: onboardingConfirmNetworkMap
      parameters:
      - name: onboardingid
        in: path
        description: onboarding id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: corelationID
        in: query
        description: corelation id is used to debug micro svc communication
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Onboarding Confirm NetworkMap
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/v2_onboarding.ConfirmNetworkMapRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v2_onboarding.ConfirmNetworkMapResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: NetworkMap"
  /rest/v2/onboarding/{onboardingid}:
    get:
      summary: Get V2 Onboarding
      description: Get V2 Onboarding
      operationId: getV2Onboarding
      parameters:
      - name: onboardingid
        in: path
        description: onboarding id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: corelationID
        in: query
        description: corelation id is used to debug micro svc communication
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v2_onboarding.V2Onboarding"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/onboarding/{onboardingid}/experiments:
    get:
      summary: Get V2 Onboarding experiments
      description: Get V2 Onboarding experiments
      operationId: getOnboardingExperiments
      parameters:
      - name: onboardingid
        in: path
        description: onboarding id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: corelationID
        in: query
        description: corelation id is used to debug micro svc communication
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: page number
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: true
        style: form
        explode: true
        schema:
          type: integer
          default: 5
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v2_onboarding.OnboardingExperimentResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/onboarding/{onboardingid}/stop:
    post:
      summary: Stop V2 Onboarding experiments
      description: Stop V2 Onboarding experiments
      operationId: stopOnboardingExperiments
      parameters:
      - name: onboardingid
        in: path
        description: onboarding id
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: corelationID
        in: query
        description: corelation id is used to debug micro svc communication
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: boolean
                x-content-type: application/json
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/probes:
    get:
      summary: List probes with filtering options
      description: "Retrieve a list of probes based on various filters like name,\
        \ tags, date range, and infrastructure type, with pagination support."
      operationId: listProbes
      parameters:
      - name: accountIdentifier
        in: query
        description: Account ID for accessing the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: Organization ID for accessing the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: Project ID for accessing the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: name
        in: query
        description: Filter probes by name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: tags
        in: query
        description: Comma-separated list of tags to filter probes
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: startDate
        in: query
        description: Filter probes by start date (ISO 8601 format)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: endDate
        in: query
        description: Filter probes by end date (ISO 8601 format)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: probeIDs
        in: query
        description: Comma-separated list of probe IDs
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: infrastructureType
        in: query
        description: Filter probes by infrastructure type
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: Page index for pagination
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 1
      - name: limit
        in: query
        description: Number of items per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 50
      - name: sortField
        in: query
        description: Field to sort the probe list
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - NAME
          - TIME
          - ENABLED
      - name: sortAscending
        in: query
        description: Sort the field in ascending order
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: probeType
        in: query
        description: Filter based on probe
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the list of probes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/types.ListProbeResponse"
        "400":
          description: Bad request - Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "401":
          description: Unauthorized - Invalid credentials or insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    post:
      summary: Create a new probe
      description: Create a new probe
      operationId: createProbe
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: Probe configuration
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/types.ProbeRequest"
        required: true
      responses:
        "200":
          description: Successfully created probe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/types.CreateProbeResponse"
        "400":
          description: Bad request - Invalid input or validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "401":
          description: Unauthorized - Invalid credentials or insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: probe
  /rest/v2/probes/{probeId}:
    get:
      summary: Get a probe
      description: Retrieve details of a specific probe by its ID
      operationId: getProbe
      parameters:
      - name: accountIdentifier
        in: query
        description: Account ID for accessing the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: Organization ID for accessing the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: Project ID for accessing the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: probeId
        in: path
        description: ID of the probe to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved probe details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/types.GetProbeResponse"
        "400":
          description: Bad request - Missing or invalid probe ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "401":
          description: Unauthorized - Invalid credentials or insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "404":
          description: Not Found - Probe not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
    put:
      summary: Update a new probe
      description: Update a new probe with the specified configuration
      operationId: updateProbe
      parameters:
      - name: accountIdentifier
        in: query
        description: Account ID to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: Organization ID to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: Project ID to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: probeId
        in: path
        description: ID of the probe to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Probe configuration
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/types.ProbeRequest"
        required: true
      responses:
        "200":
          description: Successfully created probe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/types.CreateProbeResponse"
        "400":
          description: Bad request - Invalid input or validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "401":
          description: Unauthorized - Invalid credentials or insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: probe
    delete:
      summary: Delete a probe
      description: Delete a probe with a provided identifier
      operationId: deleteProbe
      parameters:
      - name: accountIdentifier
        in: query
        description: Account ID to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: Organization ID to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: Project ID to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: probeId
        in: path
        description: ID of the probe to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully delete probe
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "400":
          description: Bad request - Invalid input or validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "401":
          description: Unauthorized - Invalid credentials or insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /rest/v2/probes/{probeId}/enable:
    post:
      summary: Enable and disable probes across experiments
      description: Enable and disable probes across experiments
      operationId: enableProbe
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: probeId
        in: path
        description: ID of the probe to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Enable Probe configuration
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/types.ProbeBulkEnableRequest"
        required: true
      responses:
        "200":
          description: Successfully updated probe
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "400":
          description: Bad request - Invalid input or validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "401":
          description: Unauthorized - Invalid credentials or insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: probe
  /rest/v2/probes/import:
    post:
      summary: Import a new probe
      description: Import a new probe
      operationId: importProbe
      parameters:
      - name: accountIdentifier
        in: query
        description: account id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: organization id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id that want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        description: action configuration
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/types.ImportProbeTemplateRequest"
        required: true
      responses:
        "200":
          description: Successfully created Action
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/types.CreateProbeResponse"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
      x-codegen-request-body-name: action
  /rest/v2/probes/manifest/{probeId}:
    get:
      summary: Get a probe
      description: Retrieve probe manifest of a specific probe by its ID
      operationId: getProbeManifest
      parameters:
      - name: accountIdentifier
        in: query
        description: Account ID for accessing the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: organizationIdentifier
        in: query
        description: Organization ID for accessing the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: Project ID for accessing the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: probeId
        in: path
        description: ID of the probe to retrieve
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved probe manifest details
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "400":
          description: Bad request - Missing or invalid probe ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "401":
          description: Unauthorized - Invalid credentials or insufficient permissions
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "404":
          description: Not Found - Probe not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/api.RestError"
  /v1/notification-experiments:
    get:
      tags:
      - listExperimentsMinimalNotification
      summary: List chaos experiments with active infrastructures in minimal format
        for notification service
      description: List all experiments with active infrastructures in minimal format
        for notification service
      operationId: listExperimentsWithActiveInfrasMinimalNotification
      parameters:
      - name: accountIdentifier
        in: query
        description: account id is the account where you want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: orgIdentifier
        in: query
        description: organization id is the organization where you want to access
          the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: projectIdentifier
        in: query
        description: project id is the project where you want to access the resource
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: page
        in: query
        description: page number
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 0
      - name: limit
        in: query
        description: limit per page
        required: false
        style: form
        explode: true
        schema:
          type: integer
          default: 15
      - name: experimentName
        in: query
        description: search filter based on name
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/handlers.ListExperimentsWithActiveInfrasMinimalNotificationResponse"
        "400":
          description: Bad Request
          content: {}
        "404":
          description: Not Found
          content: {}
        "500":
          description: Internal Server Error
          content: {}
      security:
      - ApiKeyAuth: []
components:
  schemas:
    action.ActionTemplateProperties:
      type: object
      properties:
        customScriptAction:
          $ref: "#/components/schemas/action.CustomScriptActionTemplate"
        delayAction:
          $ref: "#/components/schemas/action.DelayActionTemplate"
        sourceAction:
          $ref: "#/components/schemas/action.SourceActionTemplate"
      example:
        customScriptAction:
          args:
          - args
          - args
          env: {}
          command: command
        sourceAction:
          image: image
          imagePullPolicy: imagePullPolicy
          volumeMount: {}
          serviceAccountName: serviceAccountName
          imagePullSecrets: {}
          volumes: {}
          resources: {}
          env: {}
          command: {}
          nodeSelector: {}
          args: {}
          privileged: true
          tolerations: {}
          inheritInputs: true
        delayAction:
          duration: duration
    action.ActionTemplateRunProperties:
      type: object
      properties:
        initialDelay:
          type: string
        interval:
          type: string
        maxRetries:
          type: object
        stopOnFailure:
          type: boolean
        timeout:
          type: string
        verbosity:
          type: string
      example:
        maxRetries: {}
        stopOnFailure: true
        interval: interval
        initialDelay: initialDelay
        timeout: timeout
        verbosity: verbosity
    action.CustomScriptActionTemplate:
      type: object
      properties:
        args:
          type: array
          items:
            type: string
        command:
          type: string
        env:
          type: object
      example:
        args:
        - args
        - args
        env: {}
        command: command
    action.DelayActionTemplate:
      type: object
      properties:
        duration:
          type: string
      example:
        duration: duration
    action.SourceActionTemplate:
      type: object
      properties:
        args:
          type: object
        command:
          type: object
        env:
          type: object
        image:
          type: string
        imagePullPolicy:
          type: string
        imagePullSecrets:
          type: object
        inheritInputs:
          type: boolean
        nodeSelector:
          type: object
        privileged:
          type: boolean
        resources:
          type: object
        serviceAccountName:
          type: string
        tolerations:
          type: object
        volumeMount:
          type: object
        volumes:
          type: object
      example:
        image: image
        imagePullPolicy: imagePullPolicy
        volumeMount: {}
        serviceAccountName: serviceAccountName
        imagePullSecrets: {}
        volumes: {}
        resources: {}
        env: {}
        command: {}
        nodeSelector: {}
        args: {}
        privileged: true
        tolerations: {}
        inheritInputs: true
    actions.ActionResponse:
      required:
      - accountID
      - name
      type: object
      properties:
        accountID:
          type: string
        actionProperties:
          $ref: "#/components/schemas/action.ActionTemplateProperties"
        actionTemplate:
          type: string
        actionsRef:
          type: string
        createdAt:
          type: integer
        createdBy:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
        description:
          type: string
        hubRef:
          type: string
        identity:
          type: string
        infrastructureType:
          $ref: "#/components/schemas/actions.InfrastructureType"
        isRemoved:
          type: boolean
        name:
          type: string
        orgID:
          type: string
        projectID:
          type: string
        recentExecutions:
          type: array
          items:
            $ref: "#/components/schemas/actions.RecentExecutions"
        runProperties:
          $ref: "#/components/schemas/action.ActionTemplateRunProperties"
        tags:
          type: array
          items:
            type: string
        type:
          $ref: "#/components/schemas/actions.ActionType"
        updatedAt:
          type: integer
        updatedBy:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
        variables:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
      example:
        variables:
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        updatedBy: null
        actionTemplate: actionTemplate
        hubRef: hubRef
        description: description
        type: delay
        actionProperties:
          customScriptAction:
            args:
            - args
            - args
            env: {}
            command: command
          sourceAction:
            image: image
            imagePullPolicy: imagePullPolicy
            volumeMount: {}
            serviceAccountName: serviceAccountName
            imagePullSecrets: {}
            volumes: {}
            resources: {}
            env: {}
            command: {}
            nodeSelector: {}
            args: {}
            privileged: true
            tolerations: {}
            inheritInputs: true
          delayAction:
            duration: duration
        orgID: orgID
        tags:
        - tags
        - tags
        accountID: accountID
        createdAt: 0
        isRemoved: true
        runProperties:
          maxRetries: {}
          stopOnFailure: true
          interval: interval
          initialDelay: initialDelay
          timeout: timeout
          verbosity: verbosity
        createdBy:
          userID: userID
          email: email
          username: username
        identity: identity
        infrastructureType: Kubernetes
        actionsRef: actionsRef
        name: name
        recentExecutions:
        - stepName: stepName
          executedByExperiment:
            experimentRunID: experimentRunID
            updatedBy: null
            experimentID: experimentID
            notifyID: notifyID
            experimentName: experimentName
            updatedAt: 6
          status: status
        - stepName: stepName
          executedByExperiment:
            experimentRunID: experimentRunID
            updatedBy: null
            experimentID: experimentID
            notifyID: notifyID
            experimentName: experimentName
            updatedAt: 6
          status: status
        projectID: projectID
        updatedAt: 1
    actions.ActionType:
      type: string
      enum:
      - delay
      - customScript
      x-enum-varnames:
      - DelayActionType
      - CustomScriptActionType
    actions.ExecutedByExperiment:
      type: object
      properties:
        experimentID:
          type: string
        experimentName:
          type: string
        experimentRunID:
          type: string
        notifyID:
          type: string
        updatedAt:
          type: integer
        updatedBy:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
      example:
        experimentRunID: experimentRunID
        updatedBy: null
        experimentID: experimentID
        notifyID: notifyID
        experimentName: experimentName
        updatedAt: 6
    actions.ImportActionTemplateRequest:
      required:
      - accountID
      - name
      type: object
      properties:
        accountID:
          type: string
        actionRef:
          type: string
        description:
          type: string
        hubRef:
          type: string
        identity:
          type: string
        name:
          type: string
        orgID:
          type: string
        projectID:
          type: string
        tags:
          type: array
          items:
            type: string
    actions.InfrastructureType:
      type: string
      enum:
      - Kubernetes
      - Windows
      - Linux
      - CloudFoundry
      - Container
      x-enum-varnames:
      - InfrastructureTypeKubernetes
      - InfrastructureTypeWindows
      - InfrastructureTypeLinux
      - InfrastructureTypeCloudFoundry
      - InfrastructureTypeContainer
    actions.ListActionTemplateResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/actions.ActionResponse"
        pagination:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_api.Pagination"
      example:
        pagination:
          totalItems: 2
          limit: 5
          totalPages: 7
          index: 5
        data:
        - variables:
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          updatedBy: null
          actionTemplate: actionTemplate
          hubRef: hubRef
          description: description
          type: delay
          actionProperties:
            customScriptAction:
              args:
              - args
              - args
              env: {}
              command: command
            sourceAction:
              image: image
              imagePullPolicy: imagePullPolicy
              volumeMount: {}
              serviceAccountName: serviceAccountName
              imagePullSecrets: {}
              volumes: {}
              resources: {}
              env: {}
              command: {}
              nodeSelector: {}
              args: {}
              privileged: true
              tolerations: {}
              inheritInputs: true
            delayAction:
              duration: duration
          orgID: orgID
          tags:
          - tags
          - tags
          accountID: accountID
          createdAt: 0
          isRemoved: true
          runProperties:
            maxRetries: {}
            stopOnFailure: true
            interval: interval
            initialDelay: initialDelay
            timeout: timeout
            verbosity: verbosity
          createdBy:
            userID: userID
            email: email
            username: username
          identity: identity
          infrastructureType: Kubernetes
          actionsRef: actionsRef
          name: name
          recentExecutions:
          - stepName: stepName
            executedByExperiment:
              experimentRunID: experimentRunID
              updatedBy: null
              experimentID: experimentID
              notifyID: notifyID
              experimentName: experimentName
              updatedAt: 6
            status: status
          - stepName: stepName
            executedByExperiment:
              experimentRunID: experimentRunID
              updatedBy: null
              experimentID: experimentID
              notifyID: notifyID
              experimentName: experimentName
              updatedAt: 6
            status: status
          projectID: projectID
          updatedAt: 1
        - variables:
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          updatedBy: null
          actionTemplate: actionTemplate
          hubRef: hubRef
          description: description
          type: delay
          actionProperties:
            customScriptAction:
              args:
              - args
              - args
              env: {}
              command: command
            sourceAction:
              image: image
              imagePullPolicy: imagePullPolicy
              volumeMount: {}
              serviceAccountName: serviceAccountName
              imagePullSecrets: {}
              volumes: {}
              resources: {}
              env: {}
              command: {}
              nodeSelector: {}
              args: {}
              privileged: true
              tolerations: {}
              inheritInputs: true
            delayAction:
              duration: duration
          orgID: orgID
          tags:
          - tags
          - tags
          accountID: accountID
          createdAt: 0
          isRemoved: true
          runProperties:
            maxRetries: {}
            stopOnFailure: true
            interval: interval
            initialDelay: initialDelay
            timeout: timeout
            verbosity: verbosity
          createdBy:
            userID: userID
            email: email
            username: username
          identity: identity
          infrastructureType: Kubernetes
          actionsRef: actionsRef
          name: name
          recentExecutions:
          - stepName: stepName
            executedByExperiment:
              experimentRunID: experimentRunID
              updatedBy: null
              experimentID: experimentID
              notifyID: notifyID
              experimentName: experimentName
              updatedAt: 6
            status: status
          - stepName: stepName
            executedByExperiment:
              experimentRunID: experimentRunID
              updatedBy: null
              experimentID: experimentID
              notifyID: notifyID
              experimentName: experimentName
              updatedAt: 6
            status: status
          projectID: projectID
          updatedAt: 1
    actions.RecentExecutions:
      type: object
      properties:
        executedByExperiment:
          $ref: "#/components/schemas/actions.ExecutedByExperiment"
        status:
          type: string
        stepName:
          type: string
      example:
        stepName: stepName
        executedByExperiment:
          experimentRunID: experimentRunID
          updatedBy: null
          experimentID: experimentID
          notifyID: notifyID
          experimentName: experimentName
          updatedAt: 6
        status: status
    api.GetHarnessInfrastructureResponse:
      type: object
      properties:
        connectorRef:
          type: string
        correlationID:
          type: string
        environmentRef:
          type: string
        identifier:
          type: string
        isCompatible:
          type: boolean
        isUsed:
          type: boolean
        name:
          type: string
        namespace:
          type: string
        orgIdentifier:
          type: string
        projectIdentifier:
          type: string
        serviceAccount:
          type: string
        type:
          type: string
      example:
        identifier: identifier
        connectorRef: connectorRef
        environmentRef: environmentRef
        orgIdentifier: orgIdentifier
        name: name
        namespace: namespace
        correlationID: correlationID
        serviceAccount: serviceAccount
        projectIdentifier: projectIdentifier
        type: type
        isUsed: true
        isCompatible: true
    api.HarnessInfrastructure:
      type: object
      properties:
        connectorRef:
          type: string
        environmentRef:
          type: string
        identifier:
          type: string
        isCompatible:
          type: boolean
        isUsed:
          type: boolean
        name:
          type: string
        namespace:
          type: string
        orgIdentifier:
          type: string
        projectIdentifier:
          type: string
        serviceAccount:
          type: string
        type:
          type: string
      example:
        identifier: identifier
        connectorRef: connectorRef
        environmentRef: environmentRef
        orgIdentifier: orgIdentifier
        name: name
        namespace: namespace
        serviceAccount: serviceAccount
        projectIdentifier: projectIdentifier
        type: type
        isUsed: true
        isCompatible: true
    api.ListHarnessInfrastructureResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/api.HarnessInfrastructure"
        page:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_api.Pagination"
      example:
        page:
          totalItems: 2
          limit: 5
          totalPages: 7
          index: 5
        items:
        - identifier: identifier
          connectorRef: connectorRef
          environmentRef: environmentRef
          orgIdentifier: orgIdentifier
          name: name
          namespace: namespace
          serviceAccount: serviceAccount
          projectIdentifier: projectIdentifier
          type: type
          isUsed: true
          isCompatible: true
        - identifier: identifier
          connectorRef: connectorRef
          environmentRef: environmentRef
          orgIdentifier: orgIdentifier
          name: name
          namespace: namespace
          serviceAccount: serviceAccount
          projectIdentifier: projectIdentifier
          type: type
          isUsed: true
          isCompatible: true
    api.RestError:
      type: object
      properties:
        description:
          type: string
        message:
          type: string
    applicationchaostarget.ListApplicationResponse:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
      example:
        items:
        - items
        - items
    applicationchaostarget.ListFunctionResponse:
      type: object
      properties:
        items:
          type: array
          items:
            type: string
      example:
        items:
        - items
        - items
    bulkaction.BulkAddTagsInExperimetsInput:
      type: object
      properties:
        experimentIDs:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
    bulkaction.BulkAddTagsInExperimetsResponse:
      type: object
    bulkaction.BulkDeleteExperimetsInput:
      type: object
      properties:
        experimentIDs:
          type: array
          items:
            type: string
    bulkaction.BulkDeleteExperimetsResponse:
      type: object
    chaos_execution_nodes.ActionData:
      type: object
      properties:
        name:
          type: string
      example:
        name: name
    chaos_execution_nodes.ChaosData:
      type: object
      properties:
        actionData:
          $ref: "#/components/schemas/chaos_execution_nodes.ActionData"
        faultData:
          $ref: "#/components/schemas/chaos_execution_nodes.FaultData"
        probeData:
          $ref: "#/components/schemas/chaos_execution_nodes.ProbeData"
      example:
        faultData:
          helperPodDetails:
          - name: name
            logStreamID: logStreamID
          - name: name
            logStreamID: logStreamID
          name: name
          namespace: namespace
          faultDetails:
            name: name
            definition:
              chaos: ""
              targets: ""
        actionData:
          name: name
        probeData:
          probeDetails:
            apmProbe/inputs: ""
            datadogProbe/inputs: ""
            httpProbe/inputs: ""
            promProbe/inputs: ""
            data: data
            k8sProbe/inputs: ""
            cmdProbe/inputs: ""
            type: type
            mode: mode
            newrelicProbe/inputs: ""
            runProperties: ""
            dynatraceProbe/inputs: ""
            name: name
            id: id
            sloProbe/inputs: ""
          weightage: 7
          resiliencyScore: 4
          probeType: probeType
          name: name
          description: description
          iterations:
          - commandProbe:
              output:
              - 5
              - 5
            duration: 2
            phase: phase
            promProbe:
              metrics: metrics
            httpProbe:
              responseBody:
              - 7
              - 7
              responseTime: 9
              statusCode: 3
            timestamp: 2
          - commandProbe:
              output:
              - 5
              - 5
            duration: 2
            phase: phase
            promProbe:
              metrics: metrics
            httpProbe:
              responseBody:
              - 7
              - 7
              responseTime: 9
              statusCode: 3
            timestamp: 2
          faultName: faultName
    chaos_execution_nodes.ChaosExecutionNode:
      required:
      - accountID
      type: object
      properties:
        accountID:
          type: string
        chaosData:
          $ref: "#/components/schemas/chaos_execution_nodes.ChaosData"
        duration:
          type: integer
        errorData:
          $ref: "#/components/schemas/chaos_execution_nodes.ErrorData"
        estimatedTime:
          type: integer
        experimentID:
          type: string
        experimentRunID:
          type: string
        finishedAt:
          type: integer
        isRemoved:
          type: boolean
        lastUpdatedAt:
          type: integer
        orgID:
          type: string
        projectID:
          type: string
        spec:
          type: string
        startedAt:
          type: integer
        status:
          $ref: "#/components/schemas/chaos_execution_nodes.ChaosStepStatus"
        stepName:
          type: string
        stepType:
          $ref: "#/components/schemas/chaos_execution_nodes.ChaosStepType"
        streamID:
          type: string
      example:
        estimatedTime: 1
        stepType: FAULT
        streamID: streamID
        lastUpdatedAt: 6
        chaosData:
          faultData:
            helperPodDetails:
            - name: name
              logStreamID: logStreamID
            - name: name
              logStreamID: logStreamID
            name: name
            namespace: namespace
            faultDetails:
              name: name
              definition:
                chaos: ""
                targets: ""
          actionData:
            name: name
          probeData:
            probeDetails:
              apmProbe/inputs: ""
              datadogProbe/inputs: ""
              httpProbe/inputs: ""
              promProbe/inputs: ""
              data: data
              k8sProbe/inputs: ""
              cmdProbe/inputs: ""
              type: type
              mode: mode
              newrelicProbe/inputs: ""
              runProperties: ""
              dynatraceProbe/inputs: ""
              name: name
              id: id
              sloProbe/inputs: ""
            weightage: 7
            resiliencyScore: 4
            probeType: probeType
            name: name
            description: description
            iterations:
            - commandProbe:
                output:
                - 5
                - 5
              duration: 2
              phase: phase
              promProbe:
                metrics: metrics
              httpProbe:
                responseBody:
                - 7
                - 7
                responseTime: 9
                statusCode: 3
              timestamp: 2
            - commandProbe:
                output:
                - 5
                - 5
              duration: 2
              phase: phase
              promProbe:
                metrics: metrics
              httpProbe:
                responseBody:
                - 7
                - 7
                responseTime: 9
                statusCode: 3
              timestamp: 2
            faultName: faultName
        startedAt: 7
        errorData:
          code: code
          message: message
        orgID: orgID
        spec: spec
        finishedAt: 1
        duration: 1
        accountID: accountID
        experimentRunID: experimentRunID
        isRemoved: true
        stepName: stepName
        experimentID: experimentID
        projectID: projectID
        status: PENDING
    chaos_execution_nodes.ChaosExecutionResponse:
      required:
      - accountID
      type: object
      properties:
        accountID:
          type: string
        duration:
          type: integer
        estimatedTime:
          type: integer
        experimentID:
          type: string
        experimentRunID:
          type: string
        finishedAt:
          type: integer
        infraID:
          type: string
        isRemoved:
          type: boolean
        lastUpdatedAt:
          type: integer
        nodes:
          type: array
          items:
            $ref: "#/components/schemas/chaos_execution_nodes.ChaosExecutionNode"
        orgID:
          type: string
        projectID:
          type: string
        resiliencyScore:
          type: number
        runSequence:
          type: integer
        startedAt:
          type: integer
        status:
          $ref: "#/components/schemas/chaos_execution_nodes.ChaosStepStatus"
        stepName:
          type: string
        stepType:
          $ref: "#/components/schemas/chaos_execution_nodes.ChaosStepType"
      example:
        estimatedTime: 6
        resiliencyScore: 1.1730742509559433
        stepType: null
        lastUpdatedAt: 5
        startedAt: 5
        orgID: orgID
        finishedAt: 1
        duration: 0
        accountID: accountID
        experimentRunID: experimentRunID
        isRemoved: true
        nodes:
        - estimatedTime: 1
          stepType: FAULT
          streamID: streamID
          lastUpdatedAt: 6
          chaosData:
            faultData:
              helperPodDetails:
              - name: name
                logStreamID: logStreamID
              - name: name
                logStreamID: logStreamID
              name: name
              namespace: namespace
              faultDetails:
                name: name
                definition:
                  chaos: ""
                  targets: ""
            actionData:
              name: name
            probeData:
              probeDetails:
                apmProbe/inputs: ""
                datadogProbe/inputs: ""
                httpProbe/inputs: ""
                promProbe/inputs: ""
                data: data
                k8sProbe/inputs: ""
                cmdProbe/inputs: ""
                type: type
                mode: mode
                newrelicProbe/inputs: ""
                runProperties: ""
                dynatraceProbe/inputs: ""
                name: name
                id: id
                sloProbe/inputs: ""
              weightage: 7
              resiliencyScore: 4
              probeType: probeType
              name: name
              description: description
              iterations:
              - commandProbe:
                  output:
                  - 5
                  - 5
                duration: 2
                phase: phase
                promProbe:
                  metrics: metrics
                httpProbe:
                  responseBody:
                  - 7
                  - 7
                  responseTime: 9
                  statusCode: 3
                timestamp: 2
              - commandProbe:
                  output:
                  - 5
                  - 5
                duration: 2
                phase: phase
                promProbe:
                  metrics: metrics
                httpProbe:
                  responseBody:
                  - 7
                  - 7
                  responseTime: 9
                  statusCode: 3
                timestamp: 2
              faultName: faultName
          startedAt: 7
          errorData:
            code: code
            message: message
          orgID: orgID
          spec: spec
          finishedAt: 1
          duration: 1
          accountID: accountID
          experimentRunID: experimentRunID
          isRemoved: true
          stepName: stepName
          experimentID: experimentID
          projectID: projectID
          status: PENDING
        - estimatedTime: 1
          stepType: FAULT
          streamID: streamID
          lastUpdatedAt: 6
          chaosData:
            faultData:
              helperPodDetails:
              - name: name
                logStreamID: logStreamID
              - name: name
                logStreamID: logStreamID
              name: name
              namespace: namespace
              faultDetails:
                name: name
                definition:
                  chaos: ""
                  targets: ""
            actionData:
              name: name
            probeData:
              probeDetails:
                apmProbe/inputs: ""
                datadogProbe/inputs: ""
                httpProbe/inputs: ""
                promProbe/inputs: ""
                data: data
                k8sProbe/inputs: ""
                cmdProbe/inputs: ""
                type: type
                mode: mode
                newrelicProbe/inputs: ""
                runProperties: ""
                dynatraceProbe/inputs: ""
                name: name
                id: id
                sloProbe/inputs: ""
              weightage: 7
              resiliencyScore: 4
              probeType: probeType
              name: name
              description: description
              iterations:
              - commandProbe:
                  output:
                  - 5
                  - 5
                duration: 2
                phase: phase
                promProbe:
                  metrics: metrics
                httpProbe:
                  responseBody:
                  - 7
                  - 7
                  responseTime: 9
                  statusCode: 3
                timestamp: 2
              - commandProbe:
                  output:
                  - 5
                  - 5
                duration: 2
                phase: phase
                promProbe:
                  metrics: metrics
                httpProbe:
                  responseBody:
                  - 7
                  - 7
                  responseTime: 9
                  statusCode: 3
                timestamp: 2
              faultName: faultName
          startedAt: 7
          errorData:
            code: code
            message: message
          orgID: orgID
          spec: spec
          finishedAt: 1
          duration: 1
          accountID: accountID
          experimentRunID: experimentRunID
          isRemoved: true
          stepName: stepName
          experimentID: experimentID
          projectID: projectID
          status: PENDING
        stepName: stepName
        runSequence: 4
        experimentID: experimentID
        infraID: infraID
        projectID: projectID
        status: null
    chaos_execution_nodes.ChaosStepStatus:
      type: string
      enum:
      - PENDING
      - RUNNING
      - STOPPED
      - COMPLETED
      - FAILED
      - SKIPPED
      x-enum-varnames:
      - Pending
      - Running
      - Stopped
      - Completed
      - Failed
      - Skipped
    chaos_execution_nodes.ChaosStepType:
      type: string
      enum:
      - FAULT
      - PROBE
      - ACTION
      - EXPERIMENT
      x-enum-varnames:
      - Fault
      - Probe
      - Action
      - Experiment
    chaos_execution_nodes.CommandProbe:
      type: object
      properties:
        output:
          type: array
          items:
            type: integer
      example:
        output:
        - 5
        - 5
    chaos_execution_nodes.ErrorData:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      example:
        code: code
        message: message
    chaos_execution_nodes.FaultData:
      type: object
      properties:
        faultDetails:
          $ref: "#/components/schemas/chaos_execution_nodes.FaultDetails"
        helperPodDetails:
          type: array
          items:
            $ref: "#/components/schemas/chaos_execution_nodes.HelperPodDetails"
        name:
          type: string
        namespace:
          type: string
      example:
        helperPodDetails:
        - name: name
          logStreamID: logStreamID
        - name: name
          logStreamID: logStreamID
        name: name
        namespace: namespace
        faultDetails:
          name: name
          definition:
            chaos: ""
            targets: ""
    chaos_execution_nodes.FaultDetails:
      type: object
      properties:
        definition:
          $ref: "#/components/schemas/experiment.Definition"
        name:
          type: string
      example:
        name: name
        definition:
          chaos: ""
          targets: ""
    chaos_execution_nodes.HTTPProbe:
      type: object
      properties:
        responseBody:
          type: array
          items:
            type: integer
        responseTime:
          type: integer
        statusCode:
          type: integer
      example:
        responseBody:
        - 7
        - 7
        responseTime: 9
        statusCode: 3
    chaos_execution_nodes.HelperPodDetails:
      type: object
      properties:
        logStreamID:
          type: string
        name:
          type: string
      example:
        name: name
        logStreamID: logStreamID
    chaos_execution_nodes.ProbeData:
      type: object
      properties:
        description:
          type: string
        faultName:
          type: string
        iterations:
          type: array
          items:
            $ref: "#/components/schemas/chaos_execution_nodes.ProbeIterations"
        name:
          type: string
        probeDetails:
          $ref: "#/components/schemas/github_com_harness_hce-saas_hce-sdk_common_probe_v1.Probe"
        probeType:
          type: string
        resiliencyScore:
          type: integer
        weightage:
          type: integer
      example:
        probeDetails:
          apmProbe/inputs: ""
          datadogProbe/inputs: ""
          httpProbe/inputs: ""
          promProbe/inputs: ""
          data: data
          k8sProbe/inputs: ""
          cmdProbe/inputs: ""
          type: type
          mode: mode
          newrelicProbe/inputs: ""
          runProperties: ""
          dynatraceProbe/inputs: ""
          name: name
          id: id
          sloProbe/inputs: ""
        weightage: 7
        resiliencyScore: 4
        probeType: probeType
        name: name
        description: description
        iterations:
        - commandProbe:
            output:
            - 5
            - 5
          duration: 2
          phase: phase
          promProbe:
            metrics: metrics
          httpProbe:
            responseBody:
            - 7
            - 7
            responseTime: 9
            statusCode: 3
          timestamp: 2
        - commandProbe:
            output:
            - 5
            - 5
          duration: 2
          phase: phase
          promProbe:
            metrics: metrics
          httpProbe:
            responseBody:
            - 7
            - 7
            responseTime: 9
            statusCode: 3
          timestamp: 2
        faultName: faultName
    chaos_execution_nodes.ProbeIterations:
      type: object
      properties:
        commandProbe:
          $ref: "#/components/schemas/chaos_execution_nodes.CommandProbe"
        duration:
          type: integer
        httpProbe:
          $ref: "#/components/schemas/chaos_execution_nodes.HTTPProbe"
        phase:
          type: string
        promProbe:
          $ref: "#/components/schemas/chaos_execution_nodes.PromProbe"
        timestamp:
          type: integer
      example:
        commandProbe:
          output:
          - 5
          - 5
        duration: 2
        phase: phase
        promProbe:
          metrics: metrics
        httpProbe:
          responseBody:
          - 7
          - 7
          responseTime: 9
          statusCode: 3
        timestamp: 2
    chaos_execution_nodes.PromProbe:
      type: object
      properties:
        metrics:
          type: string
      example:
        metrics: metrics
    chaos_experiment.ChaosExperimentRequest:
      required:
      - accountID
      - isRemoved
      - name
      type: object
      properties:
        accountID:
          type: string
        createdAt:
          type: integer
        createdBy:
          type: string
        cronSyntax:
          type: string
        description:
          type: string
        experimentID:
          type: string
        experimentType:
          $ref: "#/components/schemas/chaos_experiment.ChaosExperimentType"
        identity:
          type: string
          description: identity field is a human-readable ID
        infraID:
          type: string
        infraType:
          type: string
        isCronEnabled:
          type: boolean
        isCustomExperiment:
          type: boolean
        isRemoved:
          type: boolean
        isSingleRunCronEnabled:
          type: boolean
        lastExecutedAt:
          type: integer
        name:
          type: string
        orgID:
          type: string
        projectID:
          type: string
        recentExperimentRunDetails:
          type: array
          description: stores the details of last 10 experiment runs
          items:
            $ref: "#/components/schemas/chaos_experiment.ExperimentRunDetail"
        recommendation:
          $ref: "#/components/schemas/chaos_experiment.Recommendation"
        revision:
          type: array
          items:
            $ref: "#/components/schemas/chaos_experiment.WorkflowRevision"
        singleClickOnboardMetadata:
          $ref: "#/components/schemas/chaos_experiment.SingleClickOnboardMetadata"
        tags:
          type: array
          items:
            type: string
        targetNetworkMapID:
          type: string
        totalExperimentRuns:
          type: integer
        updatedAt:
          type: integer
        updatedBy:
          type: string
      example:
        lastExecutedAt: 6
        isCronEnabled: true
        description: description
        recommendation:
          bySystem: true
          weightage: 5
          reasons:
          - reasons
          - reasons
        recentExperimentRunDetails:
        - phase: phase
          createdAt: 1
          experimentRunID: experimentRunID
          isRemoved: true
          resiliencyScore: 5.962133916683182
          updatedBy: updatedBy
          createdBy: createdBy
          runSequence: 5
          notifyID: notifyID
          completed: true
          faultsWithProbes:
          - probes:
            - mode: mode
              revisionID: revisionID
              probeID: probeID
              name: name
            - mode: mode
              revisionID: revisionID
              probeID: probeID
              name: name
            faultName: faultName
          - probes:
            - mode: mode
              revisionID: revisionID
              probeID: probeID
              name: name
            - mode: mode
              revisionID: revisionID
              probeID: probeID
              name: name
            faultName: faultName
          updatedAt: 2
        - phase: phase
          createdAt: 1
          experimentRunID: experimentRunID
          isRemoved: true
          resiliencyScore: 5.962133916683182
          updatedBy: updatedBy
          createdBy: createdBy
          runSequence: 5
          notifyID: notifyID
          completed: true
          faultsWithProbes:
          - probes:
            - mode: mode
              revisionID: revisionID
              probeID: probeID
              name: name
            - mode: mode
              revisionID: revisionID
              probeID: probeID
              name: name
            faultName: faultName
          - probes:
            - mode: mode
              revisionID: revisionID
              probeID: probeID
              name: name
            - mode: mode
              revisionID: revisionID
              probeID: probeID
              name: name
            faultName: faultName
          updatedAt: 2
        experimentType: experiment_v2
        accountID: accountID
        createdAt: 0
        isRemoved: true
        identity: identity
        infraID: infraID
        projectID: projectID
        updatedAt: 2
        updatedBy: updatedBy
        isCustomExperiment: true
        isSingleRunCronEnabled: true
        singleClickOnboardMetadata:
          onboardingID: onboardingID
          faults:
          - faults
          - faults
        totalExperimentRuns: 3
        orgID: orgID
        revision:
        - revisionID: revisionID
          weightages:
          - weightage: 9
            faultName: faultName
          - weightage: 9
            faultName: faultName
          experimentManifest: experimentManifest
          faultsWithProbes:
          - null
          - null
          targetedServices:
          - uid: uid
            name: name
            namespace: namespace
            id: id
          - uid: uid
            name: name
            namespace: namespace
            id: id
          chaosFaultEvents:
          - environmentIdentifier:
            - environmentIdentifier
            - environmentIdentifier
            faultName: faultName
            serviceIdentifier:
            - serviceIdentifier
            - serviceIdentifier
          - environmentIdentifier:
            - environmentIdentifier
            - environmentIdentifier
            faultName: faultName
            serviceIdentifier:
            - serviceIdentifier
            - serviceIdentifier
          updatedAt: 7
        - revisionID: revisionID
          weightages:
          - weightage: 9
            faultName: faultName
          - weightage: 9
            faultName: faultName
          experimentManifest: experimentManifest
          faultsWithProbes:
          - null
          - null
          targetedServices:
          - uid: uid
            name: name
            namespace: namespace
            id: id
          - uid: uid
            name: name
            namespace: namespace
            id: id
          chaosFaultEvents:
          - environmentIdentifier:
            - environmentIdentifier
            - environmentIdentifier
            faultName: faultName
            serviceIdentifier:
            - serviceIdentifier
            - serviceIdentifier
          - environmentIdentifier:
            - environmentIdentifier
            - environmentIdentifier
            faultName: faultName
            serviceIdentifier:
            - serviceIdentifier
            - serviceIdentifier
          updatedAt: 7
        tags:
        - tags
        - tags
        createdBy: createdBy
        targetNetworkMapID: targetNetworkMapID
        name: name
        experimentID: experimentID
        cronSyntax: cronSyntax
        infraType: infraType
    chaos_experiment.ChaosExperimentType:
      type: string
      enum:
      - experiment_v2
      - experiment
      - cronexperiment_v2
      - cronexperiment
      - cronexperiment_linux
      - cronexperiment_windows
      - cronexperiment_cf
      - chaosengine
      - gameday
      x-enum-varnames:
      - NonCronExperimentV2
      - NonCronExperiment
      - CronExperimentV2
      - CronExperiment
      - CronExperimentLinux
      - CronExperimentWindows
      - CronExperimentCloudFoundry
      - ChaosEngine
      - Gameday
    chaos_experiment.ExperimentRunDetail:
      required:
      - isRemoved
      type: object
      properties:
        completed:
          type: boolean
        createdAt:
          type: integer
        createdBy:
          type: string
        experimentRunID:
          type: string
        faultsWithProbes:
          type: array
          items:
            $ref: "#/components/schemas/chaos_experiment_run.Faults"
        isRemoved:
          type: boolean
        notifyID:
          type: string
        phase:
          type: string
        resiliencyScore:
          type: number
        runSequence:
          type: integer
        updatedAt:
          type: integer
        updatedBy:
          type: string
      example:
        phase: phase
        createdAt: 1
        experimentRunID: experimentRunID
        isRemoved: true
        resiliencyScore: 5.962133916683182
        updatedBy: updatedBy
        createdBy: createdBy
        runSequence: 5
        notifyID: notifyID
        completed: true
        faultsWithProbes:
        - probes:
          - mode: mode
            revisionID: revisionID
            probeID: probeID
            name: name
          - mode: mode
            revisionID: revisionID
            probeID: probeID
            name: name
          faultName: faultName
        - probes:
          - mode: mode
            revisionID: revisionID
            probeID: probeID
            name: name
          - mode: mode
            revisionID: revisionID
            probeID: probeID
            name: name
          faultName: faultName
        updatedAt: 2
    chaos_experiment.FaultEventMetadata:
      type: object
      properties:
        environmentIdentifier:
          type: array
          items:
            type: string
        faultName:
          type: string
        serviceIdentifier:
          type: array
          items:
            type: string
      example:
        environmentIdentifier:
        - environmentIdentifier
        - environmentIdentifier
        faultName: faultName
        serviceIdentifier:
        - serviceIdentifier
        - serviceIdentifier
    chaos_experiment.Recommendation:
      type: object
      properties:
        bySystem:
          type: boolean
        reasons:
          type: array
          items:
            type: string
        weightage:
          type: integer
      example:
        bySystem: true
        weightage: 5
        reasons:
        - reasons
        - reasons
    chaos_experiment.SingleClickOnboardMetadata:
      type: object
      properties:
        faults:
          type: array
          items:
            type: string
        onboardingID:
          type: string
      example:
        onboardingID: onboardingID
        faults:
        - faults
        - faults
    chaos_experiment.WeightagesInput:
      type: object
      properties:
        faultName:
          type: string
        weightage:
          type: integer
      example:
        weightage: 9
        faultName: faultName
    chaos_experiment.WorkflowRevision:
      type: object
      properties:
        chaosFaultEvents:
          type: array
          items:
            $ref: "#/components/schemas/chaos_experiment.FaultEventMetadata"
        experimentManifest:
          type: string
        faultsWithProbes:
          type: array
          items:
            $ref: "#/components/schemas/chaos_experiment_run.Faults"
        revisionID:
          type: string
        targetedServices:
          type: array
          items:
            $ref: "#/components/schemas/targetservice.ServiceMetadata"
        updatedAt:
          type: integer
        weightages:
          type: array
          items:
            $ref: "#/components/schemas/chaos_experiment.WeightagesInput"
      example:
        revisionID: revisionID
        weightages:
        - weightage: 9
          faultName: faultName
        - weightage: 9
          faultName: faultName
        experimentManifest: experimentManifest
        faultsWithProbes:
        - null
        - null
        targetedServices:
        - uid: uid
          name: name
          namespace: namespace
          id: id
        - uid: uid
          name: name
          namespace: namespace
          id: id
        chaosFaultEvents:
        - environmentIdentifier:
          - environmentIdentifier
          - environmentIdentifier
          faultName: faultName
          serviceIdentifier:
          - serviceIdentifier
          - serviceIdentifier
        - environmentIdentifier:
          - environmentIdentifier
          - environmentIdentifier
          faultName: faultName
          serviceIdentifier:
          - serviceIdentifier
          - serviceIdentifier
        updatedAt: 7
    chaos_experiment_run.Annotation:
      type: object
      properties:
        mode:
          type: string
        name:
          type: string
        probeID:
          type: string
        revisionID:
          type: string
      example:
        mode: mode
        revisionID: revisionID
        probeID: probeID
        name: name
    chaos_experiment_run.ChaosExperimentRun:
      required:
      - accountID
      - isRemoved
      type: object
      properties:
        accountID:
          type: string
        completed:
          type: boolean
        createdAt:
          type: integer
        createdBy:
          type: string
        errorResponse:
          type: string
        executionData:
          type: string
        experimentID:
          type: string
        experimentName:
          type: string
        experimentRunID:
          type: string
        experimentType:
          $ref: "#/components/schemas/chaos_experiment_run.ExperimentType"
        experimentYaml:
          type: string
        faultsAwaited:
          type: integer
        faultsFailed:
          type: integer
        faultsNA:
          type: integer
        faultsPassed:
          type: integer
        faultsStopped:
          type: integer
        faultsWithProbes:
          type: array
          items:
            $ref: "#/components/schemas/chaos_experiment_run.Faults"
        infraID:
          type: string
        isRemoved:
          type: boolean
        networkMapID:
          type: string
        notifyID:
          type: string
        orgID:
          type: string
        phase:
          type: string
        projectID:
          type: string
        resiliencyScore:
          type: number
        revisionID:
          type: string
        runSequence:
          type: integer
        securityGovernance:
          $ref: "#/components/schemas/chaos_experiment_run.SecurityGovernanceNode"
        targetedServices:
          type: array
          items:
            $ref: "#/components/schemas/targetservice.ServiceMetadata"
        totalFaults:
          type: integer
        updatedAt:
          type: integer
        updatedBy:
          type: string
      example:
        faultsPassed: 5
        faultsNA: 5
        securityGovernance:
          phase: phase
          name: name
          startedAt: 1
          securityGovernanceNodeData:
            passedRules:
            - null
            - null
            skippedRules:
            - null
            - null
            failedRules:
            - timeWindow:
                duration: duration
                recurrence:
                  type: type
                  spec:
                    until: 4
                    value: 7
                timeZone: timeZone
                startTime: 1
                endTime: 2
              description: description
              ruleName: ruleName
              conditions:
              - phase: phase
                conditionID: conditionID
                conditionName: conditionName
                message: message
              - phase: phase
                conditionID: conditionID
                conditionName: conditionName
                message: message
              message: message
              ruleID: ruleID
              userGroupIds:
              - userGroupIds
              - userGroupIds
            - timeWindow:
                duration: duration
                recurrence:
                  type: type
                  spec:
                    until: 4
                    value: 7
                timeZone: timeZone
                startTime: 1
                endTime: 2
              description: description
              ruleName: ruleName
              conditions:
              - phase: phase
                conditionID: conditionID
                conditionName: conditionName
                message: message
              - phase: phase
                conditionID: conditionID
                conditionName: conditionName
                message: message
              message: message
              ruleID: ruleID
              userGroupIds:
              - userGroupIds
              - userGroupIds
          message: message
          type: type
          finishedAt: 3
        executionData: executionData
        experimentType: cronexperiment
        revisionID: revisionID
        accountID: accountID
        createdAt: 0
        experimentRunID: experimentRunID
        isRemoved: true
        faultsAwaited: 6
        notifyID: notifyID
        totalFaults: 1
        targetedServices:
        - uid: uid
          name: name
          namespace: namespace
          id: id
        - uid: uid
          name: name
          namespace: namespace
          id: id
        infraID: infraID
        projectID: projectID
        experimentYaml: experimentYaml
        updatedAt: 6
        phase: phase
        faultsFailed: 1
        resiliencyScore: 7.061401241503109
        updatedBy: updatedBy
        completed: true
        faultsStopped: 2
        faultsWithProbes:
        - probes:
          - mode: mode
            revisionID: revisionID
            probeID: probeID
            name: name
          - mode: mode
            revisionID: revisionID
            probeID: probeID
            name: name
          faultName: faultName
        - probes:
          - mode: mode
            revisionID: revisionID
            probeID: probeID
            name: name
          - mode: mode
            revisionID: revisionID
            probeID: probeID
            name: name
          faultName: faultName
        errorResponse: errorResponse
        orgID: orgID
        createdBy: createdBy
        runSequence: 9
        networkMapID: networkMapID
        experimentID: experimentID
        experimentName: experimentName
    chaos_experiment_run.ConditionDetails:
      type: object
      properties:
        conditionID:
          type: string
        conditionName:
          type: string
        message:
          type: string
        phase:
          type: string
      example:
        phase: phase
        conditionID: conditionID
        conditionName: conditionName
        message: message
    chaos_experiment_run.ExperimentType:
      type: string
      enum:
      - cronexperiment
      - experiment
      - experiment_v2
      - gameday
      x-enum-varnames:
      - CRON_EXPERIMENT
      - EXPERIMENT
      - EXPERIMENT_V2
      - GAMEDAY
    chaos_experiment_run.Faults:
      type: object
      properties:
        faultName:
          type: string
        probes:
          type: array
          items:
            $ref: "#/components/schemas/chaos_experiment_run.Annotation"
      example:
        probes:
        - mode: mode
          revisionID: revisionID
          probeID: probeID
          name: name
        - mode: mode
          revisionID: revisionID
          probeID: probeID
          name: name
        faultName: faultName
    chaos_experiment_run.RuleDetails:
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: "#/components/schemas/chaos_experiment_run.ConditionDetails"
        description:
          type: string
        message:
          type: string
        ruleID:
          type: string
        ruleName:
          type: string
        timeWindow:
          $ref: "#/components/schemas/security_governance.TimeWindow"
        userGroupIds:
          type: array
          items:
            type: string
      example:
        timeWindow:
          duration: duration
          recurrence:
            type: type
            spec:
              until: 4
              value: 7
          timeZone: timeZone
          startTime: 1
          endTime: 2
        description: description
        ruleName: ruleName
        conditions:
        - phase: phase
          conditionID: conditionID
          conditionName: conditionName
          message: message
        - phase: phase
          conditionID: conditionID
          conditionName: conditionName
          message: message
        message: message
        ruleID: ruleID
        userGroupIds:
        - userGroupIds
        - userGroupIds
    chaos_experiment_run.SecurityGovernanceNode:
      type: object
      properties:
        finishedAt:
          type: integer
        message:
          type: string
        name:
          type: string
        phase:
          type: string
        securityGovernanceNodeData:
          $ref: "#/components/schemas/chaos_experiment_run.SecurityGovernanceNodeData"
        startedAt:
          type: integer
        type:
          type: string
      example:
        phase: phase
        name: name
        startedAt: 1
        securityGovernanceNodeData:
          passedRules:
          - null
          - null
          skippedRules:
          - null
          - null
          failedRules:
          - timeWindow:
              duration: duration
              recurrence:
                type: type
                spec:
                  until: 4
                  value: 7
              timeZone: timeZone
              startTime: 1
              endTime: 2
            description: description
            ruleName: ruleName
            conditions:
            - phase: phase
              conditionID: conditionID
              conditionName: conditionName
              message: message
            - phase: phase
              conditionID: conditionID
              conditionName: conditionName
              message: message
            message: message
            ruleID: ruleID
            userGroupIds:
            - userGroupIds
            - userGroupIds
          - timeWindow:
              duration: duration
              recurrence:
                type: type
                spec:
                  until: 4
                  value: 7
              timeZone: timeZone
              startTime: 1
              endTime: 2
            description: description
            ruleName: ruleName
            conditions:
            - phase: phase
              conditionID: conditionID
              conditionName: conditionName
              message: message
            - phase: phase
              conditionID: conditionID
              conditionName: conditionName
              message: message
            message: message
            ruleID: ruleID
            userGroupIds:
            - userGroupIds
            - userGroupIds
        message: message
        type: type
        finishedAt: 3
    chaos_experiment_run.SecurityGovernanceNodeData:
      type: object
      properties:
        failedRules:
          type: array
          items:
            $ref: "#/components/schemas/chaos_experiment_run.RuleDetails"
        passedRules:
          type: array
          items:
            $ref: "#/components/schemas/chaos_experiment_run.RuleDetails"
        skippedRules:
          type: array
          items:
            $ref: "#/components/schemas/chaos_experiment_run.RuleDetails"
      example:
        passedRules:
        - null
        - null
        skippedRules:
        - null
        - null
        failedRules:
        - timeWindow:
            duration: duration
            recurrence:
              type: type
              spec:
                until: 4
                value: 7
            timeZone: timeZone
            startTime: 1
            endTime: 2
          description: description
          ruleName: ruleName
          conditions:
          - phase: phase
            conditionID: conditionID
            conditionName: conditionName
            message: message
          - phase: phase
            conditionID: conditionID
            conditionName: conditionName
            message: message
          message: message
          ruleID: ruleID
          userGroupIds:
          - userGroupIds
          - userGroupIds
        - timeWindow:
            duration: duration
            recurrence:
              type: type
              spec:
                until: 4
                value: 7
            timeZone: timeZone
            startTime: 1
            endTime: 2
          description: description
          ruleName: ruleName
          conditions:
          - phase: phase
            conditionID: conditionID
            conditionName: conditionName
            message: message
          - phase: phase
            conditionID: conditionID
            conditionName: conditionName
            message: message
          message: message
          ruleID: ruleID
          userGroupIds:
          - userGroupIds
          - userGroupIds
    chaos_hub.AuthType:
      type: string
      enum:
      - Ssh
      - UsernameToken
      x-enum-varnames:
      - AuthTypeSSH
      - AuthTypeUsernameToken
    chaos_hub.ConnectorScope:
      type: string
      enum:
      - ACCOUNT
      - PROJECT
      - ORGANISATION
      x-enum-varnames:
      - ConnectorScopeAccount
      - ConnectorScopeProject
      - ConnectorScopeOrganisation
    chaos_infrastructure_v2.ChaosInfraV2:
      required:
      - accountID
      - isRemoved
      - name
      type: object
      properties:
        accountID:
          type: string
        apiVersion:
          type: string
        createdAt:
          type: integer
        createdBy:
          type: string
        description:
          type: string
        environmentId:
          type: string
        id:
          type: string
        identity:
          type: string
        isRemoved:
          type: boolean
        kind:
          type: string
        name:
          type: string
        orgID:
          type: string
        projectID:
          type: string
        spec:
          $ref: "#/components/schemas/chaos_infrastructure_v2.ChaosInfraV2Spec"
        tags:
          type: array
          items:
            type: string
        updatedAt:
          type: integer
        updatedBy:
          type: string
      example:
        updatedBy: updatedBy
        kind: kind
        description: description
        orgID: orgID
        spec:
          k8sInfraV2:
            emissaryURL: emissaryURL
            discoveryAgentId: discoveryAgentId
            scope: NAMESPACE
            aiEnabled: true
            namespace: namespace
            serviceAccount: serviceAccount
            type: KUBERNETES
            version: version
        tags:
        - tags
        - tags
        accountID: accountID
        createdAt: 0
        apiVersion: apiVersion
        environmentId: environmentId
        isRemoved: true
        createdBy: createdBy
        identity: identity
        name: name
        id: id
        projectID: projectID
        updatedAt: 6
    chaos_infrastructure_v2.ChaosInfraV2Spec:
      type: object
      properties:
        k8sInfraV2:
          $ref: "#/components/schemas/chaos_infrastructure_v2.K8sInfraV2SpecIdentifiers"
      example:
        k8sInfraV2:
          emissaryURL: emissaryURL
          discoveryAgentId: discoveryAgentId
          scope: NAMESPACE
          aiEnabled: true
          namespace: namespace
          serviceAccount: serviceAccount
          type: KUBERNETES
          version: version
    chaos_infrastructure_v2.InfraScope:
      type: string
      enum:
      - NAMESPACE
      - CLUSTER
      x-enum-varnames:
      - NamespaceScope
      - ClusterScope
    chaos_infrastructure_v2.InfraType:
      type: string
      enum:
      - KUBERNETES
      - KUBERNETESV2
      x-enum-varnames:
      - KubernetesType
      - KubernetesV2Type
    chaos_infrastructure_v2.K8sInfraV2SpecIdentifiers:
      type: object
      properties:
        aiEnabled:
          type: boolean
        discoveryAgentId:
          type: string
        emissaryURL:
          type: string
        namespace:
          type: string
        scope:
          $ref: "#/components/schemas/chaos_infrastructure_v2.InfraScope"
        serviceAccount:
          type: string
        type:
          $ref: "#/components/schemas/chaos_infrastructure_v2.InfraType"
        version:
          type: string
      example:
        emissaryURL: emissaryURL
        discoveryAgentId: discoveryAgentId
        scope: NAMESPACE
        aiEnabled: true
        namespace: namespace
        serviceAccount: serviceAccount
        type: KUBERNETES
        version: version
    chaosactiontemplate.ActionsTemplateCount:
      type: object
      properties:
        count:
          type: integer
        type:
          $ref: "#/components/schemas/actions.ActionType"
      example:
        count: 0
        type: delay
    chaosactiontemplate.ChaosActionTemplate:
      required:
      - accountID
      - isRemoved
      - name
      type: object
      properties:
        accountID:
          type: string
        actionProperties:
          type: object
          description: Needed for API response *not to be stored in DB*
          allOf:
          - $ref: "#/components/schemas/action.ActionTemplateProperties"
        createdAt:
          type: integer
        createdBy:
          type: string
        description:
          type: string
        hubRef:
          type: string
        id:
          type: string
        identity:
          type: string
          description: |-
            Unique identifier (human-readable) immutable
            Initially it will be same as name
        infrastructureType:
          $ref: "#/components/schemas/actions.InfrastructureType"
        isDefault:
          type: boolean
          description: |-
            isDefault indicates if it is the default version
            for predefined faults, latest should be set as default
        isRemoved:
          type: boolean
        name:
          type: string
          description: |-
            Fault name to sync the changes from the hub
            HubRef + Name should be unique
        orgID:
          type: string
        projectID:
          type: string
        revision:
          type: integer
          description: it increments every time a new version of fault is published
        runProperties:
          $ref: "#/components/schemas/action.ActionTemplateRunProperties"
        tags:
          type: array
          items:
            type: string
        template:
          type: string
        type:
          $ref: "#/components/schemas/actions.ActionType"
        updatedAt:
          type: integer
        updatedBy:
          type: string
        variables:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
      example:
        template: template
        variables:
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        updatedBy: updatedBy
        hubRef: hubRef
        description: description
        type: null
        actionProperties: ""
        orgID: orgID
        revision: 1
        tags:
        - tags
        - tags
        accountID: accountID
        createdAt: 6
        isDefault: true
        isRemoved: true
        runProperties:
          maxRetries: {}
          stopOnFailure: true
          interval: interval
          initialDelay: initialDelay
          timeout: timeout
          verbosity: verbosity
        createdBy: createdBy
        identity: identity
        infrastructureType: Kubernetes
        name: name
        id: id
        projectID: projectID
        updatedAt: 5
    chaosexperimentpipeline.GetChaosPipelineNodesResponse:
      type: object
      properties:
        chaosExecutionNode:
          $ref: "#/components/schemas/chaos_execution_nodes.ChaosExecutionNode"
        refEntities:
          $ref: "#/components/schemas/chaosexperimentpipeline.ReferenceEntities"
      example:
        refEntities:
          faultRef:
            identity: identity
            values:
            - null
            - null
            hubRef: hubRef
            name: name
            infraId: infraId
            revision: 6
          variables:
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          probeRef:
            duration: duration
            weightage: 5
            identity: identity
            values:
            - null
            - null
            hubRef: hubRef
            name: name
            conditions:
            - executeUpon: executeUpon
            - executeUpon: executeUpon
            actions:
            - args:
              - args
              - args
              condition: condition
              identity: identity
              env:
              - null
              - null
            - args:
              - args
              - args
              condition: condition
              identity: identity
              env:
              - null
              - null
            infraId: infraId
            enableDataCollection: true
            revision: 1
          actionRef:
            args:
            - args
            - args
            identity: identity
            values:
            - name: name
              value: {}
            - name: name
              value: {}
            hubRef: hubRef
            name: name
            env:
            - name: name
              value: value
              valueFrom: ""
            - name: name
              value: value
              valueFrom: ""
            continueOnCompletion: true
            infraId: infraId
            revision: 0
        chaosExecutionNode:
          estimatedTime: 1
          stepType: FAULT
          streamID: streamID
          lastUpdatedAt: 6
          chaosData:
            faultData:
              helperPodDetails:
              - name: name
                logStreamID: logStreamID
              - name: name
                logStreamID: logStreamID
              name: name
              namespace: namespace
              faultDetails:
                name: name
                definition:
                  chaos: ""
                  targets: ""
            actionData:
              name: name
            probeData:
              probeDetails:
                apmProbe/inputs: ""
                datadogProbe/inputs: ""
                httpProbe/inputs: ""
                promProbe/inputs: ""
                data: data
                k8sProbe/inputs: ""
                cmdProbe/inputs: ""
                type: type
                mode: mode
                newrelicProbe/inputs: ""
                runProperties: ""
                dynatraceProbe/inputs: ""
                name: name
                id: id
                sloProbe/inputs: ""
              weightage: 7
              resiliencyScore: 4
              probeType: probeType
              name: name
              description: description
              iterations:
              - commandProbe:
                  output:
                  - 5
                  - 5
                duration: 2
                phase: phase
                promProbe:
                  metrics: metrics
                httpProbe:
                  responseBody:
                  - 7
                  - 7
                  responseTime: 9
                  statusCode: 3
                timestamp: 2
              - commandProbe:
                  output:
                  - 5
                  - 5
                duration: 2
                phase: phase
                promProbe:
                  metrics: metrics
                httpProbe:
                  responseBody:
                  - 7
                  - 7
                  responseTime: 9
                  statusCode: 3
                timestamp: 2
              faultName: faultName
          startedAt: 7
          errorData:
            code: code
            message: message
          orgID: orgID
          spec: spec
          finishedAt: 1
          duration: 1
          accountID: accountID
          experimentRunID: experimentRunID
          isRemoved: true
          stepName: stepName
          experimentID: experimentID
          projectID: projectID
          status: PENDING
    chaosexperimentpipeline.ReferenceEntities:
      type: object
      properties:
        actionRef:
          $ref: "#/components/schemas/experiment.ActionRef"
        faultRef:
          $ref: "#/components/schemas/experiment.FaultRef"
        probeRef:
          $ref: "#/components/schemas/experiment.ProbeRef"
        variables:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
      example:
        faultRef:
          identity: identity
          values:
          - null
          - null
          hubRef: hubRef
          name: name
          infraId: infraId
          revision: 6
        variables:
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        probeRef:
          duration: duration
          weightage: 5
          identity: identity
          values:
          - null
          - null
          hubRef: hubRef
          name: name
          conditions:
          - executeUpon: executeUpon
          - executeUpon: executeUpon
          actions:
          - args:
            - args
            - args
            condition: condition
            identity: identity
            env:
            - null
            - null
          - args:
            - args
            - args
            condition: condition
            identity: identity
            env:
            - null
            - null
          infraId: infraId
          enableDataCollection: true
          revision: 1
        actionRef:
          args:
          - args
          - args
          identity: identity
          values:
          - name: name
            value: {}
          - name: name
            value: {}
          hubRef: hubRef
          name: name
          env:
          - name: name
            value: value
            valueFrom: ""
          - name: name
            value: value
            valueFrom: ""
          continueOnCompletion: true
          infraId: infraId
          revision: 0
    chaosfaulttemplate.ActionTemplate:
      required:
      - name
      type: object
      properties:
        actionProperties:
          $ref: "#/components/schemas/action.ActionTemplateProperties"
        description:
          type: string
        hubRef:
          type: string
        identity:
          type: string
        infrastructureType:
          $ref: "#/components/schemas/actions.InfrastructureType"
        name:
          type: string
        runProperties:
          $ref: "#/components/schemas/action.ActionTemplateRunProperties"
        tags:
          type: array
          items:
            type: string
        type:
          type: string
        variables:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
      example:
        variables:
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        runProperties:
          maxRetries: {}
          stopOnFailure: true
          interval: interval
          initialDelay: initialDelay
          timeout: timeout
          verbosity: verbosity
        identity: identity
        infrastructureType: Kubernetes
        hubRef: hubRef
        name: name
        description: description
        type: type
        actionProperties:
          customScriptAction:
            args:
            - args
            - args
            env: {}
            command: command
          sourceAction:
            image: image
            imagePullPolicy: imagePullPolicy
            volumeMount: {}
            serviceAccountName: serviceAccountName
            imagePullSecrets: {}
            volumes: {}
            resources: {}
            env: {}
            command: {}
            nodeSelector: {}
            args: {}
            privileged: true
            tolerations: {}
            inheritInputs: true
          delayAction:
            duration: duration
        tags:
        - tags
        - tags
    chaosfaulttemplate.ActionTemplateVariables:
      type: object
      properties:
        actionProperties:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
        actionRunProperty:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
        variables:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
      example:
        variables:
        - null
        - null
        actionRunProperty:
        - null
        - null
        actionProperties:
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
    chaosfaulttemplate.CreateFaultTemplateRequest:
      type: object
      properties:
        description:
          type: string
        identity:
          type: string
        infras:
          type: array
          items:
            type: string
        keywords:
          type: array
          items:
            type: string
        name:
          type: string
        platforms:
          type: array
          items:
            type: string
        revision:
          type: integer
        spec:
          $ref: "#/components/schemas/k8sfault.K8SFaultSpec"
        tags:
          type: array
          items:
            type: string
        variables:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
    chaosfaulttemplate.CreateFaultTemplateResponse:
      type: object
      properties:
        corelationID:
          type: string
        description:
          type: string
        hubID:
          type: string
        identity:
          type: string
        infras:
          type: array
          items:
            type: string
        keywords:
          type: array
          items:
            type: string
        name:
          type: string
        platforms:
          type: array
          items:
            type: string
        revision:
          type: integer
        spec:
          $ref: "#/components/schemas/k8sfault.K8SFaultSpec"
        tags:
          type: array
          items:
            type: string
        variables:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
      example:
        hubID: hubID
        variables:
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        keywords:
        - keywords
        - keywords
        identity: identity
        infras:
        - infras
        - infras
        name: name
        description: description
        corelationID: corelationID
        spec:
          chaos:
            image: image
            imagePullPolicy: Always
            hostNetwork: true
            podSecurityContext:
              runAsUser: 7
              seLinuxOptions: ""
              fsGroup: 5
              seccompProfile: ""
              windowsOptions: ""
              fsGroupChangePolicy: ""
              supplementalGroups:
              - 9
              - 9
              runAsGroup: 2
              runAsNonRoot: true
              sysctls:
              - name: name
                value: value
              - name: name
                value: value
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            hostIPC: true
            annotations:
              key: annotations
            toleration:
              effect: ""
              tolerationSeconds: 2
              value: value
              key: key
              operator: ""
            secretVolume:
            - mountPath: mountPath
              mountMode: 3
              name: name
            - mountPath: mountPath
              mountMode: 3
              name: name
            env:
            - name: name
              value: value
              valueFrom: ""
            - name: name
              value: value
              valueFrom: ""
            params:
            - name: name
              value: value
            - name: name
              value: value
            command:
            - command
            - command
            faultName: faultName
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            args:
            - args
            - args
            configMapVolume:
            - mountPath: mountPath
              mountMode: 6
              name: name
            - mountPath: mountPath
              mountMode: 6
              name: name
            resourceRequirements:
              requests:
                key: requests
              limits:
                key: limits
            containerSecurityContext:
              privileged: true
              runAsUser: 5
              capabilities: ""
              seLinuxOptions: ""
              seccompProfile: ""
              windowsOptions: ""
              procMount: ""
              allowPrivilegeEscalation: true
              runAsGroup: 1
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            hostPathVolume:
            - mountPath: mountPath
              name: name
              type: ""
              hostPath: hostPath
            - mountPath: mountPath
              name: name
              type: ""
              hostPath: hostPath
            hostPID: true
          target:
            applicationSDK:
              application: application
              entrypoint: entrypoint
            k8sResource:
            - names: names
              kind: kind
              namespace: namespace
              labels: labels
            - names: names
              kind: kind
              namespace: namespace
              labels: labels
        platforms:
        - platforms
        - platforms
        revision: 0
        tags:
        - tags
        - tags
    chaosfaulttemplate.FaultTemplateVariables:
      type: object
      properties:
        faultTargets:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
        faultTunable:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
        variables:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
      example:
        faultTunable:
        - null
        - null
        variables:
        - null
        - null
        faultTargets:
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
    chaosfaulttemplate.GetActionTemplateResponse:
      type: object
      properties:
        correlationID:
          type: string
        data:
          $ref: "#/components/schemas/chaosactiontemplate.ChaosActionTemplate"
      example:
        data:
          template: template
          variables:
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          updatedBy: updatedBy
          hubRef: hubRef
          description: description
          type: null
          actionProperties: ""
          orgID: orgID
          revision: 1
          tags:
          - tags
          - tags
          accountID: accountID
          createdAt: 6
          isDefault: true
          isRemoved: true
          runProperties:
            maxRetries: {}
            stopOnFailure: true
            interval: interval
            initialDelay: initialDelay
            timeout: timeout
            verbosity: verbosity
          createdBy: createdBy
          identity: identity
          infrastructureType: Kubernetes
          name: name
          id: id
          projectID: projectID
          updatedAt: 5
        correlationID: correlationID
    chaosfaulttemplate.GetFaultTemplateResponse:
      type: object
      properties:
        corelationID:
          type: string
        data:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_chaosfaulttemplate.ChaosFaultTemplate"
        typed:
          $ref: "#/components/schemas/k8sfault.K8SFault"
      example:
        typed:
          variables:
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          keywords:
          - keywords
          - keywords
          identity: identity
          infras:
          - infras
          - infras
          name: name
          description: description
          spec:
            chaos:
              image: image
              imagePullPolicy: Always
              hostNetwork: true
              podSecurityContext:
                runAsUser: 7
                seLinuxOptions: ""
                fsGroup: 5
                seccompProfile: ""
                windowsOptions: ""
                fsGroupChangePolicy: ""
                supplementalGroups:
                - 9
                - 9
                runAsGroup: 2
                runAsNonRoot: true
                sysctls:
                - name: name
                  value: value
                - name: name
                  value: value
              imagePullSecrets:
              - imagePullSecrets
              - imagePullSecrets
              hostIPC: true
              annotations:
                key: annotations
              toleration:
                effect: ""
                tolerationSeconds: 2
                value: value
                key: key
                operator: ""
              secretVolume:
              - mountPath: mountPath
                mountMode: 3
                name: name
              - mountPath: mountPath
                mountMode: 3
                name: name
              env:
              - name: name
                value: value
                valueFrom: ""
              - name: name
                value: value
                valueFrom: ""
              params:
              - name: name
                value: value
              - name: name
                value: value
              command:
              - command
              - command
              faultName: faultName
              labels:
                key: labels
              nodeSelector:
                key: nodeSelector
              args:
              - args
              - args
              configMapVolume:
              - mountPath: mountPath
                mountMode: 6
                name: name
              - mountPath: mountPath
                mountMode: 6
                name: name
              resourceRequirements:
                requests:
                  key: requests
                limits:
                  key: limits
              containerSecurityContext:
                privileged: true
                runAsUser: 5
                capabilities: ""
                seLinuxOptions: ""
                seccompProfile: ""
                windowsOptions: ""
                procMount: ""
                allowPrivilegeEscalation: true
                runAsGroup: 1
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              hostPathVolume:
              - mountPath: mountPath
                name: name
                type: ""
                hostPath: hostPath
              - mountPath: mountPath
                name: name
                type: ""
                hostPath: hostPath
              hostPID: true
            target:
              applicationSDK:
                application: application
                entrypoint: entrypoint
              k8sResource:
              - names: names
                kind: kind
                namespace: namespace
                labels: labels
              - names: names
                kind: kind
                namespace: namespace
                labels: labels
          platforms:
          - platforms
          - platforms
          revision: 0
          tags:
          - tags
          - tags
        data:
          template: template
          variables:
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          hubRef: hubRef
          orgID: orgID
          revision: 6
          accountID: accountID
          createdAt: 0
          isDefault: true
          isRemoved: true
          createdBy: createdBy
          identity: identity
          name: name
          id: id
          projectID: projectID
        corelationID: corelationID
    chaosfaulttemplate.ListActionTemplateResponse:
      type: object
      properties:
        correlationID:
          type: string
        countDetails:
          type: array
          items:
            $ref: "#/components/schemas/chaosactiontemplate.ActionsTemplateCount"
        data:
          type: array
          items:
            $ref: "#/components/schemas/chaosactiontemplate.ChaosActionTemplate"
        pagination:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_api.Pagination"
      example:
        pagination:
          totalItems: 2
          limit: 5
          totalPages: 7
          index: 5
        data:
        - template: template
          variables:
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          updatedBy: updatedBy
          hubRef: hubRef
          description: description
          type: null
          actionProperties: ""
          orgID: orgID
          revision: 1
          tags:
          - tags
          - tags
          accountID: accountID
          createdAt: 6
          isDefault: true
          isRemoved: true
          runProperties:
            maxRetries: {}
            stopOnFailure: true
            interval: interval
            initialDelay: initialDelay
            timeout: timeout
            verbosity: verbosity
          createdBy: createdBy
          identity: identity
          infrastructureType: Kubernetes
          name: name
          id: id
          projectID: projectID
          updatedAt: 5
        - template: template
          variables:
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          updatedBy: updatedBy
          hubRef: hubRef
          description: description
          type: null
          actionProperties: ""
          orgID: orgID
          revision: 1
          tags:
          - tags
          - tags
          accountID: accountID
          createdAt: 6
          isDefault: true
          isRemoved: true
          runProperties:
            maxRetries: {}
            stopOnFailure: true
            interval: interval
            initialDelay: initialDelay
            timeout: timeout
            verbosity: verbosity
          createdBy: createdBy
          identity: identity
          infrastructureType: Kubernetes
          name: name
          id: id
          projectID: projectID
          updatedAt: 5
        correlationID: correlationID
        countDetails:
        - count: 0
          type: delay
        - count: 0
          type: delay
    chaosfaulttemplate.ListFaultTemplateResponse:
      type: object
      properties:
        corelationID:
          type: string
        data:
          type: array
          items:
            $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_chaosfaulttemplate.ChaosFaultTemplate"
        pagination:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_api.Pagination"
      example:
        pagination:
          totalItems: 2
          limit: 5
          totalPages: 7
          index: 5
        data:
        - template: template
          variables:
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          hubRef: hubRef
          orgID: orgID
          revision: 6
          accountID: accountID
          createdAt: 0
          isDefault: true
          isRemoved: true
          createdBy: createdBy
          identity: identity
          name: name
          id: id
          projectID: projectID
        - template: template
          variables:
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          hubRef: hubRef
          orgID: orgID
          revision: 6
          accountID: accountID
          createdAt: 0
          isDefault: true
          isRemoved: true
          createdBy: createdBy
          identity: identity
          name: name
          id: id
          projectID: projectID
        corelationID: corelationID
    chaosfaulttemplate.UpdateFaultTemplateResponse:
      type: object
      properties:
        corelationID:
          type: string
        description:
          type: string
        hubID:
          type: string
        identity:
          type: string
        infras:
          type: array
          items:
            type: string
        keywords:
          type: array
          items:
            type: string
        name:
          type: string
        platforms:
          type: array
          items:
            type: string
        revision:
          type: integer
        spec:
          $ref: "#/components/schemas/k8sfault.K8SFaultSpec"
        tags:
          type: array
          items:
            type: string
        variables:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
      example:
        hubID: hubID
        variables:
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        keywords:
        - keywords
        - keywords
        identity: identity
        infras:
        - infras
        - infras
        name: name
        description: description
        corelationID: corelationID
        spec:
          chaos:
            image: image
            imagePullPolicy: Always
            hostNetwork: true
            podSecurityContext:
              runAsUser: 7
              seLinuxOptions: ""
              fsGroup: 5
              seccompProfile: ""
              windowsOptions: ""
              fsGroupChangePolicy: ""
              supplementalGroups:
              - 9
              - 9
              runAsGroup: 2
              runAsNonRoot: true
              sysctls:
              - name: name
                value: value
              - name: name
                value: value
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            hostIPC: true
            annotations:
              key: annotations
            toleration:
              effect: ""
              tolerationSeconds: 2
              value: value
              key: key
              operator: ""
            secretVolume:
            - mountPath: mountPath
              mountMode: 3
              name: name
            - mountPath: mountPath
              mountMode: 3
              name: name
            env:
            - name: name
              value: value
              valueFrom: ""
            - name: name
              value: value
              valueFrom: ""
            params:
            - name: name
              value: value
            - name: name
              value: value
            command:
            - command
            - command
            faultName: faultName
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            args:
            - args
            - args
            configMapVolume:
            - mountPath: mountPath
              mountMode: 6
              name: name
            - mountPath: mountPath
              mountMode: 6
              name: name
            resourceRequirements:
              requests:
                key: requests
              limits:
                key: limits
            containerSecurityContext:
              privileged: true
              runAsUser: 5
              capabilities: ""
              seLinuxOptions: ""
              seccompProfile: ""
              windowsOptions: ""
              procMount: ""
              allowPrivilegeEscalation: true
              runAsGroup: 1
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            hostPathVolume:
            - mountPath: mountPath
              name: name
              type: ""
              hostPath: hostPath
            - mountPath: mountPath
              name: name
              type: ""
              hostPath: hostPath
            hostPID: true
          target:
            applicationSDK:
              application: application
              entrypoint: entrypoint
            k8sResource:
            - names: names
              kind: kind
              namespace: namespace
              labels: labels
            - names: names
              kind: kind
              namespace: namespace
              labels: labels
        platforms:
        - platforms
        - platforms
        revision: 0
        tags:
        - tags
        - tags
    chaoshub.FaultCategoriesCount:
      type: object
      properties:
        AWS:
          type: integer
        Azure:
          type: integer
        BYOC:
          type: integer
        Cloud Foundry:
          type: integer
        GCP:
          type: integer
        Kube Resilience:
          type: integer
        Kubernetes:
          type: integer
        Linux:
          type: integer
        Load:
          type: integer
        SSH:
          type: integer
        Spring Boot:
          type: integer
        VMWare:
          type: integer
        Windows:
          type: integer
      example:
        Azure: 5
        Load: 4
        Cloud Foundry: 2
        SSH: 7
        Spring Boot: 1
        Windows: 1
        VMWare: 1
        BYOC: 5
        Linux: 2
        GCP: 7
        Kube Resilience: 9
        AWS: 1
        Kubernetes: 3
    chaoshub.ListFaultsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/chaoshubresources.ChaosHubResource"
        faultCategoriesCount:
          $ref: "#/components/schemas/chaoshub.FaultCategoriesCount"
        pagination:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_api.Pagination"
      example:
        pagination:
          totalItems: 2
          limit: 5
          totalPages: 7
          index: 5
        data:
        - template: template
          chartServiceVersion: chartServiceVersion
          keywords:
          - keywords
          - keywords
          displayName: displayName
          infras:
          - infras
          - infras
          description: description
          chaosType: chaosType
          platforms:
          - platforms
          - platforms
          permissionsRequired: ""
          accountID: accountID
          createdAt: 0
          isRemoved: true
          experiment: experiment
          engine: engine
          identity: identity
          k8SFault: k8SFault
          links:
          - name: name
            url: url
          - name: name
            url: url
          id: id
          plan:
          - plan
          - plan
          projectID: projectID
          updatedAt: 6
          hubID: hubID
          isDefaultHub: true
          updatedBy: updatedBy
          kind: kind
          fault: fault
          orgID: orgID
          tags:
          - tags
          - tags
          createdBy: createdBy
          name: name
          experimentV2: experimentV2
          isTemplatised: true
          category: category
          resourceType: resourceType
        - template: template
          chartServiceVersion: chartServiceVersion
          keywords:
          - keywords
          - keywords
          displayName: displayName
          infras:
          - infras
          - infras
          description: description
          chaosType: chaosType
          platforms:
          - platforms
          - platforms
          permissionsRequired: ""
          accountID: accountID
          createdAt: 0
          isRemoved: true
          experiment: experiment
          engine: engine
          identity: identity
          k8SFault: k8SFault
          links:
          - name: name
            url: url
          - name: name
            url: url
          id: id
          plan:
          - plan
          - plan
          projectID: projectID
          updatedAt: 6
          hubID: hubID
          isDefaultHub: true
          updatedBy: updatedBy
          kind: kind
          fault: fault
          orgID: orgID
          tags:
          - tags
          - tags
          createdBy: createdBy
          name: name
          experimentV2: experimentV2
          isTemplatised: true
          category: category
          resourceType: resourceType
        faultCategoriesCount:
          Azure: 5
          Load: 4
          Cloud Foundry: 2
          SSH: 7
          Spring Boot: 1
          Windows: 1
          VMWare: 1
          BYOC: 5
          Linux: 2
          GCP: 7
          Kube Resilience: 9
          AWS: 1
          Kubernetes: 3
    chaoshubresources.ChaosHubResource:
      required:
      - accountID
      - isRemoved
      type: object
      properties:
        accountID:
          type: string
        category:
          type: string
          description: "Category of the fault (Kubernetes, KubernetesV2, Linux, Windows,\
            \ PCF etc)"
        chaosType:
          type: string
          description: ChaosType
        chartServiceVersion:
          type: string
          description: chartserviceversion yml in encoded form (chartserviceversion.yaml)
        createdAt:
          type: integer
        createdBy:
          type: string
        description:
          type: string
          description: Description of the resource
        displayName:
          type: string
          description: Display name of the resource
        engine:
          type: string
          description: ChaosEngine yml in encoded form (engine.yaml)
        experiment:
          type: string
          description: experiment yml in encoded form (experiment.yaml)
        experimentV2:
          type: string
          description: experiment-v2 yml in encoded form (experiment-v2.yaml)
        fault:
          type: string
          description: Fault yml in encoded form (fault.yml)
        hubID:
          type: string
          description: ID of the chaos hub
        id:
          type: string
          description: Mongo ID (primary key)
        identity:
          type: string
          description: |-
            TODO: identity changes move to chaosHub
            Unique identifier (human-readable) immutable
            Initially it will be same as name
            Should be unique at hub level
        infras:
          type: array
          description: Infras represents supported infrastructures
          items:
            type: string
        isDefaultHub:
          type: boolean
          description: IsDefaultHub represents if it is a default hub
        isRemoved:
          type: boolean
        isTemplatised:
          type: boolean
          description: IsTemplatised denotes if template is available for the fault
        k8SFault:
          type: string
          description: K8sFault yml in encoded form (k8s-fault.yaml)
        keywords:
          type: array
          description: "Keyword of the resource (kubernetes, VMWare etc)"
          items:
            type: string
        kind:
          type: string
          description: Kind of the resource
        links:
          type: array
          description: Links are array of Link
          items:
            $ref: "#/components/schemas/chaoshubresources.Link"
        name:
          type: string
          description: name of the resource
        orgID:
          type: string
        permissionsRequired:
          type: object
          description: PermissionsRequired represents the level of permissions required
            for the resource
          allOf:
          - $ref: "#/components/schemas/chaoshubresources.PermissionLevel"
        plan:
          type: array
          description: Plan
          items:
            type: string
        platforms:
          type: array
          description: "Platforms supported (GKE, Minikube, EKS, AKS etc)"
          items:
            type: string
        projectID:
          type: string
        resourceType:
          type: string
          description: "Type: fault or experiment or probes"
        tags:
          type: array
          description: tags for the resource
          items:
            type: string
        template:
          type: string
          description: template yaml in encoded form (template.yaml)
        updatedAt:
          type: integer
        updatedBy:
          type: string
      example:
        template: template
        chartServiceVersion: chartServiceVersion
        keywords:
        - keywords
        - keywords
        displayName: displayName
        infras:
        - infras
        - infras
        description: description
        chaosType: chaosType
        platforms:
        - platforms
        - platforms
        permissionsRequired: ""
        accountID: accountID
        createdAt: 0
        isRemoved: true
        experiment: experiment
        engine: engine
        identity: identity
        k8SFault: k8SFault
        links:
        - name: name
          url: url
        - name: name
          url: url
        id: id
        plan:
        - plan
        - plan
        projectID: projectID
        updatedAt: 6
        hubID: hubID
        isDefaultHub: true
        updatedBy: updatedBy
        kind: kind
        fault: fault
        orgID: orgID
        tags:
        - tags
        - tags
        createdBy: createdBy
        name: name
        experimentV2: experimentV2
        isTemplatised: true
        category: category
        resourceType: resourceType
    chaoshubresources.Link:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
      example:
        name: name
        url: url
    chaoshubresources.PermissionLevel:
      type: string
      enum:
      - basic
      - advanced
      x-enum-varnames:
      - PermissionLevelBasic
      - PermissionLevelAdvance
    chaoshubv2.ChaosHubResponse:
      required:
      - accountID
      - hubId
      - identity
      - isDefault
      - isRemoved
      - name
      type: object
      properties:
        accountID:
          type: string
        actionTemplateCount:
          type: integer
        authType:
          type: object
          description: TBD check if this details is available in connector details
            if so deprecate it
          allOf:
          - $ref: "#/components/schemas/chaos_hub.AuthType"
        connectorId:
          type: string
          description: "TBD use ConnectorRef: org.test-connector and deprecate it"
        connectorScope:
          type: object
          description: TBD use ConnectorRef and deprecate it
          allOf:
          - $ref: "#/components/schemas/chaos_hub.ConnectorScope"
        createdAt:
          type: integer
        createdBy:
          type: string
        description:
          type: string
        experimentTemplateCount:
          type: integer
        faultTemplateCount:
          type: integer
        hubId:
          type: string
        identity:
          type: string
        isDefault:
          type: boolean
        isRemoved:
          type: boolean
        lastSyncedAt:
          type: integer
        name:
          type: string
        orgID:
          type: string
        probeTemplateCount:
          type: integer
        projectID:
          type: string
        repoBranch:
          type: string
        repoName:
          type: string
        repoUrl:
          type: string
        tags:
          type: array
          items:
            type: string
        updatedAt:
          type: integer
        updatedBy:
          type: string
      example:
        hubId: hubId
        experimentTemplateCount: 1
        connectorScope: ""
        connectorId: connectorId
        lastSyncedAt: 5
        description: description
        accountID: accountID
        createdAt: 6
        actionTemplateCount: 0
        isRemoved: true
        identity: identity
        authType: ""
        projectID: projectID
        updatedAt: 7
        repoUrl: repoUrl
        updatedBy: updatedBy
        repoName: repoName
        probeTemplateCount: 2
        repoBranch: repoBranch
        orgID: orgID
        tags:
        - tags
        - tags
        isDefault: true
        createdBy: createdBy
        name: name
        faultTemplateCount: 5
    chaoshubv2.CreateHubRequest:
      required:
      - identity
      - name
      type: object
      properties:
        connectorRef:
          type: string
        description:
          type: string
        identity:
          type: string
        name:
          type: string
        repoBranch:
          type: string
        repoName:
          type: string
        tags:
          type: array
          items:
            type: string
    chaoshubv2.GetHubResponse:
      required:
      - accountID
      - hubId
      - identity
      - isDefault
      - isRemoved
      - name
      type: object
      properties:
        accountID:
          type: string
        actionTemplateCount:
          type: integer
        authType:
          type: object
          description: TBD check if this details is available in connector details
            if so deprecate it
          allOf:
          - $ref: "#/components/schemas/chaos_hub.AuthType"
        connectorId:
          type: string
          description: "TBD use ConnectorRef: org.test-connector and deprecate it"
        connectorScope:
          type: object
          description: TBD use ConnectorRef and deprecate it
          allOf:
          - $ref: "#/components/schemas/chaos_hub.ConnectorScope"
        createdAt:
          type: integer
        createdBy:
          type: string
        description:
          type: string
        experimentTemplateCount:
          type: integer
        faultTemplateCount:
          type: integer
        hubId:
          type: string
        identity:
          type: string
        isDefault:
          type: boolean
        isRemoved:
          type: boolean
        lastSyncedAt:
          type: integer
        name:
          type: string
        orgID:
          type: string
        probeTemplateCount:
          type: integer
        projectID:
          type: string
        repoBranch:
          type: string
        repoName:
          type: string
        repoUrl:
          type: string
        tags:
          type: array
          items:
            type: string
        updatedAt:
          type: integer
        updatedBy:
          type: string
      example:
        hubId: hubId
        experimentTemplateCount: 1
        connectorScope: ""
        connectorId: connectorId
        lastSyncedAt: 5
        description: description
        accountID: accountID
        createdAt: 6
        actionTemplateCount: 0
        isRemoved: true
        identity: identity
        authType: ""
        projectID: projectID
        updatedAt: 7
        repoUrl: repoUrl
        updatedBy: updatedBy
        repoName: repoName
        probeTemplateCount: 2
        repoBranch: repoBranch
        orgID: orgID
        tags:
        - tags
        - tags
        isDefault: true
        createdBy: createdBy
        name: name
        faultTemplateCount: 5
    chaoshubv2.ListHubResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/chaoshubv2.ChaosHubResponse"
        pagination:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_api.Pagination"
      example:
        pagination:
          totalItems: 2
          limit: 5
          totalPages: 7
          index: 5
        items:
        - hubId: hubId
          experimentTemplateCount: 1
          connectorScope: ""
          connectorId: connectorId
          lastSyncedAt: 5
          description: description
          accountID: accountID
          createdAt: 6
          actionTemplateCount: 0
          isRemoved: true
          identity: identity
          authType: ""
          projectID: projectID
          updatedAt: 7
          repoUrl: repoUrl
          updatedBy: updatedBy
          repoName: repoName
          probeTemplateCount: 2
          repoBranch: repoBranch
          orgID: orgID
          tags:
          - tags
          - tags
          isDefault: true
          createdBy: createdBy
          name: name
          faultTemplateCount: 5
        - hubId: hubId
          experimentTemplateCount: 1
          connectorScope: ""
          connectorId: connectorId
          lastSyncedAt: 5
          description: description
          accountID: accountID
          createdAt: 6
          actionTemplateCount: 0
          isRemoved: true
          identity: identity
          authType: ""
          projectID: projectID
          updatedAt: 7
          repoUrl: repoUrl
          updatedBy: updatedBy
          repoName: repoName
          probeTemplateCount: 2
          repoBranch: repoBranch
          orgID: orgID
          tags:
          - tags
          - tags
          isDefault: true
          createdBy: createdBy
          name: name
          faultTemplateCount: 5
    chaoshubv2.UpdateHubRequest:
      required:
      - name
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        tags:
          type: array
          items:
            type: string
    chaosprobetemplate.GetProbeTemplateResponse:
      type: object
      properties:
        correlationID:
          type: string
        data:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_chaosprobetemplate.ChaosProbeTemplate"
      example:
        data:
          template: template
          variables:
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          updatedBy: updatedBy
          hubRef: hubRef
          description: description
          type: null
          orgID: orgID
          probeProperties:
            datadogProbe:
              datadogSite: datadogSite
              datadogCredentialsSecretName: datadogCredentialsSecretName
              metrics:
                comparator: null
                query: query
                timeFrame: timeFrame
              syntheticsTest:
                testType: api
                publicId: publicId
            sloProbe:
              comparator: null
              insecureSkipVerify: true
              evaluationTimeout: evaluationTimeout
              sloSourceMetadata:
                apiTokenSecret: apiTokenSecret
                scope:
                  orgIdentifier: orgIdentifier
                  accountIdentifier: accountIdentifier
                  projectIdentifier: projectIdentifier
              platformEndpoint: platformEndpoint
              evaluationWindow:
                evaluationStartTime: {}
                evaluationEndTime: {}
              sloIdentifier: sloIdentifier
            promProbe:
              comparator: null
              endpoint: endpoint
              auth: null
              queryPath: queryPath
              query: query
              tlsConfig: null
            apmProbe:
              comparator:
                criteria: criteria
                type: type
                value: value
              appDynamicsProbeInputs:
                appdMetrics:
                  metricsFullPath: metricsFullPath
                  durationInMin: {}
                connectorID: connectorID
              type: Prometheus
              splunkObservabilityProbeInputs:
                splunkObservabilityMetrics:
                  durationInMin: {}
                  query: query
                connectorID: connectorID
              prometheusProbeInputs:
                connectorID: connectorID
                query: query
                tlsConfig:
                  caCrt:
                    identifier: identifier
                  insecureSkipVerify: {}
                  clientCrt: null
                  key: null
            cmdProbe:
              comparator: null
              source: source
              command: command
            httpProbe:
              headers:
              - value: value
                key: key
              - value: value
                key: key
              method:
                post:
                  responseBody: responseBody
                  criteria: criteria
                  body: body
                  bodyPath: bodyPath
                  contentType: contentType
                  responseCode: responseCode
                get:
                  responseBody: responseBody
                  criteria: criteria
                  responseCode: responseCode
              auth:
                credentialsFile: credentialsFile
                credentials: credentials
                type: type
              url: url
              tlsConfig:
                caFile: caFile
                keyFile: keyFile
                certFile: certFile
                insecureSkipVerify: true
            dynatraceProbe:
              comparator: null
              endpoint: endpoint
              apiTokenSecretName: apiTokenSecretName
              metrics:
                entitySelector: entitySelector
                metricsSelector: metricsSelector
              timeFrame: timeFrame
            k8sProbe:
              resourceNames: resourceNames
              resource: resource
              labelSelector: labelSelector
              namespace: namespace
              fieldSelector: fieldSelector
              operation: operation
              version: version
              group: group
          revision: 1
          tags:
          - tags
          - tags
          accountID: accountID
          createdAt: 6
          isDefault: true
          isRemoved: true
          runProperties:
            stopOnFailure: true
            pollingInterval: pollingInterval
            interval: interval
            initialDelay: initialDelay
            attempt: {}
            retry: {}
            timeout: timeout
            verbosity: verbosity
          createdBy: createdBy
          identity: identity
          infrastructureType: Kubernetes
          name: name
          id: id
          projectID: projectID
          updatedAt: 5
        correlationID: correlationID
    chaosprobetemplate.ListProbeTemplateResponse:
      type: object
      properties:
        correlationID:
          type: string
        countDetails:
          type: array
          items:
            $ref: "#/components/schemas/chaosprobetemplate.ProbeTemplateCount"
        data:
          type: array
          items:
            $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_chaosprobetemplate.ChaosProbeTemplate"
        pagination:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_api.Pagination"
      example:
        pagination:
          totalItems: 2
          limit: 5
          totalPages: 7
          index: 5
        data:
        - template: template
          variables:
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          updatedBy: updatedBy
          hubRef: hubRef
          description: description
          type: null
          orgID: orgID
          probeProperties:
            datadogProbe:
              datadogSite: datadogSite
              datadogCredentialsSecretName: datadogCredentialsSecretName
              metrics:
                comparator: null
                query: query
                timeFrame: timeFrame
              syntheticsTest:
                testType: api
                publicId: publicId
            sloProbe:
              comparator: null
              insecureSkipVerify: true
              evaluationTimeout: evaluationTimeout
              sloSourceMetadata:
                apiTokenSecret: apiTokenSecret
                scope:
                  orgIdentifier: orgIdentifier
                  accountIdentifier: accountIdentifier
                  projectIdentifier: projectIdentifier
              platformEndpoint: platformEndpoint
              evaluationWindow:
                evaluationStartTime: {}
                evaluationEndTime: {}
              sloIdentifier: sloIdentifier
            promProbe:
              comparator: null
              endpoint: endpoint
              auth: null
              queryPath: queryPath
              query: query
              tlsConfig: null
            apmProbe:
              comparator:
                criteria: criteria
                type: type
                value: value
              appDynamicsProbeInputs:
                appdMetrics:
                  metricsFullPath: metricsFullPath
                  durationInMin: {}
                connectorID: connectorID
              type: Prometheus
              splunkObservabilityProbeInputs:
                splunkObservabilityMetrics:
                  durationInMin: {}
                  query: query
                connectorID: connectorID
              prometheusProbeInputs:
                connectorID: connectorID
                query: query
                tlsConfig:
                  caCrt:
                    identifier: identifier
                  insecureSkipVerify: {}
                  clientCrt: null
                  key: null
            cmdProbe:
              comparator: null
              source: source
              command: command
            httpProbe:
              headers:
              - value: value
                key: key
              - value: value
                key: key
              method:
                post:
                  responseBody: responseBody
                  criteria: criteria
                  body: body
                  bodyPath: bodyPath
                  contentType: contentType
                  responseCode: responseCode
                get:
                  responseBody: responseBody
                  criteria: criteria
                  responseCode: responseCode
              auth:
                credentialsFile: credentialsFile
                credentials: credentials
                type: type
              url: url
              tlsConfig:
                caFile: caFile
                keyFile: keyFile
                certFile: certFile
                insecureSkipVerify: true
            dynatraceProbe:
              comparator: null
              endpoint: endpoint
              apiTokenSecretName: apiTokenSecretName
              metrics:
                entitySelector: entitySelector
                metricsSelector: metricsSelector
              timeFrame: timeFrame
            k8sProbe:
              resourceNames: resourceNames
              resource: resource
              labelSelector: labelSelector
              namespace: namespace
              fieldSelector: fieldSelector
              operation: operation
              version: version
              group: group
          revision: 1
          tags:
          - tags
          - tags
          accountID: accountID
          createdAt: 6
          isDefault: true
          isRemoved: true
          runProperties:
            stopOnFailure: true
            pollingInterval: pollingInterval
            interval: interval
            initialDelay: initialDelay
            attempt: {}
            retry: {}
            timeout: timeout
            verbosity: verbosity
          createdBy: createdBy
          identity: identity
          infrastructureType: Kubernetes
          name: name
          id: id
          projectID: projectID
          updatedAt: 5
        - template: template
          variables:
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          updatedBy: updatedBy
          hubRef: hubRef
          description: description
          type: null
          orgID: orgID
          probeProperties:
            datadogProbe:
              datadogSite: datadogSite
              datadogCredentialsSecretName: datadogCredentialsSecretName
              metrics:
                comparator: null
                query: query
                timeFrame: timeFrame
              syntheticsTest:
                testType: api
                publicId: publicId
            sloProbe:
              comparator: null
              insecureSkipVerify: true
              evaluationTimeout: evaluationTimeout
              sloSourceMetadata:
                apiTokenSecret: apiTokenSecret
                scope:
                  orgIdentifier: orgIdentifier
                  accountIdentifier: accountIdentifier
                  projectIdentifier: projectIdentifier
              platformEndpoint: platformEndpoint
              evaluationWindow:
                evaluationStartTime: {}
                evaluationEndTime: {}
              sloIdentifier: sloIdentifier
            promProbe:
              comparator: null
              endpoint: endpoint
              auth: null
              queryPath: queryPath
              query: query
              tlsConfig: null
            apmProbe:
              comparator:
                criteria: criteria
                type: type
                value: value
              appDynamicsProbeInputs:
                appdMetrics:
                  metricsFullPath: metricsFullPath
                  durationInMin: {}
                connectorID: connectorID
              type: Prometheus
              splunkObservabilityProbeInputs:
                splunkObservabilityMetrics:
                  durationInMin: {}
                  query: query
                connectorID: connectorID
              prometheusProbeInputs:
                connectorID: connectorID
                query: query
                tlsConfig:
                  caCrt:
                    identifier: identifier
                  insecureSkipVerify: {}
                  clientCrt: null
                  key: null
            cmdProbe:
              comparator: null
              source: source
              command: command
            httpProbe:
              headers:
              - value: value
                key: key
              - value: value
                key: key
              method:
                post:
                  responseBody: responseBody
                  criteria: criteria
                  body: body
                  bodyPath: bodyPath
                  contentType: contentType
                  responseCode: responseCode
                get:
                  responseBody: responseBody
                  criteria: criteria
                  responseCode: responseCode
              auth:
                credentialsFile: credentialsFile
                credentials: credentials
                type: type
              url: url
              tlsConfig:
                caFile: caFile
                keyFile: keyFile
                certFile: certFile
                insecureSkipVerify: true
            dynatraceProbe:
              comparator: null
              endpoint: endpoint
              apiTokenSecretName: apiTokenSecretName
              metrics:
                entitySelector: entitySelector
                metricsSelector: metricsSelector
              timeFrame: timeFrame
            k8sProbe:
              resourceNames: resourceNames
              resource: resource
              labelSelector: labelSelector
              namespace: namespace
              fieldSelector: fieldSelector
              operation: operation
              version: version
              group: group
          revision: 1
          tags:
          - tags
          - tags
          accountID: accountID
          createdAt: 6
          isDefault: true
          isRemoved: true
          runProperties:
            stopOnFailure: true
            pollingInterval: pollingInterval
            interval: interval
            initialDelay: initialDelay
            attempt: {}
            retry: {}
            timeout: timeout
            verbosity: verbosity
          createdBy: createdBy
          identity: identity
          infrastructureType: Kubernetes
          name: name
          id: id
          projectID: projectID
          updatedAt: 5
        correlationID: correlationID
        countDetails:
        - count: 0
          type: httpProbe
        - count: 0
          type: httpProbe
    chaosprobetemplate.ProbeTemplate:
      required:
      - name
      type: object
      properties:
        description:
          type: string
        hubRef:
          type: string
        identity:
          type: string
        infrastructureType:
          $ref: "#/components/schemas/probe.InfrastructureType"
        name:
          type: string
        probeProperties:
          $ref: "#/components/schemas/probe.ProbeTemplateProperties"
        runProperties:
          $ref: "#/components/schemas/probe.ProbeTemplateRunProperties"
        tags:
          type: array
          items:
            type: string
        type:
          $ref: "#/components/schemas/probe.ProbeType"
        variables:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
      example:
        variables:
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        runProperties:
          stopOnFailure: true
          pollingInterval: pollingInterval
          interval: interval
          initialDelay: initialDelay
          attempt: {}
          retry: {}
          timeout: timeout
          verbosity: verbosity
        identity: identity
        infrastructureType: Kubernetes
        hubRef: hubRef
        name: name
        description: description
        type: httpProbe
        probeProperties:
          datadogProbe:
            datadogSite: datadogSite
            datadogCredentialsSecretName: datadogCredentialsSecretName
            metrics:
              comparator: null
              query: query
              timeFrame: timeFrame
            syntheticsTest:
              testType: api
              publicId: publicId
          sloProbe:
            comparator: null
            insecureSkipVerify: true
            evaluationTimeout: evaluationTimeout
            sloSourceMetadata:
              apiTokenSecret: apiTokenSecret
              scope:
                orgIdentifier: orgIdentifier
                accountIdentifier: accountIdentifier
                projectIdentifier: projectIdentifier
            platformEndpoint: platformEndpoint
            evaluationWindow:
              evaluationStartTime: {}
              evaluationEndTime: {}
            sloIdentifier: sloIdentifier
          promProbe:
            comparator: null
            endpoint: endpoint
            auth: null
            queryPath: queryPath
            query: query
            tlsConfig: null
          apmProbe:
            comparator:
              criteria: criteria
              type: type
              value: value
            appDynamicsProbeInputs:
              appdMetrics:
                metricsFullPath: metricsFullPath
                durationInMin: {}
              connectorID: connectorID
            type: Prometheus
            splunkObservabilityProbeInputs:
              splunkObservabilityMetrics:
                durationInMin: {}
                query: query
              connectorID: connectorID
            prometheusProbeInputs:
              connectorID: connectorID
              query: query
              tlsConfig:
                caCrt:
                  identifier: identifier
                insecureSkipVerify: {}
                clientCrt: null
                key: null
          cmdProbe:
            comparator: null
            source: source
            command: command
          httpProbe:
            headers:
            - value: value
              key: key
            - value: value
              key: key
            method:
              post:
                responseBody: responseBody
                criteria: criteria
                body: body
                bodyPath: bodyPath
                contentType: contentType
                responseCode: responseCode
              get:
                responseBody: responseBody
                criteria: criteria
                responseCode: responseCode
            auth:
              credentialsFile: credentialsFile
              credentials: credentials
              type: type
            url: url
            tlsConfig:
              caFile: caFile
              keyFile: keyFile
              certFile: certFile
              insecureSkipVerify: true
          dynatraceProbe:
            comparator: null
            endpoint: endpoint
            apiTokenSecretName: apiTokenSecretName
            metrics:
              entitySelector: entitySelector
              metricsSelector: metricsSelector
            timeFrame: timeFrame
          k8sProbe:
            resourceNames: resourceNames
            resource: resource
            labelSelector: labelSelector
            namespace: namespace
            fieldSelector: fieldSelector
            operation: operation
            version: version
            group: group
        tags:
        - tags
        - tags
    chaosprobetemplate.ProbeTemplateCount:
      type: object
      properties:
        count:
          type: integer
        type:
          $ref: "#/components/schemas/probe.ProbeType"
      example:
        count: 0
        type: httpProbe
    chaosprobetemplate.ProbeTemplateVariables:
      type: object
      properties:
        probeProperties:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
        probeRunProperty:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
        variables:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
      example:
        probeRunProperty:
        - null
        - null
        variables:
        - null
        - null
        probeProperties:
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
    chaosresourcenotes.NoteType:
      type: string
      enum:
      - experiment-run
      - gameday-run-summary
      - gameday-run-experiment
      x-enum-varnames:
      - ExperimentRun
      - GamedayRunSummary
      - GamedayExperiment
    chaosserviceusage.InfrastructureType:
      type: string
      enum:
      - Kubernetes
      - KubernetesV2
      - Windows
      - Linux
      x-enum-varnames:
      - InfrastructureTypeKubernetes
      - InfrastructureTypeKubernetesV2
      - InfrastructureTypeWindows
      - InfrastructureTypeLinux
    chaosserviceusage.OverallServiceUsageStats:
      type: object
      properties:
        accountID:
          type: string
        licenseServiceMapping:
          $ref: "#/components/schemas/chaosserviceusage.ServiceStatsByType"
        serviceStats:
          $ref: "#/components/schemas/chaosserviceusage.ServiceStatsByType"
        totalUsage:
          type: number
      example:
        accountID: accountID
        serviceStats: null
        totalUsage: 9.301444243932576
        licenseServiceMapping:
          Others: 5.637376656633329
          Linux: 5.962133916683182
          Container Services: 6.027456183070403
          Cloud Resources: 0.8008281904610115
          Serverless: 2.3021358869347655
          Windows: 7.061401241503109
          Kubernetes: 1.4658129805029452
    chaosserviceusage.PeriodicStats:
      type: object
      properties:
        serviceStatsByType:
          $ref: "#/components/schemas/chaosserviceusage.ServiceStatsByType"
        timestamp:
          type: integer
        totalConsumption:
          type: number
      example:
        serviceStatsByType:
          Others: 5.637376656633329
          Linux: 5.962133916683182
          Container Services: 6.027456183070403
          Cloud Resources: 0.8008281904610115
          Serverless: 2.3021358869347655
          Windows: 7.061401241503109
          Kubernetes: 1.4658129805029452
        totalConsumption: 6.027456183070403
        timestamp: 0
    chaosserviceusage.ServiceData:
      type: object
      properties:
        experimentRuns:
          type: integer
        experiments:
          type: integer
        faultsRan:
          type: integer
        infraStructure:
          type: string
        infraType:
          $ref: "#/components/schemas/chaosserviceusage.InfrastructureType"
        licenseUtilisation:
          type: number
        namespace:
          type: string
        orgID:
          type: string
        projectID:
          type: string
        resource:
          type: string
        service:
          type: string
        serviceID:
          type: string
        subType:
          type: string
        type:
          $ref: "#/components/schemas/chaosserviceusage.ServiceType"
      example:
        infraStructure: infraStructure
        resource: resource
        experiments: 6
        licenseUtilisation: 5.962133916683182
        type: Kubernetes
        orgID: orgID
        service: service
        namespace: namespace
        subType: subType
        faultsRan: 1
        serviceID: serviceID
        experimentRuns: 0
        projectID: projectID
        infraType: Kubernetes
    chaosserviceusage.ServiceDataResponse:
      type: object
      properties:
        serviceData:
          type: array
          items:
            $ref: "#/components/schemas/chaosserviceusage.ServiceData"
        serviceTypes:
          type: array
          items:
            type: string
        total:
          type: integer
      example:
        total: 5
        serviceData:
        - infraStructure: infraStructure
          resource: resource
          experiments: 6
          licenseUtilisation: 5.962133916683182
          type: Kubernetes
          orgID: orgID
          service: service
          namespace: namespace
          subType: subType
          faultsRan: 1
          serviceID: serviceID
          experimentRuns: 0
          projectID: projectID
          infraType: Kubernetes
        - infraStructure: infraStructure
          resource: resource
          experiments: 6
          licenseUtilisation: 5.962133916683182
          type: Kubernetes
          orgID: orgID
          service: service
          namespace: namespace
          subType: subType
          faultsRan: 1
          serviceID: serviceID
          experimentRuns: 0
          projectID: projectID
          infraType: Kubernetes
        serviceTypes:
        - serviceTypes
        - serviceTypes
    chaosserviceusage.ServiceStatsByType:
      type: object
      properties:
        Cloud Resources:
          type: number
        Container Services:
          type: number
        Kubernetes:
          type: number
        Linux:
          type: number
        Others:
          type: number
        Serverless:
          type: number
        Windows:
          type: number
      example:
        Others: 5.637376656633329
        Linux: 5.962133916683182
        Container Services: 6.027456183070403
        Cloud Resources: 0.8008281904610115
        Serverless: 2.3021358869347655
        Windows: 7.061401241503109
        Kubernetes: 1.4658129805029452
    chaosserviceusage.ServiceType:
      type: string
      enum:
      - Kubernetes
      - Linux
      - Windows
      - Serverless
      - ContainerServices
      - CloudResources
      - Others
      x-enum-varnames:
      - ServiceTypeKubernetes
      - ServiceTypeLinux
      - ServiceTypeWindows
      - ServiceTypeServerless
      - ServiceTypeContainerServices
      - ServiceTypeCloudResources
      - ServiceTypeOthers
    chaosserviceusage.UsageStats:
      type: object
      properties:
        accountID:
          type: string
        periodicStats:
          type: array
          items:
            $ref: "#/components/schemas/chaosserviceusage.PeriodicStats"
      example:
        accountID: accountID
        periodicStats:
        - serviceStatsByType:
            Others: 5.637376656633329
            Linux: 5.962133916683182
            Container Services: 6.027456183070403
            Cloud Resources: 0.8008281904610115
            Serverless: 2.3021358869347655
            Windows: 7.061401241503109
            Kubernetes: 1.4658129805029452
          totalConsumption: 6.027456183070403
          timestamp: 0
        - serviceStatsByType:
            Others: 5.637376656633329
            Linux: 5.962133916683182
            Container Services: 6.027456183070403
            Cloud Resources: 0.8008281904610115
            Serverless: 2.3021358869347655
            Windows: 7.061401241503109
            Kubernetes: 1.4658129805029452
          totalConsumption: 6.027456183070403
          timestamp: 0
    common_types.ExperimentRunStats:
      type: object
      properties:
        failed:
          type: integer
        success:
          type: integer
        time:
          type: integer
      example:
        success: 6
        failed: 0
        time: 1
    common_types.ExperimentRunsData:
      type: object
      properties:
        experimentRunStats:
          type: array
          items:
            $ref: "#/components/schemas/common_types.ExperimentRunStats"
        totalExperimentChange:
          type: integer
        totalExperimentRuns:
          type: integer
      example:
        totalExperimentChange: 5
        experimentRunStats:
        - success: 6
          failed: 0
          time: 1
        - success: 6
          failed: 0
          time: 1
        totalExperimentRuns: 5
    database.AgentConfiguration:
      required:
      - data
      type: object
      properties:
        collectorImage:
          type: string
        data:
          $ref: "#/components/schemas/database.DataCollectionConfiguration"
        imagePullSecrets:
          type: array
          items:
            type: string
        kubernetes:
          $ref: "#/components/schemas/database.KubernetesAgentConfiguration"
        logWatcherImage:
          type: string
        mtls:
          $ref: "#/components/schemas/database.MTLSConfiguration"
        proxy:
          $ref: "#/components/schemas/database.ProxyConfiguration"
        skipSecureVerify:
          type: boolean
      example:
        collectorImage: collectorImage
        kubernetes:
          runAsUser: 7
          imagePullPolicy: null
          tolerations:
          - null
          - null
          namespace: namespace
          resources:
            requests: null
            limits:
              memory: memory
              cpu: cpu
          serviceAccount: serviceAccount
          namespaced: true
          runAsGroup: 4
          nodeSelector:
            key: nodeSelector
        proxy:
          httpProxy: httpProxy
          httpsProxy: httpsProxy
          noProxy: noProxy
          url: url
        data:
          cron:
            expression: expression
          enableOrphanedPod: true
          enableNodeAgent: true
          collectionWindowInMin: 2
          namespaceSelector: namespaceSelector
          observedNamespaces:
          - observedNamespaces
          - observedNamespaces
          enableBatchResources: true
          nodeAgentSelector: nodeAgentSelector
          blacklistedNamespaces:
          - blacklistedNamespaces
          - blacklistedNamespaces
        logWatcherImage: logWatcherImage
        imagePullSecrets:
        - imagePullSecrets
        - imagePullSecrets
        skipSecureVerify: true
        mtls:
          secretName: secretName
          certPath: certPath
          keyPath: keyPath
          url: url
    database.Connection:
      type: object
      properties:
        from:
          $ref: "#/components/schemas/database.NetworkMapEntity"
        manual:
          type: boolean
        params:
          type: object
          additionalProperties:
            type: string
        port:
          type: string
        to:
          $ref: "#/components/schemas/database.NetworkMapEntity"
        type:
          $ref: "#/components/schemas/database.ConnectionType"
      example:
        port: port
        from:
          serviceIdentity:
            identifier: identifier
            organizationIdentifier: organizationIdentifier
            accountIdentifier: accountIdentifier
            projectIdentifier: projectIdentifier
          kubernetes:
            hasWorkload: true
            kind: kind
            namespace: namespace
          removed: true
          kind: K8SCustomService
          name: name
          id: id
        to: null
        manual: true
        params:
          key: params
        type: TCP
    database.ConnectionType:
      type: string
      enum:
      - TCP
      x-enum-varnames:
      - ConnectionTypeTCP
    database.CronConfig:
      type: object
      properties:
        expression:
          type: string
      example:
        expression: expression
    database.DataCollectionConfiguration:
      type: object
      properties:
        blacklistedNamespaces:
          type: array
          items:
            type: string
        collectionWindowInMin:
          type: integer
        cron:
          $ref: "#/components/schemas/database.CronConfig"
        enableBatchResources:
          type: boolean
        enableNodeAgent:
          type: boolean
        enableOrphanedPod:
          type: boolean
        namespaceSelector:
          type: string
        nodeAgentSelector:
          type: string
        observedNamespaces:
          type: array
          items:
            type: string
      example:
        cron:
          expression: expression
        enableOrphanedPod: true
        enableNodeAgent: true
        collectionWindowInMin: 2
        namespaceSelector: namespaceSelector
        observedNamespaces:
        - observedNamespaces
        - observedNamespaces
        enableBatchResources: true
        nodeAgentSelector: nodeAgentSelector
        blacklistedNamespaces:
        - blacklistedNamespaces
        - blacklistedNamespaces
    database.DiscoveredKubernetesService:
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
        clusterIP:
          type: string
        clusterIPs:
          type: array
          items:
            type: string
        externalIPs:
          type: array
          items:
            type: string
        externalName:
          type: string
        identity:
          $ref: "#/components/schemas/v1.ObjectReference"
        labels:
          type: object
          additionalProperties:
            type: string
        loadBalancerIP:
          type: string
        ports:
          type: array
          items:
            $ref: "#/components/schemas/v1.ServicePort"
        type:
          $ref: "#/components/schemas/v1.ServiceType"
      example:
        clusterIPs:
        - clusterIPs
        - clusterIPs
        externalIPs:
        - externalIPs
        - externalIPs
        loadBalancerIP: loadBalancerIP
        identity:
          uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
        externalName: externalName
        annotations:
          key: annotations
        ports:
        - protocol: ""
          port: 7
          appProtocol: appProtocol
          name: name
          nodePort: 2
          targetPort: ""
        - protocol: ""
          port: 7
          appProtocol: appProtocol
          name: name
          nodePort: 2
          targetPort: ""
        type: ClusterIP
        clusterIP: clusterIP
        labels:
          key: labels
    database.DiscoveredKubernetesWorkload:
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
        identity:
          $ref: "#/components/schemas/v1.ObjectReference"
        labels:
          type: object
          additionalProperties:
            type: string
        podAnnotations:
          type: object
          additionalProperties:
            type: string
        podLabels:
          type: object
          additionalProperties:
            type: string
        replicas:
          type: array
          items:
            $ref: "#/components/schemas/database.DiscoveredPod"
      example:
        podLabels:
          key: podLabels
        identity: null
        replicas:
        - phase: Pending
          identity: null
        - phase: Pending
          identity: null
        annotations:
          key: annotations
        podAnnotations:
          key: podAnnotations
        labels:
          key: labels
    database.DiscoveredPod:
      type: object
      properties:
        identity:
          $ref: "#/components/schemas/v1.ObjectReference"
        phase:
          $ref: "#/components/schemas/v1.PodPhase"
      example:
        phase: Pending
        identity: null
    database.DiscoveredServiceCollection:
      required:
      - accountIdentifier
      - agentID
      - agentIdentity
      - environmentIdentifier
      - id
      - name
      - spec
      - type
      - version
      type: object
      properties:
        accountIdentifier:
          type: string
        agentID:
          type: string
        agentIdentity:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        environmentIdentifier:
          type: string
        id:
          type: string
        name:
          type: string
        organizationIdentifier:
          type: string
        projectIdentifier:
          type: string
        removed:
          type: boolean
        removedAt:
          type: string
        spec:
          $ref: "#/components/schemas/database.DiscoveredServiceSpec"
        type:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: string
        version:
          type: string
      example:
        agentID: agentID
        environmentIdentifier: environmentIdentifier
        updatedBy: updatedBy
        accountIdentifier: accountIdentifier
        type: type
        version: version
        agentIdentity: agentIdentity
        spec:
          kubernetes:
            uid: uid
            kind: kind
            service:
              clusterIPs:
              - clusterIPs
              - clusterIPs
              externalIPs:
              - externalIPs
              - externalIPs
              loadBalancerIP: loadBalancerIP
              identity:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              externalName: externalName
              annotations:
                key: annotations
              ports:
              - protocol: ""
                port: 7
                appProtocol: appProtocol
                name: name
                nodePort: 2
                targetPort: ""
              - protocol: ""
                port: 7
                appProtocol: appProtocol
                name: name
                nodePort: 2
                targetPort: ""
              type: ClusterIP
              clusterIP: clusterIP
              labels:
                key: labels
            name: name
            namespace: namespace
            workloads:
            - podLabels:
                key: podLabels
              identity: null
              replicas:
              - phase: Pending
                identity: null
              - phase: Pending
                identity: null
              annotations:
                key: annotations
              podAnnotations:
                key: podAnnotations
              labels:
                key: labels
            - podLabels:
                key: podLabels
              identity: null
              replicas:
              - phase: Pending
                identity: null
              - phase: Pending
                identity: null
              annotations:
                key: annotations
              podAnnotations:
                key: podAnnotations
              labels:
                key: labels
          fqdn:
          - fqdn
          - fqdn
          port:
          - port
          - port
          ip:
          - ip
          - ip
          harnessServiceIdentity:
            identifier: identifier
            organizationIdentifier: organizationIdentifier
            accountIdentifier: accountIdentifier
            projectIdentifier: projectIdentifier
          harnessEnvironmentIdentity:
            identifier: identifier
            infraIdentifier: infraIdentifier
            organizationIdentifier: organizationIdentifier
            accountIdentifier: accountIdentifier
            projectIdentifier: projectIdentifier
        createdAt: createdAt
        removed: true
        createdBy: createdBy
        organizationIdentifier: organizationIdentifier
        name: name
        id: id
        projectIdentifier: projectIdentifier
        removedAt: removedAt
        updatedAt: updatedAt
    database.DiscoveredServiceKubernetesSpec:
      type: object
      properties:
        kind:
          type: string
        name:
          type: string
        namespace:
          type: string
        service:
          $ref: "#/components/schemas/database.DiscoveredKubernetesService"
        uid:
          type: string
        workloads:
          type: array
          items:
            $ref: "#/components/schemas/database.DiscoveredKubernetesWorkload"
      example:
        uid: uid
        kind: kind
        service:
          clusterIPs:
          - clusterIPs
          - clusterIPs
          externalIPs:
          - externalIPs
          - externalIPs
          loadBalancerIP: loadBalancerIP
          identity:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          externalName: externalName
          annotations:
            key: annotations
          ports:
          - protocol: ""
            port: 7
            appProtocol: appProtocol
            name: name
            nodePort: 2
            targetPort: ""
          - protocol: ""
            port: 7
            appProtocol: appProtocol
            name: name
            nodePort: 2
            targetPort: ""
          type: ClusterIP
          clusterIP: clusterIP
          labels:
            key: labels
        name: name
        namespace: namespace
        workloads:
        - podLabels:
            key: podLabels
          identity: null
          replicas:
          - phase: Pending
            identity: null
          - phase: Pending
            identity: null
          annotations:
            key: annotations
          podAnnotations:
            key: podAnnotations
          labels:
            key: labels
        - podLabels:
            key: podLabels
          identity: null
          replicas:
          - phase: Pending
            identity: null
          - phase: Pending
            identity: null
          annotations:
            key: annotations
          podAnnotations:
            key: podAnnotations
          labels:
            key: labels
    database.DiscoveredServiceSpec:
      type: object
      properties:
        fqdn:
          type: array
          items:
            type: string
        harnessEnvironmentIdentity:
          $ref: "#/components/schemas/database.EnvironmentIdentity"
        harnessServiceIdentity:
          $ref: "#/components/schemas/database.ServiceIdentity"
        ip:
          type: array
          items:
            type: string
        kubernetes:
          $ref: "#/components/schemas/database.DiscoveredServiceKubernetesSpec"
        port:
          type: array
          items:
            type: string
      example:
        kubernetes:
          uid: uid
          kind: kind
          service:
            clusterIPs:
            - clusterIPs
            - clusterIPs
            externalIPs:
            - externalIPs
            - externalIPs
            loadBalancerIP: loadBalancerIP
            identity:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            externalName: externalName
            annotations:
              key: annotations
            ports:
            - protocol: ""
              port: 7
              appProtocol: appProtocol
              name: name
              nodePort: 2
              targetPort: ""
            - protocol: ""
              port: 7
              appProtocol: appProtocol
              name: name
              nodePort: 2
              targetPort: ""
            type: ClusterIP
            clusterIP: clusterIP
            labels:
              key: labels
          name: name
          namespace: namespace
          workloads:
          - podLabels:
              key: podLabels
            identity: null
            replicas:
            - phase: Pending
              identity: null
            - phase: Pending
              identity: null
            annotations:
              key: annotations
            podAnnotations:
              key: podAnnotations
            labels:
              key: labels
          - podLabels:
              key: podLabels
            identity: null
            replicas:
            - phase: Pending
              identity: null
            - phase: Pending
              identity: null
            annotations:
              key: annotations
            podAnnotations:
              key: podAnnotations
            labels:
              key: labels
        fqdn:
        - fqdn
        - fqdn
        port:
        - port
        - port
        ip:
        - ip
        - ip
        harnessServiceIdentity:
          identifier: identifier
          organizationIdentifier: organizationIdentifier
          accountIdentifier: accountIdentifier
          projectIdentifier: projectIdentifier
        harnessEnvironmentIdentity:
          identifier: identifier
          infraIdentifier: infraIdentifier
          organizationIdentifier: organizationIdentifier
          accountIdentifier: accountIdentifier
          projectIdentifier: projectIdentifier
    database.EnvironmentIdentity:
      type: object
      properties:
        accountIdentifier:
          type: string
        identifier:
          type: string
        infraIdentifier:
          type: string
        organizationIdentifier:
          type: string
        projectIdentifier:
          type: string
      example:
        identifier: identifier
        infraIdentifier: infraIdentifier
        organizationIdentifier: organizationIdentifier
        accountIdentifier: accountIdentifier
        projectIdentifier: projectIdentifier
    database.KubernetesAgentConfiguration:
      type: object
      properties:
        imagePullPolicy:
          $ref: "#/components/schemas/v1.PullPolicy"
        namespace:
          type: string
        namespaced:
          type: boolean
        nodeSelector:
          type: object
          additionalProperties:
            type: string
        resources:
          $ref: "#/components/schemas/database.ResourceRequirements"
        runAsGroup:
          type: integer
        runAsUser:
          type: integer
        serviceAccount:
          type: string
        tolerations:
          type: array
          items:
            $ref: "#/components/schemas/v1.Toleration"
      example:
        runAsUser: 7
        imagePullPolicy: null
        tolerations:
        - null
        - null
        namespace: namespace
        resources:
          requests: null
          limits:
            memory: memory
            cpu: cpu
        serviceAccount: serviceAccount
        namespaced: true
        runAsGroup: 4
        nodeSelector:
          key: nodeSelector
    database.MTLSConfiguration:
      type: object
      properties:
        certPath:
          type: string
        keyPath:
          type: string
        secretName:
          type: string
        url:
          type: string
      example:
        secretName: secretName
        certPath: certPath
        keyPath: keyPath
        url: url
    database.NetworkMapEntity:
      required:
      - id
      - kind
      - name
      type: object
      properties:
        id:
          type: string
        kind:
          $ref: "#/components/schemas/database.NetworkMapResourceKind"
        kubernetes:
          $ref: "#/components/schemas/database.NetworkMapEntityKubernetesInfo"
        name:
          type: string
        removed:
          type: boolean
        serviceIdentity:
          $ref: "#/components/schemas/database.ServiceIdentity"
      example:
        serviceIdentity:
          identifier: identifier
          organizationIdentifier: organizationIdentifier
          accountIdentifier: accountIdentifier
          projectIdentifier: projectIdentifier
        kubernetes:
          hasWorkload: true
          kind: kind
          namespace: namespace
        removed: true
        kind: K8SCustomService
        name: name
        id: id
    database.NetworkMapEntityKubernetesInfo:
      type: object
      properties:
        hasWorkload:
          type: boolean
        kind:
          type: string
        namespace:
          type: string
      example:
        hasWorkload: true
        kind: kind
        namespace: namespace
    database.NetworkMapResourceKind:
      type: string
      enum:
      - K8SCustomService
      - discoveredservice
      x-enum-varnames:
      - NetworkMapResourceKindK8SCustomService
      - NetworkMapResourceKindDiscoveredService
    database.ProxyConfiguration:
      type: object
      properties:
        httpProxy:
          type: string
        httpsProxy:
          type: string
        noProxy:
          type: string
          description: |-
            SecretName string `bson:"secretName" json:"secretName"`
            CAPath     string `bson:"caPath" json:"caPath"`
        url:
          type: string
      example:
        httpProxy: httpProxy
        httpsProxy: httpsProxy
        noProxy: noProxy
        url: url
    database.ResourceList:
      type: object
      properties:
        cpu:
          type: string
        memory:
          type: string
      example:
        memory: memory
        cpu: cpu
    database.ResourceRequirements:
      type: object
      properties:
        limits:
          $ref: "#/components/schemas/database.ResourceList"
        requests:
          $ref: "#/components/schemas/database.ResourceList"
      example:
        requests: null
        limits:
          memory: memory
          cpu: cpu
    database.ServiceCollection:
      required:
      - accountIdentifier
      - agentID
      - apiVersion
      - environmentIdentifier
      - id
      - kind
      - name
      - namespace
      - resourceVersion
      - spec
      - uid
      type: object
      properties:
        accountIdentifier:
          type: string
        agentID:
          type: string
        annotations:
          type: object
          additionalProperties:
            type: string
        apiVersion:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        creationTimestamp:
          type: string
        deletionTimestamp:
          type: string
        environmentIdentifier:
          type: string
        id:
          type: string
        kind:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        name:
          type: string
        namespace:
          type: string
        organizationIdentifier:
          type: string
        ownerReference:
          type: array
          items:
            $ref: "#/components/schemas/v1.OwnerReference"
        projectIdentifier:
          type: string
        removed:
          type: boolean
        removedAt:
          type: string
        resourceVersion:
          type: string
        spec:
          $ref: "#/components/schemas/v1.ServiceSpec"
        status:
          $ref: "#/components/schemas/v1.ServiceStatus"
        uid:
          type: string
        updatedAt:
          type: string
        updatedBy:
          type: string
      example:
        environmentIdentifier: environmentIdentifier
        annotations:
          key: annotations
        accountIdentifier: accountIdentifier
        spec:
          clusterIPs:
          - clusterIPs
          - clusterIPs
          healthCheckNodePort: 0
          ipFamilyPolicy: ""
          externalIPs:
          - externalIPs
          - externalIPs
          sessionAffinity: ""
          allocateLoadBalancerNodePorts: true
          ports:
          - protocol: ""
            port: 7
            appProtocol: appProtocol
            name: name
            nodePort: 2
            targetPort: ""
          - protocol: ""
            port: 7
            appProtocol: appProtocol
            name: name
            nodePort: 2
            targetPort: ""
          type: ""
          loadBalancerClass: loadBalancerClass
          sessionAffinityConfig: ""
          ipFamilies:
          - IPv4
          - IPv4
          loadBalancerIP: loadBalancerIP
          externalName: externalName
          loadBalancerSourceRanges:
          - loadBalancerSourceRanges
          - loadBalancerSourceRanges
          externalTrafficPolicy: ""
          selector:
            key: selector
          publishNotReadyAddresses: true
          topologyKeys:
          - topologyKeys
          - topologyKeys
          internalTrafficPolicy: ""
          clusterIP: clusterIP
        deletionTimestamp: deletionTimestamp
        createdAt: createdAt
        uid: uid
        apiVersion: apiVersion
        organizationIdentifier: organizationIdentifier
        creationTimestamp: creationTimestamp
        id: id
        removedAt: removedAt
        updatedAt: updatedAt
        agentID: agentID
        updatedBy: updatedBy
        kind: kind
        resourceVersion: resourceVersion
        labels:
          key: labels
        removed: true
        createdBy: createdBy
        name: name
        namespace: namespace
        ownerReference:
        - uid: uid
          controller: true
          apiVersion: apiVersion
          kind: kind
          name: name
          blockOwnerDeletion: true
        - uid: uid
          controller: true
          apiVersion: apiVersion
          kind: kind
          name: name
          blockOwnerDeletion: true
        projectIdentifier: projectIdentifier
        status:
          loadBalancer: ""
          conditions:
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            observedGeneration: 6
            status: ""
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            observedGeneration: 6
            status: ""
    database.ServiceIdentity:
      type: object
      properties:
        accountIdentifier:
          type: string
        identifier:
          type: string
        organizationIdentifier:
          type: string
        projectIdentifier:
          type: string
      example:
        identifier: identifier
        organizationIdentifier: organizationIdentifier
        accountIdentifier: accountIdentifier
        projectIdentifier: projectIdentifier
    execution.ActionData:
      type: object
      properties:
        name:
          type: string
      example:
        name: name
    execution.ChaosData:
      type: object
      properties:
        actionData:
          $ref: "#/components/schemas/execution.ActionData"
        faultData:
          $ref: "#/components/schemas/execution.FaultData"
        probeData:
          $ref: "#/components/schemas/execution.ProbeData"
      example:
        faultData:
          helperPodDetails:
          - name: name
            logStreamID: logStreamID
          - name: name
            logStreamID: logStreamID
          targetChaosStatus:
          - chaosStatus: chaosStatus
            kind: kind
            name: name
          - chaosStatus: chaosStatus
            kind: kind
            name: name
          name: name
          namespace: namespace
          targets:
          - kind: kind
            name: name
            namespace: namespace
            subType: subType
            ID: ID
            type: type
          - kind: kind
            name: name
            namespace: namespace
            subType: subType
            ID: ID
            type: type
        actionData:
          name: name
        probeData:
          weightage: 5
          probeType: probeType
          name: name
          description: description
          iterations:
          - commandProbe:
              output:
              - 0
              - 0
            duration: 6
            phase: phase
            promProbe:
              metrics: metrics
            httpProbe: ""
            timestamp: 1
          - commandProbe:
              output:
              - 0
              - 0
            duration: 6
            phase: phase
            promProbe:
              metrics: metrics
            httpProbe: ""
            timestamp: 1
    execution.ChaosExecutionNode:
      type: object
      properties:
        chaosData:
          $ref: "#/components/schemas/execution.ChaosData"
        errorData:
          $ref: "#/components/schemas/execution.ErrorData"
        estimatedTime:
          type: integer
        experimentID:
          type: string
        experimentRunID:
          type: string
        finishedAt:
          type: integer
        infraType:
          $ref: "#/components/schemas/execution.InfraType"
        isRemoved:
          type: boolean
        lastUpdatedAt:
          type: integer
        spec:
          type: string
        startedAt:
          type: integer
        status:
          $ref: "#/components/schemas/execution.ChaosStepStatus"
        stepName:
          type: string
        stepType:
          $ref: "#/components/schemas/execution.ChaosStepType"
        streamID:
          type: string
      example:
        estimatedTime: 5
        stepType: FAULT
        streamID: streamID
        lastUpdatedAt: 7
        chaosData:
          faultData:
            helperPodDetails:
            - name: name
              logStreamID: logStreamID
            - name: name
              logStreamID: logStreamID
            targetChaosStatus:
            - chaosStatus: chaosStatus
              kind: kind
              name: name
            - chaosStatus: chaosStatus
              kind: kind
              name: name
            name: name
            namespace: namespace
            targets:
            - kind: kind
              name: name
              namespace: namespace
              subType: subType
              ID: ID
              type: type
            - kind: kind
              name: name
              namespace: namespace
              subType: subType
              ID: ID
              type: type
          actionData:
            name: name
          probeData:
            weightage: 5
            probeType: probeType
            name: name
            description: description
            iterations:
            - commandProbe:
                output:
                - 0
                - 0
              duration: 6
              phase: phase
              promProbe:
                metrics: metrics
              httpProbe: ""
              timestamp: 1
            - commandProbe:
                output:
                - 0
                - 0
              duration: 6
              phase: phase
              promProbe:
                metrics: metrics
              httpProbe: ""
              timestamp: 1
        startedAt: 9
        errorData:
          code: code
          message: message
        spec: spec
        finishedAt: 2
        experimentRunID: experimentRunID
        isRemoved: true
        stepName: stepName
        experimentID: experimentID
        infraType: Kubernetes
        status: ERROR
    execution.ChaosStepStatus:
      type: string
      enum:
      - ERROR
      - COMPLETED_WITH_PROBE_FAILURE
      - PENDING
      - RUNNING
      - STOPPED
      - COMPLETED
      - FAILED
      - PASSED
      - SKIPPED
      x-enum-varnames:
      - Error
      - CompletedWithProbeFailure
      - Pending
      - Running
      - Stopped
      - Completed
      - Failed
      - Passed
      - Skipped
    execution.ChaosStepType:
      type: string
      enum:
      - FAULT
      - PROBE
      - ACTION
      - EXPERIMENT
      x-enum-varnames:
      - Fault
      - Probe
      - Action
      - Experiment
    execution.CommandProbe:
      type: object
      properties:
        output:
          type: array
          items:
            type: integer
      example:
        output:
        - 0
        - 0
    execution.ErrorData:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      example:
        code: code
        message: message
    execution.FaultData:
      type: object
      properties:
        helperPodDetails:
          type: array
          items:
            $ref: "#/components/schemas/execution.HelperPodDetails"
        name:
          type: string
        namespace:
          type: string
        targetChaosStatus:
          type: array
          items:
            $ref: "#/components/schemas/v1alpha1.TargetDetails"
        targets:
          type: array
          items:
            $ref: "#/components/schemas/v1alpha1.Targets"
      example:
        helperPodDetails:
        - name: name
          logStreamID: logStreamID
        - name: name
          logStreamID: logStreamID
        targetChaosStatus:
        - chaosStatus: chaosStatus
          kind: kind
          name: name
        - chaosStatus: chaosStatus
          kind: kind
          name: name
        name: name
        namespace: namespace
        targets:
        - kind: kind
          name: name
          namespace: namespace
          subType: subType
          ID: ID
          type: type
        - kind: kind
          name: name
          namespace: namespace
          subType: subType
          ID: ID
          type: type
    execution.HTTPProbe:
      type: object
      properties:
        responseBody:
          type: array
          items:
            type: integer
        responseTime:
          type: integer
        statusCode:
          type: integer
    execution.HelperPodDetails:
      type: object
      properties:
        logStreamID:
          type: string
        name:
          type: string
      example:
        name: name
        logStreamID: logStreamID
    execution.InfraType:
      type: string
      enum:
      - Kubernetes
      - Windows
      - Linux
      - CloudFoundry
      - Container
      x-enum-varnames:
      - Kubernetes
      - Windows
      - Linux
      - CloudFoundry
      - Container
    execution.ProbeData:
      type: object
      properties:
        description:
          type: string
        iterations:
          type: array
          items:
            $ref: "#/components/schemas/execution.ProbeIterations"
        name:
          type: string
        probeType:
          type: string
        weightage:
          type: integer
      example:
        weightage: 5
        probeType: probeType
        name: name
        description: description
        iterations:
        - commandProbe:
            output:
            - 0
            - 0
          duration: 6
          phase: phase
          promProbe:
            metrics: metrics
          httpProbe: ""
          timestamp: 1
        - commandProbe:
            output:
            - 0
            - 0
          duration: 6
          phase: phase
          promProbe:
            metrics: metrics
          httpProbe: ""
          timestamp: 1
    execution.ProbeIterations:
      type: object
      properties:
        commandProbe:
          $ref: "#/components/schemas/execution.CommandProbe"
        duration:
          type: integer
        httpProbe:
          type: object
          description: "TODO: Add other probe result spec"
          allOf:
          - $ref: "#/components/schemas/execution.HTTPProbe"
        phase:
          type: string
        promProbe:
          $ref: "#/components/schemas/execution.PromProbe"
        timestamp:
          type: integer
      example:
        commandProbe:
          output:
          - 0
          - 0
        duration: 6
        phase: phase
        promProbe:
          metrics: metrics
        httpProbe: ""
        timestamp: 1
    execution.PromProbe:
      type: object
      properties:
        metrics:
          type: string
      example:
        metrics: metrics
    experiment.ActionRef:
      type: object
      properties:
        args:
          type: array
          description: Args of the action
          items:
            type: string
        continueOnCompletion:
          type: boolean
          description: ContinueOnCompletion to continue on completion
        env:
          type: array
          description: ENV of the action
          items:
            $ref: "#/components/schemas/v1.EnvVar"
        hubRef:
          type: string
          description: HubRef of the fault reference
        identity:
          type: string
          description: Identity of the action reference
        infraId:
          type: string
          description: InfraID contains the infrastructure id
        name:
          type: string
          description: Name of the action reference
        revision:
          type: integer
          description: Revision of the fault reference
        values:
          type: array
          description: Variables to store the variables
          items:
            $ref: "#/components/schemas/template.VariableMinimum"
      example:
        args:
        - args
        - args
        identity: identity
        values:
        - name: name
          value: {}
        - name: name
          value: {}
        hubRef: hubRef
        name: name
        env:
        - name: name
          value: value
          valueFrom: ""
        - name: name
          value: value
          valueFrom: ""
        continueOnCompletion: true
        infraId: infraId
        revision: 0
    experiment.Application:
      type: object
      properties:
        function:
          type: string
        name:
          type: string
    experiment.ChaosInputs:
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
        args:
          type: array
          items:
            type: string
        command:
          type: array
          items:
            type: string
        components:
          $ref: "#/components/schemas/experiment.ExperimentComponents"
        defaultHealthCheck:
          type: boolean
        env:
          type: array
          items:
            $ref: "#/components/schemas/v1.EnvVar"
        fault:
          type: string
        image:
          type: string
        imagePullPolicy:
          $ref: "#/components/schemas/v1.PullPolicy"
        labels:
          type: object
          additionalProperties:
            type: string
        probes:
          type: array
          items:
            $ref: "#/components/schemas/github_com_harness_hce-saas_hce-sdk_common_probe_v1.Probe"
    experiment.ConfigMap:
      type: object
      properties:
        defaultMode:
          type: integer
        mountPath:
          type: string
        name:
          type: string
    experiment.Definition:
      type: object
      properties:
        chaos:
          type: object
          description: Chaos to store the chaos inputs
          allOf:
          - $ref: "#/components/schemas/experiment.ChaosInputs"
        targets:
          type: object
          description: Type of the fault
          allOf:
          - $ref: "#/components/schemas/experiment.Targets"
      example:
        chaos: ""
        targets: ""
    experiment.ExperimentComponents:
      type: object
      properties:
        configMaps:
          type: array
          items:
            $ref: "#/components/schemas/experiment.ConfigMap"
        helper:
          $ref: "#/components/schemas/experiment.HelperConfig"
        hostFileVolumes:
          type: array
          items:
            $ref: "#/components/schemas/experiment.HostFile"
        hostPID:
          type: boolean
        imagePullSecrets:
          type: array
          items:
            $ref: "#/components/schemas/v1.LocalObjectReference"
        nodeSelector:
          type: object
          additionalProperties:
            type: string
        projectedVolumes:
          type: array
          items:
            $ref: "#/components/schemas/experiment.ProjectedVolumes"
        resources:
          $ref: "#/components/schemas/v1.ResourceRequirements"
        secrets:
          type: array
          items:
            $ref: "#/components/schemas/experiment.Secret"
        securityContext:
          $ref: "#/components/schemas/experiment.SecurityContext"
        sidecar:
          type: array
          items:
            $ref: "#/components/schemas/experiment.Sidecar"
        statusCheckTimeouts:
          $ref: "#/components/schemas/experiment.StatusCheckTimeout"
        terminationGracePeriodSeconds:
          type: integer
        tolerations:
          type: array
          items:
            $ref: "#/components/schemas/v1.Toleration"
    experiment.FaultRef:
      type: object
      properties:
        hubRef:
          type: string
          description: HubRef of the fault reference
        identity:
          type: string
          description: Identity of the fault reference
        infraId:
          type: string
          description: InfraID contains the infrastructure id
        name:
          type: string
          description: Name of the fault reference
        revision:
          type: integer
          description: Revision of the fault reference
        values:
          type: array
          description: Variables to store the variables
          items:
            $ref: "#/components/schemas/template.VariableMinimum"
      example:
        identity: identity
        values:
        - null
        - null
        hubRef: hubRef
        name: name
        infraId: infraId
        revision: 6
    experiment.HelperConfig:
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
        args:
          type: array
          items:
            type: string
        command:
          type: array
          items:
            type: string
        configMaps:
          type: array
          items:
            $ref: "#/components/schemas/experiment.ConfigMap"
        env:
          type: array
          items:
            $ref: "#/components/schemas/v1.EnvVar"
        hostFileVolumes:
          type: array
          items:
            $ref: "#/components/schemas/experiment.HostFile"
        hostIPC:
          type: boolean
        hostNetwork:
          type: boolean
        hostPID:
          type: boolean
        image:
          type: string
        imagePullPolicy:
          $ref: "#/components/schemas/v1.PullPolicy"
        imagePullSecrets:
          type: array
          items:
            $ref: "#/components/schemas/v1.LocalObjectReference"
        labels:
          type: object
          additionalProperties:
            type: string
        nodeSelector:
          type: object
          additionalProperties:
            type: string
        resources:
          $ref: "#/components/schemas/v1.ResourceRequirements"
        secrets:
          type: array
          items:
            $ref: "#/components/schemas/experiment.Secret"
        securityContext:
          $ref: "#/components/schemas/experiment.SecurityContext"
        tolerations:
          type: array
          items:
            $ref: "#/components/schemas/v1.Toleration"
    experiment.HostFile:
      type: object
      properties:
        mountPath:
          type: string
        name:
          type: string
        nodePath:
          type: string
        type:
          $ref: "#/components/schemas/v1.HostPathType"
    experiment.ProbeActions:
      type: object
      properties:
        args:
          type: array
          description: Args of the action
          items:
            type: string
        condition:
          type: string
          description: Condition to check the condition
        env:
          type: array
          description: ENV of the action
          items:
            $ref: "#/components/schemas/v1.EnvVar"
        identity:
          type: string
          description: Identity of the action
      example:
        args:
        - args
        - args
        condition: condition
        identity: identity
        env:
        - null
        - null
    experiment.ProbeConditions:
      type: object
      properties:
        executeUpon:
          type: string
          description: ExecuteUpon to execute the probe on the condition
      example:
        executeUpon: executeUpon
    experiment.ProbeRef:
      type: object
      properties:
        actions:
          type: array
          description: Actions to be performed
          items:
            $ref: "#/components/schemas/experiment.ProbeActions"
        conditions:
          type: array
          description: Conditions to be checked
          items:
            $ref: "#/components/schemas/experiment.ProbeConditions"
        duration:
          type: string
          description: Duration of the probe
        enableDataCollection:
          type: boolean
          description: EnableDataCollection to enable data collection
        hubRef:
          type: string
          description: HubRef of the fault reference
        identity:
          type: string
          description: Identity of the probe
        infraId:
          type: string
          description: InfraID contains the infrastructure id
        name:
          type: string
          description: Name of the probe
        revision:
          type: integer
          description: Revision of the fault reference
        values:
          type: array
          description: Variables to store the variables
          items:
            $ref: "#/components/schemas/template.VariableMinimum"
        weightage:
          type: integer
          description: Weightage of the probe
      example:
        duration: duration
        weightage: 5
        identity: identity
        values:
        - null
        - null
        hubRef: hubRef
        name: name
        conditions:
        - executeUpon: executeUpon
        - executeUpon: executeUpon
        actions:
        - args:
          - args
          - args
          condition: condition
          identity: identity
          env:
          - null
          - null
        - args:
          - args
          - args
          condition: condition
          identity: identity
          env:
          - null
          - null
        infraId: infraId
        enableDataCollection: true
        revision: 1
    experiment.ProjectedVolumes:
      type: object
      properties:
        mountPath:
          type: string
        name:
          type: string
        projected:
          $ref: "#/components/schemas/v1.ProjectedVolumeSource"
        readOnly:
          type: boolean
    experiment.SaveChaosExperimentResponse:
      type: object
      properties:
        auditAction:
          type: string
        response:
          type: string
      example:
        response: response
        auditAction: auditAction
    experiment.Secret:
      type: object
      properties:
        defaultMode:
          type: integer
        mountPath:
          type: string
        name:
          type: string
    experiment.SecurityContext:
      type: object
      properties:
        containerSecurityContext:
          $ref: "#/components/schemas/v1.SecurityContext"
        podSecurityContext:
          $ref: "#/components/schemas/v1.PodSecurityContext"
    experiment.Selector:
      type: object
      properties:
        workloads:
          type: array
          description: Workloads to store the workloads
          items:
            $ref: "#/components/schemas/experiment.Workload"
    experiment.Sidecar:
      type: object
      properties:
        env:
          type: array
          items:
            $ref: "#/components/schemas/v1.EnvVar"
        envFrom:
          type: array
          items:
            $ref: "#/components/schemas/v1.EnvFromSource"
        image:
          type: string
        imagePullPolicy:
          $ref: "#/components/schemas/v1.PullPolicy"
        secrets:
          type: array
          items:
            $ref: "#/components/schemas/experiment.Secret"
    experiment.StatusCheckTimeout:
      type: object
      properties:
        delay:
          type: integer
        timeout:
          type: integer
    experiment.Targets:
      type: object
      properties:
        application:
          $ref: "#/components/schemas/experiment.Application"
        selectors:
          $ref: "#/components/schemas/experiment.Selector"
    experiment.Workload:
      type: object
      properties:
        kind:
          type: object
          description: Kind of the workload
          allOf:
          - $ref: "#/components/schemas/experiment.WorkloadKind"
        labels:
          type: string
          description: Labels of the workload
        names:
          type: string
          description: Names of the workload
        namespace:
          type: string
          description: Namespace of the workload
    experiment.WorkloadKind:
      type: string
      enum:
      - deployment
      - statefulset
      - daemonSet
      - deploymentconfig
      - rollout
      - pod
      x-enum-varnames:
      - WorkloadDeployment
      - WorkloadStatefulSet
      - WorkloadDaemonSet
      - WorkloadDeploymentConfig
      - WorkloadRollout
      - WorkloadPod
    gamedayrunv2.ApprovalStatus:
      type: string
      enum:
      - approved
      - rejected
      - pending
      x-enum-varnames:
      - Approved
      - Rejected
      - ApprovalPending
    gamedayrunv2.PrerequisiteStatus:
      type: string
      enum:
      - done
      - pending
      x-enum-varnames:
      - Done
      - Pending
    gamedayv2.GamedayRunStatus:
      type: string
      enum:
      - awaiting_approval
      - preparing_prerequisites
      - running_experiments
      - post_mortem
      - terminated
      - completed
      x-enum-varnames:
      - AwaitingApproval
      - PreparingPrerequisites
      - RunningExperiments
      - PostMortem
      - Terminated
      - Completed
    gamedayv2.StakeHolderRole:
      type: string
      enum:
      - coordinator
      - triage_engineer
      - attendee
      - others
      x-enum-varnames:
      - Coordinator
      - TriageEngineer
      - Attendee
      - Others
    github_com_harness_hce-saas_graphql_server_api.Empty:
      type: object
    github_com_harness_hce-saas_graphql_server_api.Pagination:
      type: object
      properties:
        index:
          type: integer
        limit:
          type: integer
        totalItems:
          type: integer
        totalPages:
          type: integer
      example:
        totalItems: 2
        limit: 5
        totalPages: 7
        index: 5
    github_com_harness_hce-saas_graphql_server_graph_model.Identifiers:
      type: object
      properties:
        accountIdentifier:
          type: string
          description: Harness AccountID
        orgIdentifier:
          type: string
          description: Harness OrgID
        projectIdentifier:
          type: string
          description: Harness projectID
      example:
        orgIdentifier: orgIdentifier
        accountIdentifier: accountIdentifier
        projectIdentifier: projectIdentifier
    github_com_harness_hce-saas_graphql_server_graph_model.InfraFilterInput:
      type: object
      properties:
        compatibleWithNewExp:
          type: boolean
          description: "To filter out infras that are compatible with the new experiment\
            \ manifest format: without experiment CRs"
        description:
          type: string
          description: ID of the infra
        infraID:
          type: string
          description: ID of the infra
        infraScope:
          type: object
          description: Scope of infra
          allOf:
          - $ref: "#/components/schemas/model.InfraScope"
        isActive:
          type: boolean
          description: Status of infra
        name:
          type: string
          description: Name of the infra
        platformName:
          type: string
          description: Platform name of infra
        tags:
          type: array
          description: Tags of an infra
          items:
            type: string
    github_com_harness_hce-saas_graphql_server_graph_model.Pagination:
      type: object
      properties:
        limit:
          type: integer
          description: Number of data to be fetched
        page:
          type: integer
          description: Page number for which data will be fetched
    github_com_harness_hce-saas_graphql_server_graph_model.UserDetails:
      type: object
      properties:
        email:
          type: string
        userID:
          type: string
        username:
          type: string
      example:
        userID: userID
        email: email
        username: username
    github_com_harness_hce-saas_graphql_server_pkg_actions.Action:
      required:
      - name
      type: object
      properties:
        actionProperties:
          $ref: "#/components/schemas/action.ActionTemplateProperties"
        actionsTemplateRef:
          type: string
        description:
          type: string
        hubRef:
          type: string
        identity:
          type: string
        infrastructureType:
          $ref: "#/components/schemas/actions.InfrastructureType"
        name:
          type: string
        runProperties:
          $ref: "#/components/schemas/action.ActionTemplateRunProperties"
        tags:
          type: array
          items:
            type: string
        type:
          $ref: "#/components/schemas/actions.ActionType"
        variables:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
      example:
        variables:
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        runProperties:
          maxRetries: {}
          stopOnFailure: true
          interval: interval
          initialDelay: initialDelay
          timeout: timeout
          verbosity: verbosity
        identity: identity
        infrastructureType: Kubernetes
        hubRef: hubRef
        name: name
        description: description
        actionsTemplateRef: actionsTemplateRef
        type: delay
        actionProperties:
          customScriptAction:
            args:
            - args
            - args
            env: {}
            command: command
          sourceAction:
            image: image
            imagePullPolicy: imagePullPolicy
            volumeMount: {}
            serviceAccountName: serviceAccountName
            imagePullSecrets: {}
            volumes: {}
            resources: {}
            env: {}
            command: {}
            nodeSelector: {}
            args: {}
            privileged: true
            tolerations: {}
            inheritInputs: true
          delayAction:
            duration: duration
        tags:
        - tags
        - tags
    github_com_harness_hce-saas_graphql_server_pkg_chaos_v2_probes_types.ProbeVerdict:
      type: string
      enum:
      - Passed
      - Failed
      - NA
      - Awaited
      x-enum-varnames:
      - ProbeVerdictPassed
      - ProbeVerdictFailed
      - ProbeVerdictNa
      - ProbeVerdictAwaited
    github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_actions.Action:
      required:
      - accountID
      - name
      type: object
      properties:
        accountID:
          type: string
        actionProperties:
          $ref: "#/components/schemas/action.ActionTemplateProperties"
        actionsRef:
          type: string
        description:
          type: string
        hubRef:
          type: string
        identity:
          type: string
        infrastructureType:
          $ref: "#/components/schemas/actions.InfrastructureType"
        isRemoved:
          type: boolean
        name:
          type: string
        orgID:
          type: string
        projectID:
          type: string
        recentExecutions:
          type: array
          items:
            $ref: "#/components/schemas/actions.RecentExecutions"
        runProperties:
          $ref: "#/components/schemas/action.ActionTemplateRunProperties"
        tags:
          type: array
          items:
            type: string
        type:
          $ref: "#/components/schemas/actions.ActionType"
        variables:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
      example:
        variables:
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        hubRef: hubRef
        description: description
        type: delay
        actionProperties:
          customScriptAction:
            args:
            - args
            - args
            env: {}
            command: command
          sourceAction:
            image: image
            imagePullPolicy: imagePullPolicy
            volumeMount: {}
            serviceAccountName: serviceAccountName
            imagePullSecrets: {}
            volumes: {}
            resources: {}
            env: {}
            command: {}
            nodeSelector: {}
            args: {}
            privileged: true
            tolerations: {}
            inheritInputs: true
          delayAction:
            duration: duration
        orgID: orgID
        tags:
        - tags
        - tags
        accountID: accountID
        isRemoved: true
        runProperties:
          maxRetries: {}
          stopOnFailure: true
          interval: interval
          initialDelay: initialDelay
          timeout: timeout
          verbosity: verbosity
        identity: identity
        infrastructureType: Kubernetes
        actionsRef: actionsRef
        name: name
        recentExecutions:
        - stepName: stepName
          executedByExperiment:
            experimentRunID: experimentRunID
            updatedBy: null
            experimentID: experimentID
            notifyID: notifyID
            experimentName: experimentName
            updatedAt: 6
          status: status
        - stepName: stepName
          executedByExperiment:
            experimentRunID: experimentRunID
            updatedBy: null
            experimentID: experimentID
            notifyID: notifyID
            experimentName: experimentName
            updatedAt: 6
          status: status
        projectID: projectID
    github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_chaosfaulttemplate.ChaosFaultTemplate:
      required:
      - accountID
      type: object
      properties:
        accountID:
          type: string
        createdAt:
          type: integer
          description: creation timestamp of the revision
        createdBy:
          type: string
          description: user ID of the user who created the revision
        hubRef:
          type: string
          description: Hub reference to sync the changes whenever there are changes
            in the faults
        id:
          type: string
          description: Mongo ID (primary key)
        identity:
          type: string
          description: |-
            Unique identifier (human-readable) immutable
            Initially it will be same as name
        isDefault:
          type: boolean
          description: |-
            isDefault indicates if it is the default version
            for predefined faults, latest should be set as default
        isRemoved:
          type: boolean
          description: isRemoved indicates if the document is deleted
        name:
          type: string
          description: |-
            Fault name to sync the changes from the hub
            HubRef + Name should be unique
        orgID:
          type: string
        projectID:
          type: string
        revision:
          type: integer
          description: |-
            Revision is the version of fault template,
            it increments every time a new version of fault is published
        template:
          type: string
          description: template of the fault
        variables:
          type: array
          description: Variables for template
          items:
            $ref: "#/components/schemas/template.Variable"
      example:
        template: template
        variables:
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        hubRef: hubRef
        orgID: orgID
        revision: 6
        accountID: accountID
        createdAt: 0
        isDefault: true
        isRemoved: true
        createdBy: createdBy
        identity: identity
        name: name
        id: id
        projectID: projectID
    github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_chaosprobetemplate.ChaosProbeTemplate:
      required:
      - accountID
      - isRemoved
      - name
      type: object
      properties:
        accountID:
          type: string
        createdAt:
          type: integer
        createdBy:
          type: string
        description:
          type: string
        hubRef:
          type: string
        id:
          type: string
        identity:
          type: string
          description: |-
            Unique identifier (human-readable) immutable
            Initially it will be same as name
        infrastructureType:
          $ref: "#/components/schemas/probe.InfrastructureType"
        isDefault:
          type: boolean
          description: |-
            isDefault indicates if it is the default version
            for predefined faults, latest should be set as default
        isRemoved:
          type: boolean
        name:
          type: string
        orgID:
          type: string
        probeProperties:
          $ref: "#/components/schemas/probe.ProbeTemplateProperties"
        projectID:
          type: string
        revision:
          type: integer
          description: it increments every time a new version of fault is published
        runProperties:
          $ref: "#/components/schemas/probe.ProbeTemplateRunProperties"
        tags:
          type: array
          items:
            type: string
        template:
          type: string
        type:
          $ref: "#/components/schemas/probe.ProbeType"
        updatedAt:
          type: integer
        updatedBy:
          type: string
        variables:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
      example:
        template: template
        variables:
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        updatedBy: updatedBy
        hubRef: hubRef
        description: description
        type: null
        orgID: orgID
        probeProperties:
          datadogProbe:
            datadogSite: datadogSite
            datadogCredentialsSecretName: datadogCredentialsSecretName
            metrics:
              comparator: null
              query: query
              timeFrame: timeFrame
            syntheticsTest:
              testType: api
              publicId: publicId
          sloProbe:
            comparator: null
            insecureSkipVerify: true
            evaluationTimeout: evaluationTimeout
            sloSourceMetadata:
              apiTokenSecret: apiTokenSecret
              scope:
                orgIdentifier: orgIdentifier
                accountIdentifier: accountIdentifier
                projectIdentifier: projectIdentifier
            platformEndpoint: platformEndpoint
            evaluationWindow:
              evaluationStartTime: {}
              evaluationEndTime: {}
            sloIdentifier: sloIdentifier
          promProbe:
            comparator: null
            endpoint: endpoint
            auth: null
            queryPath: queryPath
            query: query
            tlsConfig: null
          apmProbe:
            comparator:
              criteria: criteria
              type: type
              value: value
            appDynamicsProbeInputs:
              appdMetrics:
                metricsFullPath: metricsFullPath
                durationInMin: {}
              connectorID: connectorID
            type: Prometheus
            splunkObservabilityProbeInputs:
              splunkObservabilityMetrics:
                durationInMin: {}
                query: query
              connectorID: connectorID
            prometheusProbeInputs:
              connectorID: connectorID
              query: query
              tlsConfig:
                caCrt:
                  identifier: identifier
                insecureSkipVerify: {}
                clientCrt: null
                key: null
          cmdProbe:
            comparator: null
            source: source
            command: command
          httpProbe:
            headers:
            - value: value
              key: key
            - value: value
              key: key
            method:
              post:
                responseBody: responseBody
                criteria: criteria
                body: body
                bodyPath: bodyPath
                contentType: contentType
                responseCode: responseCode
              get:
                responseBody: responseBody
                criteria: criteria
                responseCode: responseCode
            auth:
              credentialsFile: credentialsFile
              credentials: credentials
              type: type
            url: url
            tlsConfig:
              caFile: caFile
              keyFile: keyFile
              certFile: certFile
              insecureSkipVerify: true
          dynatraceProbe:
            comparator: null
            endpoint: endpoint
            apiTokenSecretName: apiTokenSecretName
            metrics:
              entitySelector: entitySelector
              metricsSelector: metricsSelector
            timeFrame: timeFrame
          k8sProbe:
            resourceNames: resourceNames
            resource: resource
            labelSelector: labelSelector
            namespace: namespace
            fieldSelector: fieldSelector
            operation: operation
            version: version
            group: group
        revision: 1
        tags:
        - tags
        - tags
        accountID: accountID
        createdAt: 6
        isDefault: true
        isRemoved: true
        runProperties:
          stopOnFailure: true
          pollingInterval: pollingInterval
          interval: interval
          initialDelay: initialDelay
          attempt: {}
          retry: {}
          timeout: timeout
          verbosity: verbosity
        createdBy: createdBy
        identity: identity
        infrastructureType: Kubernetes
        name: name
        id: id
        projectID: projectID
        updatedAt: 5
    github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.AppDynamicsProbeInputs:
      type: object
      properties:
        appdMetrics:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.AppdMetrics"
        connectorID:
          type: string
      example:
        appdMetrics:
          metricsFullPath: metricsFullPath
          durationInMin: {}
        connectorID: connectorID
    github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.AppdMetrics:
      type: object
      properties:
        durationInMin:
          type: object
        metricsFullPath:
          type: string
      example:
        metricsFullPath: metricsFullPath
        durationInMin: {}
    github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.DatadogSyntheticsTestType:
      type: string
      enum:
      - api
      - browser
      x-enum-varnames:
      - API
      - Browser
    github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.GET:
      type: object
      properties:
        criteria:
          type: string
        responseBody:
          type: string
        responseCode:
          type: string
      example:
        responseBody: responseBody
        criteria: criteria
        responseCode: responseCode
    github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.Headers:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      example:
        value: value
        key: key
    github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.Identifier:
      type: object
      properties:
        accountIdentifier:
          type: string
          description: AccountIdentifier for account ID
        orgIdentifier:
          type: string
          description: OrgIdentifier for organization ID
        projectIdentifier:
          type: string
          description: ProjectIdentifier for project ID
    github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.POST:
      type: object
      properties:
        body:
          type: string
        bodyPath:
          type: string
        contentType:
          type: string
        criteria:
          type: string
        responseBody:
          type: string
        responseCode:
          type: string
      example:
        responseBody: responseBody
        criteria: criteria
        body: body
        bodyPath: bodyPath
        contentType: contentType
        responseCode: responseCode
    github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.PrometheusProbeInputs:
      type: object
      properties:
        connectorID:
          type: string
        query:
          type: string
        tlsConfig:
          $ref: "#/components/schemas/probe.APMTLSConfig"
      example:
        connectorID: connectorID
        query: query
        tlsConfig:
          caCrt:
            identifier: identifier
          insecureSkipVerify: true
          clientCrt: null
          key: null
    github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.SecretManager:
      type: object
      properties:
        identifier:
          type: string
      example:
        identifier: identifier
    github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.SplunkObservabilityMetrics:
      type: object
      properties:
        durationInMin:
          type: object
        query:
          type: string
      example:
        durationInMin: {}
        query: query
    github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.SplunkObservabilityProbeInputs:
      type: object
      properties:
        connectorID:
          type: string
        splunkObservabilityMetrics:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.SplunkObservabilityMetrics"
      example:
        splunkObservabilityMetrics:
          durationInMin: {}
          query: query
        connectorID: connectorID
    github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_recommendation.Node:
      type: object
      properties:
        labels:
          type: string
        name:
          type: string
      example:
        name: name
        labels: labels
    github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_recommendation.Recommendation:
      required:
      - accountID
      type: object
      properties:
        accountID:
          type: string
        environmentID:
          type: string
        eventIdentifier:
          type: string
        experimentID:
          type: string
        experimentName:
          type: string
        faultFilters:
          $ref: "#/components/schemas/recommendation.FaultFilters"
        infraID:
          type: string
        infraName:
          type: string
        infraNamespace:
          type: string
        infraType:
          type: string
        isRemoved:
          type: boolean
        orgID:
          type: string
        probeFilters:
          $ref: "#/components/schemas/recommendation.ProbeFilters"
        projectID:
          type: string
        recommendationCategory:
          $ref: "#/components/schemas/recommendation.RecommendationCategory"
        recommendationID:
          type: string
        source:
          $ref: "#/components/schemas/recommendation.RecommendationSource"
        suggestions:
          type: array
          items:
            $ref: "#/components/schemas/recommendation.Suggestions"
        tags:
          type: array
          items:
            type: string
      example:
        recommendationCategory: FAULT
        infraNamespace: infraNamespace
        faultFilters:
          criticality: 0
          targets:
            node:
              name: name
              labels: labels
            workload:
              kind: kind
              name: name
              namespace: namespace
              labels: labels
            type: Workload
          faultName: faultName
        infraName: infraName
        recommendationID: recommendationID
        source: ConfigScanner
        eventIdentifier: eventIdentifier
        orgID: orgID
        tags:
        - tags
        - tags
        accountID: accountID
        probeFilters:
          experimentRunID: experimentRunID
          probeName: probeName
          probeType: probeType
          probeID: probeID
        environmentID: environmentID
        isRemoved: true
        experimentID: experimentID
        suggestions:
        - reason: reason
          count: 6
          error: error
          recommendationType: CREATE
          fixes:
          - name: name
            description: description
          - name: name
            description: description
          ignoreCounter: 1
          status: Pending
          updatedAt: 5
        - reason: reason
          count: 6
          error: error
          recommendationType: CREATE
          fixes:
          - name: name
            description: description
          - name: name
            description: description
          ignoreCounter: 1
          status: Pending
          updatedAt: 5
        infraID: infraID
        projectID: projectID
        experimentName: experimentName
        infraType: infraType
    github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_recommendation.RecommendationTargetType:
      type: string
      enum:
      - Workload
      - Node
      x-enum-varnames:
      - WorkloadType
      - NodeType
    github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_recommendation.Target:
      type: object
      properties:
        node:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_recommendation.Node"
        type:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_recommendation.RecommendationTargetType"
        workload:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_recommendation.Workload"
      example:
        node:
          name: name
          labels: labels
        workload:
          kind: kind
          name: name
          namespace: namespace
          labels: labels
        type: Workload
    github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_recommendation.Workload:
      type: object
      properties:
        kind:
          type: string
        labels:
          type: string
        name:
          type: string
        namespace:
          type: string
      example:
        kind: kind
        name: name
        namespace: namespace
        labels: labels
    github_com_harness_hce-saas_hce-sdk_common_probe_v1.Probe:
      type: object
      properties:
        apmProbe/inputs:
          type: object
          description: APMProbeInputs contains the inputs required for apm probe
          allOf:
          - $ref: "#/components/schemas/v1.APMProbeInputs"
        cmdProbe/inputs:
          type: object
          description: inputs needed for the cmd probe
          allOf:
          - $ref: "#/components/schemas/v1.CmdProbeInputs"
        data:
          type: string
          description: |-
            Data contains the manifest/data for the resource, which need to be created
            it supported for create operation only
        datadogProbe/inputs:
          type: object
          description: inputs needed for the Datadog probe
          allOf:
          - $ref: "#/components/schemas/v1.DatadogProbeInputs"
        dynatraceProbe/inputs:
          type: object
          description: inputs needed for the Dynatrace probe
          allOf:
          - $ref: "#/components/schemas/v1.DynatraceProbeInputs"
        httpProbe/inputs:
          type: object
          description: inputs needed for the http probe
          allOf:
          - $ref: "#/components/schemas/v1.HTTPProbeInputs"
        id:
          type: string
        k8sProbe/inputs:
          type: object
          description: inputs needed for the k8s probe
          allOf:
          - $ref: "#/components/schemas/v1.K8sProbeInputs"
        mode:
          type: string
          description: |-
            mode for k8s probe
            it can be SOT, EOT, Edge
        name:
          type: string
          description: Name of probe
        newrelicProbe/inputs:
          type: object
          description: inputs needed for the Newrelic probe
          allOf:
          - $ref: "#/components/schemas/v1.NewrelicProbeInputs"
        promProbe/inputs:
          type: object
          description: inputs needed for the prometheus probe
          allOf:
          - $ref: "#/components/schemas/v1.PromProbeInputs"
        runProperties:
          type: object
          description: "RunProperty contains timeout, retry and interval for the probe"
          allOf:
          - $ref: "#/components/schemas/v1.RunProperty"
        sloProbe/inputs:
          type: object
          description: inputs needed for the SLO probe
          allOf:
          - $ref: "#/components/schemas/v1.SLOProbeInputs"
        type:
          type: string
          description: Type of probe
      example:
        apmProbe/inputs: ""
        datadogProbe/inputs: ""
        httpProbe/inputs: ""
        promProbe/inputs: ""
        data: data
        k8sProbe/inputs: ""
        cmdProbe/inputs: ""
        type: type
        mode: mode
        newrelicProbe/inputs: ""
        runProperties: ""
        dynatraceProbe/inputs: ""
        name: name
        id: id
        sloProbe/inputs: ""
    github_com_harness_hce-saas_hce-sdk_template_schema_probe.AppDynamicsProbeInputs:
      type: object
      properties:
        appdMetrics:
          $ref: "#/components/schemas/github_com_harness_hce-saas_hce-sdk_template_schema_probe.AppdMetrics"
        connectorID:
          type: string
      example:
        appdMetrics:
          metricsFullPath: metricsFullPath
          durationInMin: {}
        connectorID: connectorID
    github_com_harness_hce-saas_hce-sdk_template_schema_probe.AppdMetrics:
      type: object
      properties:
        durationInMin:
          type: object
        metricsFullPath:
          type: string
      example:
        metricsFullPath: metricsFullPath
        durationInMin: {}
    github_com_harness_hce-saas_hce-sdk_template_schema_probe.DatadogSyntheticsTestType:
      type: string
      enum:
      - api
      - browser
      x-enum-varnames:
      - API
      - Browser
    github_com_harness_hce-saas_hce-sdk_template_schema_probe.GET:
      type: object
      properties:
        criteria:
          type: string
        responseBody:
          type: string
        responseCode:
          type: string
      example:
        responseBody: responseBody
        criteria: criteria
        responseCode: responseCode
    github_com_harness_hce-saas_hce-sdk_template_schema_probe.Headers:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      example:
        value: value
        key: key
    github_com_harness_hce-saas_hce-sdk_template_schema_probe.Identifier:
      type: object
      properties:
        accountIdentifier:
          type: string
        orgIdentifier:
          type: string
        projectIdentifier:
          type: string
      example:
        orgIdentifier: orgIdentifier
        accountIdentifier: accountIdentifier
        projectIdentifier: projectIdentifier
    github_com_harness_hce-saas_hce-sdk_template_schema_probe.POST:
      type: object
      properties:
        body:
          type: string
        bodyPath:
          type: string
        contentType:
          type: string
        criteria:
          type: string
        responseBody:
          type: string
        responseCode:
          type: string
      example:
        responseBody: responseBody
        criteria: criteria
        body: body
        bodyPath: bodyPath
        contentType: contentType
        responseCode: responseCode
    github_com_harness_hce-saas_hce-sdk_template_schema_probe.PrometheusProbeInputs:
      type: object
      properties:
        connectorID:
          type: string
        query:
          type: string
        tlsConfig:
          $ref: "#/components/schemas/probe.TLSConfigSM"
      example:
        connectorID: connectorID
        query: query
        tlsConfig:
          caCrt:
            identifier: identifier
          insecureSkipVerify: {}
          clientCrt: null
          key: null
    github_com_harness_hce-saas_hce-sdk_template_schema_probe.SecretManager:
      type: object
      properties:
        identifier:
          type: string
      example:
        identifier: identifier
    github_com_harness_hce-saas_hce-sdk_template_schema_probe.SplunkObservabilityMetrics:
      type: object
      properties:
        durationInMin:
          type: object
        query:
          type: string
      example:
        durationInMin: {}
        query: query
    github_com_harness_hce-saas_hce-sdk_template_schema_probe.SplunkObservabilityProbeInputs:
      type: object
      properties:
        connectorID:
          type: string
        splunkObservabilityMetrics:
          $ref: "#/components/schemas/github_com_harness_hce-saas_hce-sdk_template_schema_probe.SplunkObservabilityMetrics"
      example:
        splunkObservabilityMetrics:
          durationInMin: {}
          query: query
        connectorID: connectorID
    github_com_harness_hce-saas_hce-sdk_types_api_k8sifs_image_registry.ScopedIdentifiers:
      type: object
      properties:
        accountIdentifier:
          type: string
          description: Harness AccountID
        orgIdentifier:
          type: string
          description: Harness OrgID
        projectIdentifier:
          type: string
          description: Harness projectID
      example:
        orgIdentifier: orgIdentifier
        accountIdentifier: accountIdentifier
        projectIdentifier: projectIdentifier
    handlers.CHAOSLicenseUsageDTO:
      type: object
      properties:
        accountIdentifier:
          type: string
        experimentRunsPerMonth:
          $ref: "#/components/schemas/handlers.UsageDataDTO"
        module:
          type: string
        timestamp:
          type: integer
      example:
        experimentRunsPerMonth:
          references:
          - identifier: identifier
            orgIdentifier: orgIdentifier
            name: name
            accountIdentifier: accountIdentifier
            projectIdentifier: projectIdentifier
          - identifier: identifier
            orgIdentifier: orgIdentifier
            name: name
            accountIdentifier: accountIdentifier
            projectIdentifier: projectIdentifier
          displayName: displayName
          count: 0
        module: module
        accountIdentifier: accountIdentifier
        timestamp: 6
    handlers.ChaosExperimentRunsStatsResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/common_types.ExperimentRunsData"
      example:
        data:
          totalExperimentChange: 5
          experimentRunStats:
          - success: 6
            failed: 0
            time: 1
          - success: 6
            failed: 0
            time: 1
          totalExperimentRuns: 5
    handlers.Dashboard:
      type: object
      properties:
        description:
          type: string
        id:
          type: integer
        title:
          type: string
      example:
        description: description
        id: 0
        title: title
    handlers.ExperimentHelperImageVersion:
      type: object
      properties:
        experimentHelperImageVersion:
          type: string
      example:
        experimentHelperImageVersion: experimentHelperImageVersion
    handlers.ImageRegistryDetails:
      type: object
      properties:
        imageRegistryRepo:
          type: string
        imageRegistrySecret:
          type: string
      example:
        imageRegistryRepo: imageRegistryRepo
        imageRegistrySecret: imageRegistrySecret
    handlers.ListExperimentsWithActiveInfrasMinimalNotificationResponse:
      type: object
      properties:
        experiments:
          type: array
          description: Details related to the workflows
          items:
            $ref: "#/components/schemas/handlers.MinimalNotificationWorkflow"
        totalNoOfExperiments:
          type: integer
          description: Total number of workflows
      example:
        experiments:
        - name: name
          infraName: infraName
          infraID: infraID
          workflowID: workflowID
          tags:
          - tags
          - tags
        - name: name
          infraName: infraName
          infraID: infraID
          workflowID: workflowID
          tags:
          - tags
          - tags
        totalNoOfExperiments: 0
    handlers.MinimalNotificationWorkflow:
      type: object
      properties:
        infraID:
          type: string
          description: ID of the infra
        infraName:
          type: string
          description: Name of the infrastructure
        name:
          type: string
          description: Name of the workflow
        tags:
          type: array
          description: Tags of the workflow
          items:
            type: string
        workflowID:
          type: string
          description: ID of the workflow
      example:
        name: name
        infraName: infraName
        infraID: infraID
        workflowID: workflowID
        tags:
        - tags
        - tags
    handlers.ReferenceDTO:
      type: object
      properties:
        accountIdentifier:
          type: string
        identifier:
          type: string
        name:
          type: string
        orgIdentifier:
          type: string
        projectIdentifier:
          type: string
      example:
        identifier: identifier
        orgIdentifier: orgIdentifier
        name: name
        accountIdentifier: accountIdentifier
        projectIdentifier: projectIdentifier
    handlers.UsageDataDTO:
      type: object
      properties:
        count:
          type: integer
        displayName:
          type: string
        references:
          type: array
          items:
            $ref: "#/components/schemas/handlers.ReferenceDTO"
      example:
        references:
        - identifier: identifier
          orgIdentifier: orgIdentifier
          name: name
          accountIdentifier: accountIdentifier
          projectIdentifier: projectIdentifier
        - identifier: identifier
          orgIdentifier: orgIdentifier
          name: name
          accountIdentifier: accountIdentifier
          projectIdentifier: projectIdentifier
        displayName: displayName
        count: 0
    image_registry.CustomImagesRequest:
      type: object
      properties:
        ddcr:
          type: string
        ddcrFault:
          type: string
        ddcrLib:
          type: string
        logWatcher:
          type: string
      example:
        ddcr: ddcr
        ddcrFault: ddcrFault
        ddcrLib: ddcrLib
        logWatcher: logWatcher
    image_registry.ImageRegistryV2:
      type: object
      properties:
        createdAt:
          type: string
        createdBy:
          $ref: "#/components/schemas/image_registry.UserDetails"
        customImages:
          $ref: "#/components/schemas/image_registry.CustomImagesRequest"
        identifier:
          $ref: "#/components/schemas/github_com_harness_hce-saas_hce-sdk_types_api_k8sifs_image_registry.ScopedIdentifiers"
        infraID:
          type: string
        isDefault:
          type: boolean
        isOverrideAllowed:
          type: boolean
        isPrivate:
          type: boolean
        registryAccount:
          type: string
        registryServer:
          type: string
        secretName:
          type: string
        updatedAt:
          type: string
        updatedBy:
          $ref: "#/components/schemas/image_registry.UserDetails"
        useCustomImages:
          type: boolean
      example:
        identifier:
          orgIdentifier: orgIdentifier
          accountIdentifier: accountIdentifier
          projectIdentifier: projectIdentifier
        secretName: secretName
        updatedBy: null
        customImages:
          ddcr: ddcr
          ddcrFault: ddcrFault
          ddcrLib: ddcrLib
          logWatcher: logWatcher
        isPrivate: true
        createdAt: createdAt
        registryAccount: registryAccount
        isDefault: true
        isOverrideAllowed: true
        createdBy:
          userID: userID
          email: email
          username: username
        useCustomImages: true
        registryServer: registryServer
        infraID: infraID
        updatedAt: updatedAt
    image_registry.UserDetails:
      type: object
      properties:
        email:
          type: string
        userID:
          type: string
        username:
          type: string
      example:
        userID: userID
        email: email
        username: username
    infra_v2.DeleteKubernetesInfraV2Response:
      type: object
      properties:
        correlationId:
          type: string
        identity:
          type: string
        message:
          type: string
      example:
        identity: identity
        correlationId: correlationId
        message: message
    infra_v2.Env:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        value:
          type: string
        valueFrom:
          $ref: "#/components/schemas/infra_v2.EnvValueFrom"
      example:
        name: name
        value: value
        key: key
        valueFrom: configMapKeyRef
    infra_v2.EnvValueFrom:
      type: string
      enum:
      - configMapKeyRef
      - secretKeyRef
      - value
      - valueFrom
      x-enum-varnames:
      - EnvValueFromConfigMapKeyRef
      - EnvValueFromSecretKeyRef
      - EnvValueFromValue
      - EnvValueFromValueFrom
    infra_v2.GetKubernetesInfrastructureV2YamlRequest:
      type: object
      properties:
        annotation:
          type: object
          additionalProperties:
            type: string
        containers:
          type: string
        correlationId:
          type: string
        env:
          type: array
          items:
            $ref: "#/components/schemas/infra_v2.Env"
        environmentID:
          type: string
        identifier:
          $ref: "#/components/schemas/infra_v2.Identifiers"
        identity:
          type: string
        infraNamespace:
          type: string
        insecureSkipVerify:
          type: boolean
        label:
          type: object
          additionalProperties:
            type: string
        mtls:
          $ref: "#/components/schemas/infra_v2.MTLSConfiguration"
        nodeSelector:
          type: object
          additionalProperties:
            type: string
        proxy:
          $ref: "#/components/schemas/infra_v2.ProxyConfiguration"
        runAsGroup:
          type: integer
        runAsUser:
          type: integer
        serviceAccount:
          type: string
        tolerations:
          type: array
          items:
            $ref: "#/components/schemas/v1.Toleration"
        volumeMounts:
          type: array
          items:
            $ref: "#/components/schemas/v1.VolumeMount"
        volumes:
          type: array
          items:
            $ref: "#/components/schemas/infra_v2.Volumes"
    infra_v2.GetKubernetesInfrastructureV2YamlResponse:
      type: object
      properties:
        correlationId:
          type: string
        yaml:
          type: string
      example:
        correlationId: correlationId
        yaml: yaml
    infra_v2.Identifiers:
      type: object
      properties:
        accountIdentifier:
          type: string
        orgIdentifier:
          type: string
        projectIdentifier:
          type: string
      example:
        orgIdentifier: orgIdentifier
        accountIdentifier: accountIdentifier
        projectIdentifier: projectIdentifier
    infra_v2.InfraScope:
      type: string
      enum:
      - NAMESPACE
      - CLUSTER
      x-enum-varnames:
      - InfraScopeNamespace
      - InfraScopeCluster
    infra_v2.InfraStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
      - PENDING
      - UPGRADING
      - UPGRADE_REQUIRED
      x-enum-varnames:
      - InfraStatusActive
      - InfraStatusInactive
      - InfraStatusPending
      - InfraStatusUpgrading
      - InfraStatusUpgradeRequired
    infra_v2.InfraType:
      type: string
      enum:
      - KUBERNETES
      - KUBERNETESV2
      x-enum-varnames:
      - InfraTypeKubernetes
      - InfraTypeKubernetesV2
    infra_v2.InfraTypeFilter:
      type: string
      enum:
      - KUBERNETES
      - KUBERNETESV2
      - ALL
      x-enum-varnames:
      - InfraTypeFilterKubernetes
      - InfraTypeFilterKubernetesV2
      - InfraTypeFilterAll
    infra_v2.InstallationType:
      type: string
      enum:
      - CONNECTOR
      - MANIFEST
      - CONNECTOR_V2
      x-enum-varnames:
      - InstallationTypeConnector
      - InstallationTypeManifest
      - InstallationTypeConnectorV2
    infra_v2.KubernetesInfraV2FilterInput:
      type: object
      properties:
        infraScope:
          $ref: "#/components/schemas/infra_v2.InfraScope"
        infraTypeFilter:
          $ref: "#/components/schemas/infra_v2.InfraTypeFilter"
        tags:
          type: array
          items:
            type: string
    infra_v2.KubernetesInfrastructureV2Details:
      type: object
      properties:
        annotation:
          type: object
          additionalProperties:
            type: string
        containers:
          type: string
        createdAt:
          type: string
        createdBy:
          $ref: "#/components/schemas/infra_v2.UserDetails"
        deploymentType:
          type: string
        description:
          type: string
        discoveryAgentID:
          type: string
        env:
          type: array
          items:
            $ref: "#/components/schemas/infra_v2.Env"
        environmentID:
          type: string
        harnessInfraType:
          type: string
        identifier:
          $ref: "#/components/schemas/infra_v2.Identifiers"
        identity:
          type: string
        imageRegistry:
          $ref: "#/components/schemas/image_registry.ImageRegistryV2"
        infraID:
          type: string
        infraNamespace:
          type: string
        infraScope:
          $ref: "#/components/schemas/infra_v2.InfraScope"
        infraType:
          $ref: "#/components/schemas/infra_v2.InfraType"
        insecureSkipVerify:
          type: boolean
        installationType:
          $ref: "#/components/schemas/infra_v2.InstallationType"
        isAIEnabled:
          type: boolean
        isChaosEnabled:
          type: boolean
        k8sConnectorID:
          type: string
        label:
          type: object
          additionalProperties:
            type: string
        lastHeartbeat:
          type: integer
        lastWorkflowTimestamp:
          type: string
        mtls:
          $ref: "#/components/schemas/infra_v2.MTLSConfiguration"
        name:
          type: string
        noOfSchedules:
          type: integer
        noOfWorkflows:
          type: integer
        nodeSelector:
          type: object
          additionalProperties:
            type: string
        platformName:
          type: string
        proxy:
          $ref: "#/components/schemas/infra_v2.ProxyConfiguration"
        runAsGroup:
          type: integer
        runAsUser:
          type: integer
        serviceAccount:
          type: string
        status:
          $ref: "#/components/schemas/infra_v2.InfraStatus"
        tags:
          type: array
          items:
            type: string
        tolerations:
          type: array
          items:
            $ref: "#/components/schemas/v1.Toleration"
        updateStatus:
          $ref: "#/components/schemas/infra_v2.UpdateStatus"
        updatedAt:
          type: string
        updatedBy:
          $ref: "#/components/schemas/infra_v2.UserDetails"
        upgrade:
          $ref: "#/components/schemas/infra_v2.Upgrade"
        version:
          type: string
        volumeMounts:
          type: array
          items:
            $ref: "#/components/schemas/v1.VolumeMount"
        volumes:
          type: array
          items:
            $ref: "#/components/schemas/infra_v2.Volumes"
      example:
        isChaosEnabled: true
        discoveryAgentID: discoveryAgentID
        k8sConnectorID: k8sConnectorID
        lastHeartbeat: 0
        noOfWorkflows: 1
        description: description
        nodeSelector:
          key: nodeSelector
        volumeMounts:
        - mountPath: mountPath
          mountPropagation: ""
          name: name
          readOnly: true
          subPath: subPath
          subPathExpr: subPathExpr
        - mountPath: mountPath
          mountPropagation: ""
          name: name
          readOnly: true
          subPath: subPath
          subPathExpr: subPathExpr
        createdAt: createdAt
        tolerations:
        - effect: ""
          tolerationSeconds: 2
          value: value
          key: key
          operator: ""
        - effect: ""
          tolerationSeconds: 2
          value: value
          key: key
          operator: ""
        harnessInfraType: harnessInfraType
        identity: identity
        platformName: platformName
        infraID: infraID
        mtls:
          secretName: secretName
          certPath: certPath
          keyPath: keyPath
          url: url
        updatedAt: updatedAt
        annotation:
          key: annotation
        identifier:
          orgIdentifier: orgIdentifier
          accountIdentifier: accountIdentifier
          projectIdentifier: projectIdentifier
        noOfSchedules: 6
        updatedBy: null
        upgrade:
          isAutoUpgradeEnabled: true
          status: UPGRADING_INFRA
        infraNamespace: infraNamespace
        isAIEnabled: true
        volumes:
        - sizeLimit: sizeLimit
          name: name
        - sizeLimit: sizeLimit
          name: name
        serviceAccount: serviceAccount
        label:
          key: label
        env:
        - name: name
          value: value
          key: key
          valueFrom: configMapKeyRef
        - name: name
          value: value
          key: key
          valueFrom: configMapKeyRef
        version: version
        lastWorkflowTimestamp: lastWorkflowTimestamp
        runAsGroup: 5
        infraScope: NAMESPACE
        tags:
        - tags
        - tags
        runAsUser: 5
        proxy:
          httpProxy: httpProxy
          httpsProxy: httpsProxy
          noProxy: noProxy
          url: url
        deploymentType: deploymentType
        environmentID: environmentID
        imageRegistry:
          identifier:
            orgIdentifier: orgIdentifier
            accountIdentifier: accountIdentifier
            projectIdentifier: projectIdentifier
          secretName: secretName
          updatedBy: null
          customImages:
            ddcr: ddcr
            ddcrFault: ddcrFault
            ddcrLib: ddcrLib
            logWatcher: logWatcher
          isPrivate: true
          createdAt: createdAt
          registryAccount: registryAccount
          isDefault: true
          isOverrideAllowed: true
          createdBy:
            userID: userID
            email: email
            username: username
          useCustomImages: true
          registryServer: registryServer
          infraID: infraID
          updatedAt: updatedAt
        installationType: CONNECTOR
        createdBy:
          name: name
          email: email
          username: username
        updateStatus: AVAILABLE
        insecureSkipVerify: true
        name: name
        containers: containers
        infraType: KUBERNETES
        status: ACTIVE
    infra_v2.ListKubernetesInfraV2Request:
      type: object
      properties:
        filter:
          $ref: "#/components/schemas/infra_v2.KubernetesInfraV2FilterInput"
        identifier:
          $ref: "#/components/schemas/infra_v2.Identifiers"
    infra_v2.ListKubernetesInfraV2Response:
      type: object
      properties:
        infras:
          type: array
          items:
            $ref: "#/components/schemas/infra_v2.KubernetesInfrastructureV2Details"
        pagination:
          $ref: "#/components/schemas/infra_v2.Pagination"
        totalNoOfInfrastructures:
          type: integer
      example:
        pagination:
          limit: 0
          page: 6
        infras:
        - isChaosEnabled: true
          discoveryAgentID: discoveryAgentID
          k8sConnectorID: k8sConnectorID
          lastHeartbeat: 0
          noOfWorkflows: 1
          description: description
          nodeSelector:
            key: nodeSelector
          volumeMounts:
          - mountPath: mountPath
            mountPropagation: ""
            name: name
            readOnly: true
            subPath: subPath
            subPathExpr: subPathExpr
          - mountPath: mountPath
            mountPropagation: ""
            name: name
            readOnly: true
            subPath: subPath
            subPathExpr: subPathExpr
          createdAt: createdAt
          tolerations:
          - effect: ""
            tolerationSeconds: 2
            value: value
            key: key
            operator: ""
          - effect: ""
            tolerationSeconds: 2
            value: value
            key: key
            operator: ""
          harnessInfraType: harnessInfraType
          identity: identity
          platformName: platformName
          infraID: infraID
          mtls:
            secretName: secretName
            certPath: certPath
            keyPath: keyPath
            url: url
          updatedAt: updatedAt
          annotation:
            key: annotation
          identifier:
            orgIdentifier: orgIdentifier
            accountIdentifier: accountIdentifier
            projectIdentifier: projectIdentifier
          noOfSchedules: 6
          updatedBy: null
          upgrade:
            isAutoUpgradeEnabled: true
            status: UPGRADING_INFRA
          infraNamespace: infraNamespace
          isAIEnabled: true
          volumes:
          - sizeLimit: sizeLimit
            name: name
          - sizeLimit: sizeLimit
            name: name
          serviceAccount: serviceAccount
          label:
            key: label
          env:
          - name: name
            value: value
            key: key
            valueFrom: configMapKeyRef
          - name: name
            value: value
            key: key
            valueFrom: configMapKeyRef
          version: version
          lastWorkflowTimestamp: lastWorkflowTimestamp
          runAsGroup: 5
          infraScope: NAMESPACE
          tags:
          - tags
          - tags
          runAsUser: 5
          proxy:
            httpProxy: httpProxy
            httpsProxy: httpsProxy
            noProxy: noProxy
            url: url
          deploymentType: deploymentType
          environmentID: environmentID
          imageRegistry:
            identifier:
              orgIdentifier: orgIdentifier
              accountIdentifier: accountIdentifier
              projectIdentifier: projectIdentifier
            secretName: secretName
            updatedBy: null
            customImages:
              ddcr: ddcr
              ddcrFault: ddcrFault
              ddcrLib: ddcrLib
              logWatcher: logWatcher
            isPrivate: true
            createdAt: createdAt
            registryAccount: registryAccount
            isDefault: true
            isOverrideAllowed: true
            createdBy:
              userID: userID
              email: email
              username: username
            useCustomImages: true
            registryServer: registryServer
            infraID: infraID
            updatedAt: updatedAt
          installationType: CONNECTOR
          createdBy:
            name: name
            email: email
            username: username
          updateStatus: AVAILABLE
          insecureSkipVerify: true
          name: name
          containers: containers
          infraType: KUBERNETES
          status: ACTIVE
        - isChaosEnabled: true
          discoveryAgentID: discoveryAgentID
          k8sConnectorID: k8sConnectorID
          lastHeartbeat: 0
          noOfWorkflows: 1
          description: description
          nodeSelector:
            key: nodeSelector
          volumeMounts:
          - mountPath: mountPath
            mountPropagation: ""
            name: name
            readOnly: true
            subPath: subPath
            subPathExpr: subPathExpr
          - mountPath: mountPath
            mountPropagation: ""
            name: name
            readOnly: true
            subPath: subPath
            subPathExpr: subPathExpr
          createdAt: createdAt
          tolerations:
          - effect: ""
            tolerationSeconds: 2
            value: value
            key: key
            operator: ""
          - effect: ""
            tolerationSeconds: 2
            value: value
            key: key
            operator: ""
          harnessInfraType: harnessInfraType
          identity: identity
          platformName: platformName
          infraID: infraID
          mtls:
            secretName: secretName
            certPath: certPath
            keyPath: keyPath
            url: url
          updatedAt: updatedAt
          annotation:
            key: annotation
          identifier:
            orgIdentifier: orgIdentifier
            accountIdentifier: accountIdentifier
            projectIdentifier: projectIdentifier
          noOfSchedules: 6
          updatedBy: null
          upgrade:
            isAutoUpgradeEnabled: true
            status: UPGRADING_INFRA
          infraNamespace: infraNamespace
          isAIEnabled: true
          volumes:
          - sizeLimit: sizeLimit
            name: name
          - sizeLimit: sizeLimit
            name: name
          serviceAccount: serviceAccount
          label:
            key: label
          env:
          - name: name
            value: value
            key: key
            valueFrom: configMapKeyRef
          - name: name
            value: value
            key: key
            valueFrom: configMapKeyRef
          version: version
          lastWorkflowTimestamp: lastWorkflowTimestamp
          runAsGroup: 5
          infraScope: NAMESPACE
          tags:
          - tags
          - tags
          runAsUser: 5
          proxy:
            httpProxy: httpProxy
            httpsProxy: httpsProxy
            noProxy: noProxy
            url: url
          deploymentType: deploymentType
          environmentID: environmentID
          imageRegistry:
            identifier:
              orgIdentifier: orgIdentifier
              accountIdentifier: accountIdentifier
              projectIdentifier: projectIdentifier
            secretName: secretName
            updatedBy: null
            customImages:
              ddcr: ddcr
              ddcrFault: ddcrFault
              ddcrLib: ddcrLib
              logWatcher: logWatcher
            isPrivate: true
            createdAt: createdAt
            registryAccount: registryAccount
            isDefault: true
            isOverrideAllowed: true
            createdBy:
              userID: userID
              email: email
              username: username
            useCustomImages: true
            registryServer: registryServer
            infraID: infraID
            updatedAt: updatedAt
          installationType: CONNECTOR
          createdBy:
            name: name
            email: email
            username: username
          updateStatus: AVAILABLE
          insecureSkipVerify: true
          name: name
          containers: containers
          infraType: KUBERNETES
          status: ACTIVE
        totalNoOfInfrastructures: 1
    infra_v2.MTLSConfiguration:
      type: object
      properties:
        certPath:
          type: string
        keyPath:
          type: string
        secretName:
          type: string
        url:
          type: string
      example:
        secretName: secretName
        certPath: certPath
        keyPath: keyPath
        url: url
    infra_v2.Pagination:
      type: object
      properties:
        limit:
          type: integer
        page:
          type: integer
      example:
        limit: 0
        page: 6
    infra_v2.ProxyConfiguration:
      type: object
      properties:
        httpProxy:
          type: string
        httpsProxy:
          type: string
        noProxy:
          type: string
        url:
          type: string
      example:
        httpProxy: httpProxy
        httpsProxy: httpsProxy
        noProxy: noProxy
        url: url
    infra_v2.RegisterInfrastructureV2Request:
      type: object
      properties:
        aiEnabled:
          type: boolean
        annotation:
          type: object
          additionalProperties:
            type: string
        containers:
          type: string
        correlationId:
          type: string
        description:
          type: string
        discoveryAgentID:
          type: string
        env:
          type: array
          items:
            $ref: "#/components/schemas/infra_v2.Env"
        environmentID:
          type: string
        identifier:
          $ref: "#/components/schemas/infra_v2.Identifiers"
        identity:
          type: string
        imageRegistry:
          $ref: "#/components/schemas/image_registry.ImageRegistryV2"
        infraID:
          type: string
        infraNamespace:
          type: string
        infraScope:
          $ref: "#/components/schemas/infra_v2.InfraScope"
        infraType:
          $ref: "#/components/schemas/infra_v2.InfraType"
        insecureSkipVerify:
          type: boolean
        k8sConnectorID:
          type: string
        label:
          type: object
          additionalProperties:
            type: string
        mtls:
          $ref: "#/components/schemas/infra_v2.MTLSConfiguration"
        name:
          type: string
        nodeSelector:
          type: object
          additionalProperties:
            type: string
        proxy:
          $ref: "#/components/schemas/infra_v2.ProxyConfiguration"
        runAsGroup:
          type: integer
        runAsUser:
          type: integer
        serviceAccount:
          type: string
        tags:
          type: array
          items:
            type: string
        tolerations:
          type: array
          items:
            $ref: "#/components/schemas/v1.Toleration"
        volumeMounts:
          type: array
          items:
            $ref: "#/components/schemas/v1.VolumeMount"
        volumes:
          type: array
          items:
            $ref: "#/components/schemas/infra_v2.Volumes"
    infra_v2.RegisterInfrastructureV2Response:
      type: object
      properties:
        identity:
          type: string
        name:
          type: string
        token:
          type: string
      example:
        identity: identity
        name: name
        token: token
    infra_v2.UpdateKubernetesInfrastructureV2Request:
      type: object
      properties:
        aiEnabled:
          type: boolean
        annotation:
          type: object
          additionalProperties:
            type: string
        containers:
          type: string
        correlationId:
          type: string
        description:
          type: string
        env:
          type: array
          items:
            $ref: "#/components/schemas/infra_v2.Env"
        environmentID:
          type: string
        identity:
          type: string
        imageRegistry:
          $ref: "#/components/schemas/image_registry.ImageRegistryV2"
        infraNamespace:
          type: string
        insecureSkipVerify:
          type: boolean
        label:
          type: object
          additionalProperties:
            type: string
        mtls:
          $ref: "#/components/schemas/infra_v2.MTLSConfiguration"
        name:
          type: string
        nodeSelector:
          type: object
          additionalProperties:
            type: string
        proxy:
          $ref: "#/components/schemas/infra_v2.ProxyConfiguration"
        runAsGroup:
          type: integer
        runAsUser:
          type: integer
        serviceAccount:
          type: string
        tags:
          type: array
          items:
            type: string
        tolerations:
          type: array
          items:
            $ref: "#/components/schemas/v1.Toleration"
        volumeMounts:
          type: array
          items:
            $ref: "#/components/schemas/v1.VolumeMount"
        volumes:
          type: array
          items:
            $ref: "#/components/schemas/infra_v2.Volumes"
    infra_v2.UpdateKubernetesInfrastructureV2Response:
      type: object
      properties:
        correlationId:
          type: string
        message:
          type: string
      example:
        correlationId: correlationId
        message: message
    infra_v2.UpdateStatus:
      type: string
      enum:
      - AVAILABLE
      - MANDATORY
      - NOT_REQUIRED
      x-enum-varnames:
      - UpdateStatusAvailable
      - UpdateStatusMandatory
      - UpdateStatusNotRequired
    infra_v2.Upgrade:
      type: object
      properties:
        isAutoUpgradeEnabled:
          type: boolean
        status:
          $ref: "#/components/schemas/infra_v2.UpgradeStatus"
      example:
        isAutoUpgradeEnabled: true
        status: UPGRADING_INFRA
    infra_v2.UpgradeStatus:
      type: string
      enum:
      - UPGRADING_INFRA
      - UPGRADE_SKIPPED
      - UPGRADE_SUCCESSFUL
      - UPGRADE_FAILED
      - DETECTING_UPGRADER
      - UPGRADER_DISABLED
      x-enum-varnames:
      - UpgradeStatusUpgrading
      - UpgradeStatusSkipped
      - UpgradeStatusSuccessful
      - UpgradeStatusFailed
      - UpgradeStatusDetecting
      - UpgradeStatusDisabled
    infra_v2.UserDetails:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        username:
          type: string
      example:
        name: name
        email: email
        username: username
    infra_v2.Volumes:
      type: object
      properties:
        name:
          type: string
        sizeLimit:
          type: string
      example:
        sizeLimit: sizeLimit
        name: name
    inputset.InputSet:
      required:
      - accountID
      type: object
      properties:
        accountID:
          type: string
        createdAt:
          type: integer
          description: creation timestamp of the input set
        createdBy:
          type: string
          description: user ID of the user who created the input set
        description:
          type: string
          description: Description of the input set
        experimentID:
          type: string
          description: Foreign key to link with experiment
        id:
          type: string
          description: Mongo ID (primary key)
        identity:
          type: string
          description: Human readable ID
        isRemoved:
          type: boolean
          description: "TODO: this is not needed, and on delete, input set should\
            \ be deleted from the DB, makes no sense for storing for audit purpose"
        name:
          type: string
          description: Name of the input set
        orgID:
          type: string
        projectID:
          type: string
        spec:
          type: string
          description: |-
            Type of input set
            Type string `bson:"type"`
            Foreign key to link with probes
            TODO: not sure if required
            ProbeID string `bson:"probe_id"`
            For fault level variables, key = step
        updatedAt:
          type: integer
          description: updation timestamp of the input set
        updatedBy:
          type: string
          description: user ID of the user who updated the input set
        version:
          type: string
          description: Version
      example:
        updatedBy: updatedBy
        description: description
        version: version
        orgID: orgID
        spec: spec
        accountID: accountID
        createdAt: 0
        isRemoved: true
        createdBy: createdBy
        identity: identity
        name: name
        experimentID: experimentID
        id: id
        projectID: projectID
        updatedAt: 6
    inputsets.CreateInputSetRequest:
      type: object
      properties:
        description:
          type: string
        identity:
          type: string
        name:
          type: string
        spec:
          type: string
    inputsets.CreateInputSetResponse:
      type: object
      properties:
        correlationID:
          type: string
        data:
          $ref: "#/components/schemas/inputset.InputSet"
      example:
        data:
          updatedBy: updatedBy
          description: description
          version: version
          orgID: orgID
          spec: spec
          accountID: accountID
          createdAt: 0
          isRemoved: true
          createdBy: createdBy
          identity: identity
          name: name
          experimentID: experimentID
          id: id
          projectID: projectID
          updatedAt: 6
        correlationID: correlationID
    inputsets.DeleteInputSetResponse:
      type: object
      properties:
        correlationID:
          type: string
      example:
        correlationID: correlationID
    inputsets.GetInputSetResponse:
      type: object
      properties:
        correlationID:
          type: string
        data:
          $ref: "#/components/schemas/inputset.InputSet"
      example:
        data:
          updatedBy: updatedBy
          description: description
          version: version
          orgID: orgID
          spec: spec
          accountID: accountID
          createdAt: 0
          isRemoved: true
          createdBy: createdBy
          identity: identity
          name: name
          experimentID: experimentID
          id: id
          projectID: projectID
          updatedAt: 6
        correlationID: correlationID
    inputsets.ListInputSetResponse:
      type: object
      properties:
        correlationID:
          type: string
        data:
          type: array
          items:
            $ref: "#/components/schemas/inputset.InputSet"
        pagination:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_api.Pagination"
      example:
        pagination:
          totalItems: 2
          limit: 5
          totalPages: 7
          index: 5
        data:
        - updatedBy: updatedBy
          description: description
          version: version
          orgID: orgID
          spec: spec
          accountID: accountID
          createdAt: 0
          isRemoved: true
          createdBy: createdBy
          identity: identity
          name: name
          experimentID: experimentID
          id: id
          projectID: projectID
          updatedAt: 6
        - updatedBy: updatedBy
          description: description
          version: version
          orgID: orgID
          spec: spec
          accountID: accountID
          createdAt: 0
          isRemoved: true
          createdBy: createdBy
          identity: identity
          name: name
          experimentID: experimentID
          id: id
          projectID: projectID
          updatedAt: 6
        correlationID: correlationID
    inputsets.UpdateInputSetRequest:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        spec:
          type: string
    inputsets.UpdateInputSetResponse:
      type: object
      properties:
        correlationID:
          type: string
        data:
          $ref: "#/components/schemas/inputset.InputSet"
      example:
        data:
          updatedBy: updatedBy
          description: description
          version: version
          orgID: orgID
          spec: spec
          accountID: accountID
          createdAt: 0
          isRemoved: true
          createdBy: createdBy
          identity: identity
          name: name
          experimentID: experimentID
          id: id
          projectID: projectID
          updatedAt: 6
        correlationID: correlationID
    intstr.IntOrString:
      type: object
      properties:
        intVal:
          type: integer
        strVal:
          type: string
        type:
          $ref: "#/components/schemas/intstr.Type"
    intstr.Type:
      type: integer
      enum:
      - 0
      - 1
      x-enum-comments:
        Int: The IntOrString holds an int.
        String: The IntOrString holds a string.
      x-enum-varnames:
      - Int
      - String
    k8s_io_apimachinery_pkg_apis_meta_v1.ConditionStatus:
      type: string
      enum:
      - "True"
      - "False"
      - Unknown
      x-enum-varnames:
      - ConditionTrue
      - ConditionFalse
      - ConditionUnknown
    k8sfault.ApplicationTarget:
      type: object
      properties:
        application:
          type: string
        entrypoint:
          type: string
      example:
        application: application
        entrypoint: entrypoint
    k8sfault.ChaosParameter:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      example:
        name: name
        value: value
    k8sfault.ChaosSpec:
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
        args:
          type: array
          items:
            type: string
        command:
          type: array
          items:
            type: string
        configMapVolume:
          type: array
          items:
            $ref: "#/components/schemas/k8sfault.ConfigMapVolume"
        containerSecurityContext:
          $ref: "#/components/schemas/v1.SecurityContext"
        env:
          type: array
          items:
            $ref: "#/components/schemas/v1.EnvVar"
        faultName:
          type: string
        hostIPC:
          type: boolean
        hostNetwork:
          type: boolean
        hostPID:
          type: boolean
        hostPathVolume:
          type: array
          items:
            $ref: "#/components/schemas/k8sfault.HostPathVolume"
        image:
          type: string
        imagePullPolicy:
          $ref: "#/components/schemas/v1.PullPolicy"
        imagePullSecrets:
          type: array
          items:
            type: string
        labels:
          type: object
          additionalProperties:
            type: string
        nodeSelector:
          type: object
          additionalProperties:
            type: string
        params:
          type: array
          items:
            $ref: "#/components/schemas/k8sfault.ChaosParameter"
        podSecurityContext:
          $ref: "#/components/schemas/v1.PodSecurityContext"
        resourceRequirements:
          $ref: "#/components/schemas/k8sfault.ResourceRequirements"
        secretVolume:
          type: array
          items:
            $ref: "#/components/schemas/k8sfault.SecretVolume"
        toleration:
          $ref: "#/components/schemas/v1.Toleration"
      example:
        image: image
        imagePullPolicy: Always
        hostNetwork: true
        podSecurityContext:
          runAsUser: 7
          seLinuxOptions: ""
          fsGroup: 5
          seccompProfile: ""
          windowsOptions: ""
          fsGroupChangePolicy: ""
          supplementalGroups:
          - 9
          - 9
          runAsGroup: 2
          runAsNonRoot: true
          sysctls:
          - name: name
            value: value
          - name: name
            value: value
        imagePullSecrets:
        - imagePullSecrets
        - imagePullSecrets
        hostIPC: true
        annotations:
          key: annotations
        toleration:
          effect: ""
          tolerationSeconds: 2
          value: value
          key: key
          operator: ""
        secretVolume:
        - mountPath: mountPath
          mountMode: 3
          name: name
        - mountPath: mountPath
          mountMode: 3
          name: name
        env:
        - name: name
          value: value
          valueFrom: ""
        - name: name
          value: value
          valueFrom: ""
        params:
        - name: name
          value: value
        - name: name
          value: value
        command:
        - command
        - command
        faultName: faultName
        labels:
          key: labels
        nodeSelector:
          key: nodeSelector
        args:
        - args
        - args
        configMapVolume:
        - mountPath: mountPath
          mountMode: 6
          name: name
        - mountPath: mountPath
          mountMode: 6
          name: name
        resourceRequirements:
          requests:
            key: requests
          limits:
            key: limits
        containerSecurityContext:
          privileged: true
          runAsUser: 5
          capabilities: ""
          seLinuxOptions: ""
          seccompProfile: ""
          windowsOptions: ""
          procMount: ""
          allowPrivilegeEscalation: true
          runAsGroup: 1
          runAsNonRoot: true
          readOnlyRootFilesystem: true
        hostPathVolume:
        - mountPath: mountPath
          name: name
          type: ""
          hostPath: hostPath
        - mountPath: mountPath
          name: name
          type: ""
          hostPath: hostPath
        hostPID: true
    k8sfault.ConfigMapVolume:
      type: object
      properties:
        mountMode:
          type: integer
        mountPath:
          type: string
        name:
          type: string
      example:
        mountPath: mountPath
        mountMode: 6
        name: name
    k8sfault.HostPathVolume:
      type: object
      properties:
        hostPath:
          type: string
        mountPath:
          type: string
        name:
          type: string
        type:
          $ref: "#/components/schemas/v1.HostPathType"
      example:
        mountPath: mountPath
        name: name
        type: ""
        hostPath: hostPath
    k8sfault.K8SFault:
      type: object
      properties:
        description:
          type: string
        identity:
          type: string
        infras:
          type: array
          items:
            type: string
        keywords:
          type: array
          items:
            type: string
        name:
          type: string
        platforms:
          type: array
          items:
            type: string
        revision:
          type: integer
        spec:
          $ref: "#/components/schemas/k8sfault.K8SFaultSpec"
        tags:
          type: array
          items:
            type: string
        variables:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
      example:
        variables:
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        keywords:
        - keywords
        - keywords
        identity: identity
        infras:
        - infras
        - infras
        name: name
        description: description
        spec:
          chaos:
            image: image
            imagePullPolicy: Always
            hostNetwork: true
            podSecurityContext:
              runAsUser: 7
              seLinuxOptions: ""
              fsGroup: 5
              seccompProfile: ""
              windowsOptions: ""
              fsGroupChangePolicy: ""
              supplementalGroups:
              - 9
              - 9
              runAsGroup: 2
              runAsNonRoot: true
              sysctls:
              - name: name
                value: value
              - name: name
                value: value
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            hostIPC: true
            annotations:
              key: annotations
            toleration:
              effect: ""
              tolerationSeconds: 2
              value: value
              key: key
              operator: ""
            secretVolume:
            - mountPath: mountPath
              mountMode: 3
              name: name
            - mountPath: mountPath
              mountMode: 3
              name: name
            env:
            - name: name
              value: value
              valueFrom: ""
            - name: name
              value: value
              valueFrom: ""
            params:
            - name: name
              value: value
            - name: name
              value: value
            command:
            - command
            - command
            faultName: faultName
            labels:
              key: labels
            nodeSelector:
              key: nodeSelector
            args:
            - args
            - args
            configMapVolume:
            - mountPath: mountPath
              mountMode: 6
              name: name
            - mountPath: mountPath
              mountMode: 6
              name: name
            resourceRequirements:
              requests:
                key: requests
              limits:
                key: limits
            containerSecurityContext:
              privileged: true
              runAsUser: 5
              capabilities: ""
              seLinuxOptions: ""
              seccompProfile: ""
              windowsOptions: ""
              procMount: ""
              allowPrivilegeEscalation: true
              runAsGroup: 1
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            hostPathVolume:
            - mountPath: mountPath
              name: name
              type: ""
              hostPath: hostPath
            - mountPath: mountPath
              name: name
              type: ""
              hostPath: hostPath
            hostPID: true
          target:
            applicationSDK:
              application: application
              entrypoint: entrypoint
            k8sResource:
            - names: names
              kind: kind
              namespace: namespace
              labels: labels
            - names: names
              kind: kind
              namespace: namespace
              labels: labels
        platforms:
        - platforms
        - platforms
        revision: 0
        tags:
        - tags
        - tags
    k8sfault.K8SFaultSpec:
      type: object
      properties:
        chaos:
          $ref: "#/components/schemas/k8sfault.ChaosSpec"
        target:
          $ref: "#/components/schemas/k8sfault.Target"
      example:
        chaos:
          image: image
          imagePullPolicy: Always
          hostNetwork: true
          podSecurityContext:
            runAsUser: 7
            seLinuxOptions: ""
            fsGroup: 5
            seccompProfile: ""
            windowsOptions: ""
            fsGroupChangePolicy: ""
            supplementalGroups:
            - 9
            - 9
            runAsGroup: 2
            runAsNonRoot: true
            sysctls:
            - name: name
              value: value
            - name: name
              value: value
          imagePullSecrets:
          - imagePullSecrets
          - imagePullSecrets
          hostIPC: true
          annotations:
            key: annotations
          toleration:
            effect: ""
            tolerationSeconds: 2
            value: value
            key: key
            operator: ""
          secretVolume:
          - mountPath: mountPath
            mountMode: 3
            name: name
          - mountPath: mountPath
            mountMode: 3
            name: name
          env:
          - name: name
            value: value
            valueFrom: ""
          - name: name
            value: value
            valueFrom: ""
          params:
          - name: name
            value: value
          - name: name
            value: value
          command:
          - command
          - command
          faultName: faultName
          labels:
            key: labels
          nodeSelector:
            key: nodeSelector
          args:
          - args
          - args
          configMapVolume:
          - mountPath: mountPath
            mountMode: 6
            name: name
          - mountPath: mountPath
            mountMode: 6
            name: name
          resourceRequirements:
            requests:
              key: requests
            limits:
              key: limits
          containerSecurityContext:
            privileged: true
            runAsUser: 5
            capabilities: ""
            seLinuxOptions: ""
            seccompProfile: ""
            windowsOptions: ""
            procMount: ""
            allowPrivilegeEscalation: true
            runAsGroup: 1
            runAsNonRoot: true
            readOnlyRootFilesystem: true
          hostPathVolume:
          - mountPath: mountPath
            name: name
            type: ""
            hostPath: hostPath
          - mountPath: mountPath
            name: name
            type: ""
            hostPath: hostPath
          hostPID: true
        target:
          applicationSDK:
            application: application
            entrypoint: entrypoint
          k8sResource:
          - names: names
            kind: kind
            namespace: namespace
            labels: labels
          - names: names
            kind: kind
            namespace: namespace
            labels: labels
    k8sfault.K8STarget:
      type: object
      properties:
        kind:
          type: string
        labels:
          type: string
        names:
          type: string
        namespace:
          type: string
      example:
        names: names
        kind: kind
        namespace: namespace
        labels: labels
    k8sfault.ResourceRequirements:
      type: object
      properties:
        limits:
          type: object
          additionalProperties:
            type: string
        requests:
          type: object
          additionalProperties:
            type: string
      example:
        requests:
          key: requests
        limits:
          key: limits
    k8sfault.SecretVolume:
      type: object
      properties:
        mountMode:
          type: integer
        mountPath:
          type: string
        name:
          type: string
      example:
        mountPath: mountPath
        mountMode: 3
        name: name
    k8sfault.Target:
      type: object
      properties:
        applicationSDK:
          $ref: "#/components/schemas/k8sfault.ApplicationTarget"
        k8sResource:
          type: array
          items:
            $ref: "#/components/schemas/k8sfault.K8STarget"
      example:
        applicationSDK:
          application: application
          entrypoint: entrypoint
        k8sResource:
        - names: names
          kind: kind
          namespace: namespace
          labels: labels
        - names: names
          kind: kind
          namespace: namespace
          labels: labels
    k8sinfra.GetInfraTokenResponse:
      type: object
      properties:
        token:
          type: string
      example:
        token: token
    k8sinfra.UpdateEmissaryURLRequest:
      type: object
      properties:
        url:
          type: string
    k8sinfra.UpdateEmissaryURLResponse:
      type: object
    model.ClusterType:
      type: string
      enum:
      - KUBERNETES
      - OPENSHIFT
      - HELM
      x-enum-varnames:
      - ClusterTypeKubernetes
      - ClusterTypeOpenshift
      - ClusterTypeHelm
    model.ConditionDetails:
      type: object
      properties:
        conditionId:
          type: string
        conditionName:
          type: string
        message:
          type: string
        phase:
          $ref: "#/components/schemas/model.SecurityGovernancePhase"
    model.EventMetadata:
      type: object
      properties:
        environmentIdentifier:
          type: array
          items:
            type: string
        faultName:
          type: string
        serviceIdentifier:
          type: array
          items:
            type: string
      example:
        environmentIdentifier:
        - environmentIdentifier
        - environmentIdentifier
        faultName: faultName
        serviceIdentifier:
        - serviceIdentifier
        - serviceIdentifier
    model.InfraScope:
      type: string
      enum:
      - namespace
      - cluster
      x-enum-varnames:
      - InfraScopeNamespace
      - InfraScopeCluster
    model.Infrastructure:
      type: object
      properties:
        clusterType:
          type: object
          description: Cluster type Indicates the type on infrastructure (Kubernetes/openshift)
          allOf:
          - $ref: "#/components/schemas/model.ClusterType"
        createdAt:
          type: string
          description: Timestamp when the workflow was created
        createdBy:
          type: object
          description: User who created the workflow
          allOf:
          - $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
        description:
          type: string
          description: Description of the workflow
        environmentID:
          type: string
          description: Environment ID where infra is installed
        identifiers:
          type: object
          description: Harness identifiers
          allOf:
          - $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.Identifiers"
        infraID:
          type: string
          description: ID of the infra
        infraNamespace:
          type: string
          description: Namespace where the infra is being installed
        infraScope:
          type: object
          description: "Scope of the infra : ns or cluster"
          allOf:
          - $ref: "#/components/schemas/model.InfraScope"
        infraType:
          type: object
          description: Type of infrastructure
          allOf:
          - $ref: "#/components/schemas/model.InfrastructureType"
        isActive:
          type: boolean
          description: Bool value to check if infra is active
        isInfraConfirmed:
          type: boolean
          description: Bool value to check if infra is confirmed
        isRemoved:
          type: boolean
          description: Bool value indicating if the workflow has removed
        lastHeartbeat:
          type: string
          description: Last received heartbeat of infrastructure
        name:
          type: string
          description: Name of the workflow
        startTime:
          type: string
          description: Time when infra became active
        tags:
          type: array
          description: Tags of the workflow
          items:
            type: string
        updatedAt:
          type: string
          description: Timestamp when the workflow was last updated
        updatedBy:
          type: object
          description: Details of the user who updated the workflow
          allOf:
          - $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
        version:
          type: string
          description: Version of infrastructure
    model.InfrastructureType:
      type: string
      enum:
      - Kubernetes
      - KubernetesV2
      - Windows
      - Linux
      - CloudFoundry
      - Container
      x-enum-varnames:
      - InfrastructureTypeKubernetes
      - InfrastructureTypeKubernetesV2
      - InfrastructureTypeWindows
      - InfrastructureTypeLinux
      - InfrastructureTypeCloudFoundry
      - InfrastructureTypeContainer
    model.InstallationType:
      type: string
      enum:
      - CONNECTOR
      - MANIFEST
      - CONNECTORV2
      x-enum-varnames:
      - InstallationTypeConnector
      - InstallationTypeManifest
      - InstallationTypeConnectorv2
    model.KubernetesInfra:
      type: object
      properties:
        clusterType:
          type: object
          description: Cluster type Indicates the type on infrastructure (Kubernetes/openshift)
          allOf:
          - $ref: "#/components/schemas/model.ClusterType"
        createdAt:
          type: string
          description: Timestamp when the infra was created
        createdBy:
          type: object
          description: User who created the infra
          allOf:
          - $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
        description:
          type: string
          description: Description of the infra
        environmentID:
          type: string
          description: Environment ID for the infra
        infraID:
          type: string
          description: ID of the infra
        infraNamespace:
          type: string
          description: Namespace where the infra is being installed
        infraNsExists:
          type: boolean
          description: Bool value indicating whether infra ns used already exists
            on infra or not
        infraSaExists:
          type: boolean
          description: Bool value indicating whether service account used already
            exists on infra or not
        infraScope:
          type: object
          description: "Scope of the infra : ns or cluster"
          allOf:
          - $ref: "#/components/schemas/model.InfraScope"
        infraType:
          type: object
          description: Type of the infrastructure
          allOf:
          - $ref: "#/components/schemas/model.InfrastructureType"
        installationType:
          type: object
          description: InstallationType connector/manifest
          allOf:
          - $ref: "#/components/schemas/model.InstallationType"
        isActive:
          type: boolean
          description: Boolean value indicating if chaos infrastructure is active
            or not
        isInfraConfirmed:
          type: boolean
          description: Boolean value indicating if chaos infrastructure is confirmed
            or not
        isRemoved:
          type: boolean
          description: Boolean value indicating if chaos infrastructure is removed
            or not
        isSecretEnabled:
          type: boolean
          description: Tune secret for infra
        k8sConnectorID:
          type: string
          description: K8sConnectorID
        lastHeartbeat:
          type: string
          description: Last Heartbeat status sent by the infra
        lastWorkflowTimestamp:
          type: string
          description: Timestamp of the last workflow run in the infra
        name:
          type: string
          description: Name of the infra
        noOfSchedules:
          type: integer
          description: Number of schedules created in the infra
        noOfWorkflows:
          type: integer
          description: Number of workflows run in the infra
        platformName:
          type: string
          description: "Infra Platform Name eg. GKE,AWS, Others"
        runAsGroup:
          type: integer
          description: set the user group for security context in pod
        runAsUser:
          type: integer
          description: set the user for security context in pod
        serviceAccount:
          type: string
          description: Name of service account used by infra
        startTime:
          type: string
          description: Timestamp when the infra got connected
        tags:
          type: array
          description: Tags of the infra
          items:
            type: string
        token:
          type: string
          description: Token used to verify and retrieve the infra manifest
        updateStatus:
          type: object
          description: update status of infra
          allOf:
          - $ref: "#/components/schemas/model.UpdateStatus"
        updatedAt:
          type: string
          description: Timestamp when the infra was last updated
        updatedBy:
          type: object
          description: User who has updated the infra
          allOf:
          - $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
        upgrade:
          type: object
          description: Upgrade struct for the chaos infrastructure
          allOf:
          - $ref: "#/components/schemas/model.Upgrade"
        version:
          type: string
          description: Version of the infra
      example:
        isSecretEnabled: true
        k8sConnectorID: k8sConnectorID
        lastHeartbeat: lastHeartbeat
        noOfWorkflows: 6
        description: description
        isActive: true
        createdAt: createdAt
        isRemoved: true
        infraNsExists: true
        startTime: startTime
        platformName: platformName
        infraID: infraID
        isInfraConfirmed: true
        updatedAt: updatedAt
        clusterType: ""
        noOfSchedules: 0
        updatedBy: ""
        upgrade: ""
        infraNamespace: infraNamespace
        infraSaExists: true
        serviceAccount: serviceAccount
        version: version
        lastWorkflowTimestamp: lastWorkflowTimestamp
        runAsGroup: 1
        infraScope: ""
        tags:
        - tags
        - tags
        token: token
        runAsUser: 5
        environmentID: environmentID
        installationType: ""
        createdBy: ""
        updateStatus: ""
        name: name
        infraType: ""
    model.ListInfraRequest:
      type: object
      properties:
        environmentIDs:
          type: array
          description: Environment ID
          items:
            type: string
        filter:
          type: object
          description: Details for fetching filtered data
          allOf:
          - $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.InfraFilterInput"
        infraIDs:
          type: array
          description: Array of infra IDs for which details will be fetched
          items:
            type: string
        k8sConnectorIDs:
          type: array
          description: Connector ID
          items:
            type: string
        pagination:
          type: object
          description: Details for fetching paginated data
          allOf:
          - $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.Pagination"
    model.ListInfraResponse:
      type: object
      properties:
        infras:
          type: array
          description: Details related to the infras
          items:
            $ref: "#/components/schemas/model.KubernetesInfra"
        totalNoOfInfras:
          type: integer
          description: Total number of infras
      example:
        infras:
        - isSecretEnabled: true
          k8sConnectorID: k8sConnectorID
          lastHeartbeat: lastHeartbeat
          noOfWorkflows: 6
          description: description
          isActive: true
          createdAt: createdAt
          isRemoved: true
          infraNsExists: true
          startTime: startTime
          platformName: platformName
          infraID: infraID
          isInfraConfirmed: true
          updatedAt: updatedAt
          clusterType: ""
          noOfSchedules: 0
          updatedBy: ""
          upgrade: ""
          infraNamespace: infraNamespace
          infraSaExists: true
          serviceAccount: serviceAccount
          version: version
          lastWorkflowTimestamp: lastWorkflowTimestamp
          runAsGroup: 1
          infraScope: ""
          tags:
          - tags
          - tags
          token: token
          runAsUser: 5
          environmentID: environmentID
          installationType: ""
          createdBy: ""
          updateStatus: ""
          name: name
          infraType: ""
        - isSecretEnabled: true
          k8sConnectorID: k8sConnectorID
          lastHeartbeat: lastHeartbeat
          noOfWorkflows: 6
          description: description
          isActive: true
          createdAt: createdAt
          isRemoved: true
          infraNsExists: true
          startTime: startTime
          platformName: platformName
          infraID: infraID
          isInfraConfirmed: true
          updatedAt: updatedAt
          clusterType: ""
          noOfSchedules: 0
          updatedBy: ""
          upgrade: ""
          infraNamespace: infraNamespace
          infraSaExists: true
          serviceAccount: serviceAccount
          version: version
          lastWorkflowTimestamp: lastWorkflowTimestamp
          runAsGroup: 1
          infraScope: ""
          tags:
          - tags
          - tags
          token: token
          runAsUser: 5
          environmentID: environmentID
          installationType: ""
          createdBy: ""
          updateStatus: ""
          name: name
          infraType: ""
        totalNoOfInfras: 5
    model.ProbeMap:
      type: object
      properties:
        faultName:
          type: string
        probeName:
          type: array
          items:
            type: string
      example:
        probeName:
        - probeName
        - probeName
        faultName: faultName
    model.ReRunChaosWorkflowResponse:
      type: object
      properties:
        notifyID:
          type: string
      example:
        notifyID: notifyID
    model.RecentWorkflowRun:
      type: object
      properties:
        createdAt:
          type: string
          description: Timestamp when the workflow was created
        createdBy:
          type: object
          description: User who created the workflow run
          allOf:
          - $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
        notifyID:
          type: string
          description: Notify ID for workflow run
        phase:
          type: string
          description: Phase of the workflow run
        resiliencyScore:
          type: number
          description: Resiliency score of the workflow
        runSequence:
          type: integer
          description: runSequence is the sequence number of experiment run
        updatedAt:
          type: string
          description: Timestamp when the workflow was last updated
        updatedBy:
          type: object
          description: User who updated the workflow run
          allOf:
          - $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
        workflowRunID:
          type: string
          description: ID of the workflow run which is to be queried
      example:
        phase: phase
        createdAt: createdAt
        resiliencyScore: 1.4658129805029452
        updatedBy: ""
        createdBy: ""
        runSequence: 5
        notifyID: notifyID
        workflowRunID: workflowRunID
        updatedAt: updatedAt
    model.Recurrence:
      type: object
      properties:
        spec:
          $ref: "#/components/schemas/model.RecurrenceSpec"
        type:
          $ref: "#/components/schemas/model.RecurrenceType"
    model.RecurrenceSpec:
      type: object
      properties:
        until:
          type: integer
        value:
          type: integer
    model.RecurrenceType:
      type: string
      enum:
      - Yearly
      - Monthly
      - Daily
      - Weekly
      - None
      x-enum-varnames:
      - RecurrenceTypeYearly
      - RecurrenceTypeMonthly
      - RecurrenceTypeDaily
      - RecurrenceTypeWeekly
      - RecurrenceTypeNone
    model.RuleDetails:
      type: object
      properties:
        conditions:
          type: array
          items:
            $ref: "#/components/schemas/model.ConditionDetails"
        description:
          type: string
        message:
          type: string
        ruleId:
          type: string
        ruleName:
          type: string
        timeWindow:
          $ref: "#/components/schemas/model.TimeWindow"
        userGroupIds:
          type: array
          items:
            type: string
    model.SecurityGovernance:
      type: object
      properties:
        finishedAt:
          type: integer
        message:
          type: string
        name:
          type: string
        phase:
          $ref: "#/components/schemas/model.SecurityGovernancePhase"
        securityGovernanceNodeData:
          $ref: "#/components/schemas/model.SecurityGovernanceNodeData"
        startedAt:
          type: integer
        type:
          type: string
    model.SecurityGovernanceNodeData:
      type: object
      properties:
        failedRules:
          type: array
          items:
            $ref: "#/components/schemas/model.RuleDetails"
        passedRules:
          type: array
          items:
            $ref: "#/components/schemas/model.RuleDetails"
        skippedRules:
          type: array
          items:
            $ref: "#/components/schemas/model.RuleDetails"
    model.SecurityGovernancePhase:
      type: string
      enum:
      - Passed
      - Failed
      x-enum-varnames:
      - SecurityGovernancePhasePassed
      - SecurityGovernancePhaseFailed
    model.TimeWindow:
      type: object
      properties:
        duration:
          type: string
        endTime:
          type: integer
        recurrence:
          $ref: "#/components/schemas/model.Recurrence"
        startTime:
          type: integer
        timeZone:
          type: string
    model.UpdateStatus:
      type: string
      enum:
      - AVAILABLE
      - MANDATORY
      - NOT_REQUIRED
      x-enum-varnames:
      - UpdateStatusAvailable
      - UpdateStatusMandatory
      - UpdateStatusNotRequired
    model.Upgrade:
      type: object
      properties:
        isAutoUpgradeEnabled:
          type: boolean
        status:
          $ref: "#/components/schemas/model.UpgradeStatus"
    model.UpgradeStatus:
      type: string
      enum:
      - UPGRADING_INFRA
      - UPGRADE_SKIPPED
      - UPGRADE_SUCCESSFUL
      - UPGRADE_FAILED
      - DETECTING_UPGRADER
      - UPGRADER_DISABLED
      x-enum-varnames:
      - UpgradeStatusUpgradingInfra
      - UpgradeStatusUpgradeSkipped
      - UpgradeStatusUpgradeSuccessful
      - UpgradeStatusUpgradeFailed
      - UpgradeStatusDetectingUpgrader
      - UpgradeStatusUpgraderDisabled
    model.Weightages:
      type: object
      properties:
        experimentName:
          type: string
          description: Name of the experiment
        weightage:
          type: integer
          description: Weightage of the experiment
      example:
        weightage: 3
        experimentName: experimentName
    model.WorkflowRun:
      type: object
      properties:
        createdAt:
          type: string
          description: Timestamp at which workflow run was created
        createdBy:
          type: object
          description: User who has created the experiment run
          allOf:
          - $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
        cronSyntax:
          type: string
          description: Cron syntax of the workflow schedule
        errorResponse:
          type: string
          description: Error Response is the reason why experiment failed to run
        executionData:
          type: string
          description: Stores all the workflow run details related to the nodes of
            DAG graph and chaos results of the experiments
        experimentType:
          type: string
          description: experimentType is the type of experiment run
        experimentsAwaited:
          type: integer
          description: Number of experiments awaited
        experimentsFailed:
          type: integer
          description: Number of experiments failed
        experimentsNa:
          type: integer
          description: Number of experiments which are not available
        experimentsPassed:
          type: integer
          description: Number of experiments passed
        experimentsStopped:
          type: integer
          description: Number of experiments stopped
        identifiers:
          type: object
          description: Harness identifiers
          allOf:
          - $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.Identifiers"
        infra:
          type: object
          description: Target infra in which the workflow will run
          allOf:
          - $ref: "#/components/schemas/model.Infrastructure"
        isCronEnabled:
          type: boolean
          description: If cron is enabled or disabled
        isRemoved:
          type: boolean
          description: Bool value indicating if the workflow run has removed
        isSingleRunCronEnabled:
          type: boolean
          description: Flag to check if single run status is enabled or not
        notifyID:
          type: string
          description: Notify ID of the experiment run
        phase:
          type: object
          description: Phase of the workflow run
          allOf:
          - $ref: "#/components/schemas/model.WorkflowRunStatus"
        probe:
          type: array
          description: Probe object containing reference of probeIDs
          items:
            $ref: "#/components/schemas/model.ProbeMap"
        resiliencyScore:
          type: number
          description: Resiliency score of the workflow
        runSequence:
          type: integer
          description: runSequence is the sequence number of experiment run
        securityGovernance:
          type: object
          description: Security Governance details of the workflow run
          allOf:
          - $ref: "#/components/schemas/model.SecurityGovernance"
        totalExperiments:
          type: integer
          description: Total number of experiments
        updatedAt:
          type: string
          description: Timestamp at which workflow run was last updated
        updatedBy:
          type: object
          description: User who has updated the workflow
          allOf:
          - $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
        weightages:
          type: array
          description: Array containing weightage and name of each chaos experiment
            in the workflow
          items:
            $ref: "#/components/schemas/model.Weightages"
        workflowDescription:
          type: string
          description: Description of the workflow
        workflowID:
          type: string
          description: ID of the workflow
        workflowManifest:
          type: string
          description: Manifest of the workflow run
        workflowName:
          type: string
          description: Name of the workflow
        workflowRunID:
          type: string
          description: ID of the workflow run which is to be queried
        workflowTags:
          type: array
          description: Tag of the workflow
          items:
            type: string
        workflowType:
          type: string
          description: Type of the workflow
      example:
        experimentsPassed: 5
        isCronEnabled: true
        securityGovernance: ""
        workflowManifest: workflowManifest
        experimentsAwaited: 0
        executionData: executionData
        experimentType: experimentType
        experimentsNa: 1
        createdAt: createdAt
        isRemoved: true
        experimentsStopped: 5
        notifyID: notifyID
        workflowType: workflowType
        workflowID: workflowID
        updatedAt: updatedAt
        phase: ""
        resiliencyScore: 2.3021358869347655
        updatedBy: ""
        weightages:
        - weightage: 3
          experimentName: experimentName
        - weightage: 3
          experimentName: experimentName
        identifiers: ""
        isSingleRunCronEnabled: true
        workflowName: workflowName
        infra: ""
        workflowDescription: workflowDescription
        errorResponse: errorResponse
        probe:
        - probeName:
          - probeName
          - probeName
          faultName: faultName
        - probeName:
          - probeName
          - probeName
          faultName: faultName
        createdBy: ""
        runSequence: 7
        experimentsFailed: 6
        workflowTags:
        - workflowTags
        - workflowTags
        workflowRunID: workflowRunID
        cronSyntax: cronSyntax
        totalExperiments: 9
    model.WorkflowRunStatus:
      type: string
      enum:
      - All
      - Running
      - Completed
      - Completed_With_Error
      - Completed_With_Probe_Failure
      - Stopped
      - Skipped
      - Error
      - Timeout
      - NA
      - Queued
      - Blocked
      x-enum-varnames:
      - WorkflowRunStatusAll
      - WorkflowRunStatusRunning
      - WorkflowRunStatusCompleted
      - WorkflowRunStatusCompletedWithError
      - WorkflowRunStatusCompletedWithProbeFailure
      - WorkflowRunStatusStopped
      - WorkflowRunStatusSkipped
      - WorkflowRunStatusError
      - WorkflowRunStatusTimeout
      - WorkflowRunStatusNa
      - WorkflowRunStatusQueued
      - WorkflowRunStatusBlocked
    model.WorkflowType:
      type: string
      enum:
      - All
      - GamedayWorkflow
      - Workflow
      - CronWorkflow
      - ChaosEngine
      - ChaosSchedule
      x-enum-varnames:
      - WorkflowTypeAll
      - WorkflowTypeGamedayWorkflow
      - WorkflowTypeWorkflow
      - WorkflowTypeCronWorkflow
      - WorkflowTypeChaosEngine
      - WorkflowTypeChaosSchedule
    networkmap.CanRetryExperimentCreationResponse:
      type: object
      properties:
        result:
          type: boolean
      example:
        result: true
    networkmap.GetTargetNetworkMapResponse:
      required:
      - accountID
      - isRemoved
      type: object
      properties:
        accountID:
          type: string
        agentIdentity:
          type: string
        averageResiliencyScore:
          type: number
        connections:
          type: array
          items:
            $ref: "#/components/schemas/database.Connection"
        createdAt:
          type: integer
        createdBy:
          type: string
        environmentRef:
          type: string
        errorMessage:
          type: string
        experimentCreationMode:
          $ref: "#/components/schemas/targetnetworkmap.ExperimentCreationMode"
        id:
          type: string
        identity:
          type: string
        infrastructureId:
          type: string
        isRemoved:
          type: boolean
        name:
          type: string
        onboardingID:
          type: string
        orgID:
          type: string
        projectID:
          type: string
        recentExperimentRunsDetails:
          type: array
          items:
            $ref: "#/components/schemas/targetnetworkmap.ExperimentRunDetail"
        resiliencyCoverage:
          type: number
        serviceIDs:
          type: array
          items:
            type: string
        services:
          type: array
          items:
            $ref: "#/components/schemas/networkmap.TargetServiceDetails"
        status:
          $ref: "#/components/schemas/targetnetworkmap.Status"
        targetNetworkMapID:
          type: string
        totalExperimentCount:
          type: integer
        totalExperimentRunCount:
          type: integer
        updatedAt:
          type: integer
        updatedBy:
          type: string
      example:
        totalExperimentCount: 2
        environmentRef: environmentRef
        agentIdentity: agentIdentity
        accountID: accountID
        createdAt: 6
        serviceIDs:
        - serviceIDs
        - serviceIDs
        isRemoved: true
        identity: identity
        id: id
        recentExperimentRunsDetails:
        - phase: phase
          createdAt: 1
          experimentRunID: experimentRunID
          isRemoved: true
          resiliencyScore: 5.962133916683182
          targetService:
          - uid: uid
            name: name
            namespace: namespace
            id: id
          - uid: uid
            name: name
            namespace: namespace
            id: id
          updatedBy: updatedBy
          createdBy: createdBy
          name: name
          notifyID: notifyID
          completed: true
          updatedAt: 5
        - phase: phase
          createdAt: 1
          experimentRunID: experimentRunID
          isRemoved: true
          resiliencyScore: 5.962133916683182
          targetService:
          - uid: uid
            name: name
            namespace: namespace
            id: id
          - uid: uid
            name: name
            namespace: namespace
            id: id
          updatedBy: updatedBy
          createdBy: createdBy
          name: name
          notifyID: notifyID
          completed: true
          updatedAt: 5
        projectID: projectID
        connections:
        - port: port
          from:
            serviceIdentity:
              identifier: identifier
              organizationIdentifier: organizationIdentifier
              accountIdentifier: accountIdentifier
              projectIdentifier: projectIdentifier
            kubernetes:
              hasWorkload: true
              kind: kind
              namespace: namespace
            removed: true
            kind: K8SCustomService
            name: name
            id: id
          to: null
          manual: true
          params:
            key: params
          type: TCP
        - port: port
          from:
            serviceIdentity:
              identifier: identifier
              organizationIdentifier: organizationIdentifier
              accountIdentifier: accountIdentifier
              projectIdentifier: projectIdentifier
            kubernetes:
              hasWorkload: true
              kind: kind
              namespace: namespace
            removed: true
            kind: K8SCustomService
            name: name
            id: id
          to: null
          manual: true
          params:
            key: params
          type: TCP
        updatedAt: 9
        resiliencyCoverage: 1.4658129805029452
        averageResiliencyScore: 0.8008281904610115
        updatedBy: updatedBy
        errorMessage: errorMessage
        totalExperimentRunCount: 7
        services:
        - serviceIdentity: null
          kubernetes: null
          resiliencyCoverage: 5.637376656633329
          averageResiliencyScore: 5.962133916683182
          removed: true
          kind: null
          name: name
          id: id
        - serviceIdentity: null
          kubernetes: null
          resiliencyCoverage: 5.637376656633329
          averageResiliencyScore: 5.962133916683182
          removed: true
          kind: null
          name: name
          id: id
        orgID: orgID
        infrastructureId: infrastructureId
        createdBy: createdBy
        targetNetworkMapID: targetNetworkMapID
        experimentCreationMode: Basic
        name: name
        onboardingID: onboardingID
        status: COMPLETED
    networkmap.GetTargetServiceResponse:
      type: object
      properties:
        chaosDetails:
          $ref: "#/components/schemas/targetservice.TargetService"
        discoveryDetails:
          $ref: "#/components/schemas/database.ServiceCollection"
        workloadDetails:
          $ref: "#/components/schemas/database.DiscoveredServiceKubernetesSpec"
      example:
        workloadDetails:
          uid: uid
          kind: kind
          service:
            clusterIPs:
            - clusterIPs
            - clusterIPs
            externalIPs:
            - externalIPs
            - externalIPs
            loadBalancerIP: loadBalancerIP
            identity:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            externalName: externalName
            annotations:
              key: annotations
            ports:
            - protocol: ""
              port: 7
              appProtocol: appProtocol
              name: name
              nodePort: 2
              targetPort: ""
            - protocol: ""
              port: 7
              appProtocol: appProtocol
              name: name
              nodePort: 2
              targetPort: ""
            type: ClusterIP
            clusterIP: clusterIP
            labels:
              key: labels
          name: name
          namespace: namespace
          workloads:
          - podLabels:
              key: podLabels
            identity: null
            replicas:
            - phase: Pending
              identity: null
            - phase: Pending
              identity: null
            annotations:
              key: annotations
            podAnnotations:
              key: podAnnotations
            labels:
              key: labels
          - podLabels:
              key: podLabels
            identity: null
            replicas:
            - phase: Pending
              identity: null
            - phase: Pending
              identity: null
            annotations:
              key: annotations
            podAnnotations:
              key: podAnnotations
            labels:
              key: labels
        chaosDetails:
          totalExperimentCount: 5
          resiliencyCoverage: 1.4658129805029452
          averageResiliencyScore: 0.8008281904610115
          environmentRef: environmentRef
          updatedBy: updatedBy
          externalId: externalId
          type: DiscoveredService
          orgID: orgID
          spec:
            discoveredService:
              kind: kind
              name: name
              namespace: namespace
              id: id
              label:
                key: label
              uuid: uuid
          accountID: accountID
          createdAt: 6
          isRemoved: true
          infrastructureId: infrastructureId
          createdBy: createdBy
          name: name
          id: id
          licenseId: licenseId
          projectID: projectID
          updatedAt: 5
        discoveryDetails:
          environmentIdentifier: environmentIdentifier
          annotations:
            key: annotations
          accountIdentifier: accountIdentifier
          spec:
            clusterIPs:
            - clusterIPs
            - clusterIPs
            healthCheckNodePort: 0
            ipFamilyPolicy: ""
            externalIPs:
            - externalIPs
            - externalIPs
            sessionAffinity: ""
            allocateLoadBalancerNodePorts: true
            ports:
            - protocol: ""
              port: 7
              appProtocol: appProtocol
              name: name
              nodePort: 2
              targetPort: ""
            - protocol: ""
              port: 7
              appProtocol: appProtocol
              name: name
              nodePort: 2
              targetPort: ""
            type: ""
            loadBalancerClass: loadBalancerClass
            sessionAffinityConfig: ""
            ipFamilies:
            - IPv4
            - IPv4
            loadBalancerIP: loadBalancerIP
            externalName: externalName
            loadBalancerSourceRanges:
            - loadBalancerSourceRanges
            - loadBalancerSourceRanges
            externalTrafficPolicy: ""
            selector:
              key: selector
            publishNotReadyAddresses: true
            topologyKeys:
            - topologyKeys
            - topologyKeys
            internalTrafficPolicy: ""
            clusterIP: clusterIP
          deletionTimestamp: deletionTimestamp
          createdAt: createdAt
          uid: uid
          apiVersion: apiVersion
          organizationIdentifier: organizationIdentifier
          creationTimestamp: creationTimestamp
          id: id
          removedAt: removedAt
          updatedAt: updatedAt
          agentID: agentID
          updatedBy: updatedBy
          kind: kind
          resourceVersion: resourceVersion
          labels:
            key: labels
          removed: true
          createdBy: createdBy
          name: name
          namespace: namespace
          ownerReference:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          projectIdentifier: projectIdentifier
          status:
            loadBalancer: ""
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              observedGeneration: 6
              status: ""
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              observedGeneration: 6
              status: ""
    networkmap.ListTargetNetworkMapRequest:
      type: object
    networkmap.ListTargetNetworkMapResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/targetnetworkmap.TargetNetworkMap"
        page:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_api.Pagination"
      example:
        data:
        - totalExperimentCount: 7
          environmentRef: environmentRef
          agentIdentity: agentIdentity
          accountID: accountID
          createdAt: 6
          serviceIDs:
          - serviceIDs
          - serviceIDs
          isRemoved: true
          identity: identity
          id: id
          recentExperimentRunsDetails:
          - phase: phase
            createdAt: 1
            experimentRunID: experimentRunID
            isRemoved: true
            resiliencyScore: 5.962133916683182
            targetService:
            - uid: uid
              name: name
              namespace: namespace
              id: id
            - uid: uid
              name: name
              namespace: namespace
              id: id
            updatedBy: updatedBy
            createdBy: createdBy
            name: name
            notifyID: notifyID
            completed: true
            updatedAt: 5
          - phase: phase
            createdAt: 1
            experimentRunID: experimentRunID
            isRemoved: true
            resiliencyScore: 5.962133916683182
            targetService:
            - uid: uid
              name: name
              namespace: namespace
              id: id
            - uid: uid
              name: name
              namespace: namespace
              id: id
            updatedBy: updatedBy
            createdBy: createdBy
            name: name
            notifyID: notifyID
            completed: true
            updatedAt: 5
          projectID: projectID
          updatedAt: 3
          resiliencyCoverage: 2.3021358869347655
          averageResiliencyScore: 0.8008281904610115
          updatedBy: updatedBy
          errorMessage: errorMessage
          totalExperimentRunCount: 9
          orgID: orgID
          infrastructureId: infrastructureId
          createdBy: createdBy
          targetNetworkMapID: targetNetworkMapID
          experimentCreationMode: Basic
          name: name
          onboardingID: onboardingID
          status: COMPLETED
        - totalExperimentCount: 7
          environmentRef: environmentRef
          agentIdentity: agentIdentity
          accountID: accountID
          createdAt: 6
          serviceIDs:
          - serviceIDs
          - serviceIDs
          isRemoved: true
          identity: identity
          id: id
          recentExperimentRunsDetails:
          - phase: phase
            createdAt: 1
            experimentRunID: experimentRunID
            isRemoved: true
            resiliencyScore: 5.962133916683182
            targetService:
            - uid: uid
              name: name
              namespace: namespace
              id: id
            - uid: uid
              name: name
              namespace: namespace
              id: id
            updatedBy: updatedBy
            createdBy: createdBy
            name: name
            notifyID: notifyID
            completed: true
            updatedAt: 5
          - phase: phase
            createdAt: 1
            experimentRunID: experimentRunID
            isRemoved: true
            resiliencyScore: 5.962133916683182
            targetService:
            - uid: uid
              name: name
              namespace: namespace
              id: id
            - uid: uid
              name: name
              namespace: namespace
              id: id
            updatedBy: updatedBy
            createdBy: createdBy
            name: name
            notifyID: notifyID
            completed: true
            updatedAt: 5
          projectID: projectID
          updatedAt: 3
          resiliencyCoverage: 2.3021358869347655
          averageResiliencyScore: 0.8008281904610115
          updatedBy: updatedBy
          errorMessage: errorMessage
          totalExperimentRunCount: 9
          orgID: orgID
          infrastructureId: infrastructureId
          createdBy: createdBy
          targetNetworkMapID: targetNetworkMapID
          experimentCreationMode: Basic
          name: name
          onboardingID: onboardingID
          status: COMPLETED
        page:
          totalItems: 2
          limit: 5
          totalPages: 7
          index: 5
    networkmap.ListTargetService:
      type: object
      properties:
        chaosDetails:
          $ref: "#/components/schemas/targetservice.TargetService"
        discoveryDetails:
          $ref: "#/components/schemas/database.DiscoveredServiceCollection"
      example:
        chaosDetails:
          totalExperimentCount: 5
          resiliencyCoverage: 1.4658129805029452
          averageResiliencyScore: 0.8008281904610115
          environmentRef: environmentRef
          updatedBy: updatedBy
          externalId: externalId
          type: DiscoveredService
          orgID: orgID
          spec:
            discoveredService:
              kind: kind
              name: name
              namespace: namespace
              id: id
              label:
                key: label
              uuid: uuid
          accountID: accountID
          createdAt: 6
          isRemoved: true
          infrastructureId: infrastructureId
          createdBy: createdBy
          name: name
          id: id
          licenseId: licenseId
          projectID: projectID
          updatedAt: 5
        discoveryDetails:
          agentID: agentID
          environmentIdentifier: environmentIdentifier
          updatedBy: updatedBy
          accountIdentifier: accountIdentifier
          type: type
          version: version
          agentIdentity: agentIdentity
          spec:
            kubernetes:
              uid: uid
              kind: kind
              service:
                clusterIPs:
                - clusterIPs
                - clusterIPs
                externalIPs:
                - externalIPs
                - externalIPs
                loadBalancerIP: loadBalancerIP
                identity:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                externalName: externalName
                annotations:
                  key: annotations
                ports:
                - protocol: ""
                  port: 7
                  appProtocol: appProtocol
                  name: name
                  nodePort: 2
                  targetPort: ""
                - protocol: ""
                  port: 7
                  appProtocol: appProtocol
                  name: name
                  nodePort: 2
                  targetPort: ""
                type: ClusterIP
                clusterIP: clusterIP
                labels:
                  key: labels
              name: name
              namespace: namespace
              workloads:
              - podLabels:
                  key: podLabels
                identity: null
                replicas:
                - phase: Pending
                  identity: null
                - phase: Pending
                  identity: null
                annotations:
                  key: annotations
                podAnnotations:
                  key: podAnnotations
                labels:
                  key: labels
              - podLabels:
                  key: podLabels
                identity: null
                replicas:
                - phase: Pending
                  identity: null
                - phase: Pending
                  identity: null
                annotations:
                  key: annotations
                podAnnotations:
                  key: podAnnotations
                labels:
                  key: labels
            fqdn:
            - fqdn
            - fqdn
            port:
            - port
            - port
            ip:
            - ip
            - ip
            harnessServiceIdentity:
              identifier: identifier
              organizationIdentifier: organizationIdentifier
              accountIdentifier: accountIdentifier
              projectIdentifier: projectIdentifier
            harnessEnvironmentIdentity:
              identifier: identifier
              infraIdentifier: infraIdentifier
              organizationIdentifier: organizationIdentifier
              accountIdentifier: accountIdentifier
              projectIdentifier: projectIdentifier
          createdAt: createdAt
          removed: true
          createdBy: createdBy
          organizationIdentifier: organizationIdentifier
          name: name
          id: id
          projectIdentifier: projectIdentifier
          removedAt: removedAt
          updatedAt: updatedAt
    networkmap.ListTargetServiceResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/networkmap.ListTargetService"
        page:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_api.Pagination"
      example:
        data:
        - chaosDetails:
            totalExperimentCount: 5
            resiliencyCoverage: 1.4658129805029452
            averageResiliencyScore: 0.8008281904610115
            environmentRef: environmentRef
            updatedBy: updatedBy
            externalId: externalId
            type: DiscoveredService
            orgID: orgID
            spec:
              discoveredService:
                kind: kind
                name: name
                namespace: namespace
                id: id
                label:
                  key: label
                uuid: uuid
            accountID: accountID
            createdAt: 6
            isRemoved: true
            infrastructureId: infrastructureId
            createdBy: createdBy
            name: name
            id: id
            licenseId: licenseId
            projectID: projectID
            updatedAt: 5
          discoveryDetails:
            agentID: agentID
            environmentIdentifier: environmentIdentifier
            updatedBy: updatedBy
            accountIdentifier: accountIdentifier
            type: type
            version: version
            agentIdentity: agentIdentity
            spec:
              kubernetes:
                uid: uid
                kind: kind
                service:
                  clusterIPs:
                  - clusterIPs
                  - clusterIPs
                  externalIPs:
                  - externalIPs
                  - externalIPs
                  loadBalancerIP: loadBalancerIP
                  identity:
                    uid: uid
                    apiVersion: apiVersion
                    kind: kind
                    resourceVersion: resourceVersion
                    fieldPath: fieldPath
                    name: name
                    namespace: namespace
                  externalName: externalName
                  annotations:
                    key: annotations
                  ports:
                  - protocol: ""
                    port: 7
                    appProtocol: appProtocol
                    name: name
                    nodePort: 2
                    targetPort: ""
                  - protocol: ""
                    port: 7
                    appProtocol: appProtocol
                    name: name
                    nodePort: 2
                    targetPort: ""
                  type: ClusterIP
                  clusterIP: clusterIP
                  labels:
                    key: labels
                name: name
                namespace: namespace
                workloads:
                - podLabels:
                    key: podLabels
                  identity: null
                  replicas:
                  - phase: Pending
                    identity: null
                  - phase: Pending
                    identity: null
                  annotations:
                    key: annotations
                  podAnnotations:
                    key: podAnnotations
                  labels:
                    key: labels
                - podLabels:
                    key: podLabels
                  identity: null
                  replicas:
                  - phase: Pending
                    identity: null
                  - phase: Pending
                    identity: null
                  annotations:
                    key: annotations
                  podAnnotations:
                    key: podAnnotations
                  labels:
                    key: labels
              fqdn:
              - fqdn
              - fqdn
              port:
              - port
              - port
              ip:
              - ip
              - ip
              harnessServiceIdentity:
                identifier: identifier
                organizationIdentifier: organizationIdentifier
                accountIdentifier: accountIdentifier
                projectIdentifier: projectIdentifier
              harnessEnvironmentIdentity:
                identifier: identifier
                infraIdentifier: infraIdentifier
                organizationIdentifier: organizationIdentifier
                accountIdentifier: accountIdentifier
                projectIdentifier: projectIdentifier
            createdAt: createdAt
            removed: true
            createdBy: createdBy
            organizationIdentifier: organizationIdentifier
            name: name
            id: id
            projectIdentifier: projectIdentifier
            removedAt: removedAt
            updatedAt: updatedAt
        - chaosDetails:
            totalExperimentCount: 5
            resiliencyCoverage: 1.4658129805029452
            averageResiliencyScore: 0.8008281904610115
            environmentRef: environmentRef
            updatedBy: updatedBy
            externalId: externalId
            type: DiscoveredService
            orgID: orgID
            spec:
              discoveredService:
                kind: kind
                name: name
                namespace: namespace
                id: id
                label:
                  key: label
                uuid: uuid
            accountID: accountID
            createdAt: 6
            isRemoved: true
            infrastructureId: infrastructureId
            createdBy: createdBy
            name: name
            id: id
            licenseId: licenseId
            projectID: projectID
            updatedAt: 5
          discoveryDetails:
            agentID: agentID
            environmentIdentifier: environmentIdentifier
            updatedBy: updatedBy
            accountIdentifier: accountIdentifier
            type: type
            version: version
            agentIdentity: agentIdentity
            spec:
              kubernetes:
                uid: uid
                kind: kind
                service:
                  clusterIPs:
                  - clusterIPs
                  - clusterIPs
                  externalIPs:
                  - externalIPs
                  - externalIPs
                  loadBalancerIP: loadBalancerIP
                  identity:
                    uid: uid
                    apiVersion: apiVersion
                    kind: kind
                    resourceVersion: resourceVersion
                    fieldPath: fieldPath
                    name: name
                    namespace: namespace
                  externalName: externalName
                  annotations:
                    key: annotations
                  ports:
                  - protocol: ""
                    port: 7
                    appProtocol: appProtocol
                    name: name
                    nodePort: 2
                    targetPort: ""
                  - protocol: ""
                    port: 7
                    appProtocol: appProtocol
                    name: name
                    nodePort: 2
                    targetPort: ""
                  type: ClusterIP
                  clusterIP: clusterIP
                  labels:
                    key: labels
                name: name
                namespace: namespace
                workloads:
                - podLabels:
                    key: podLabels
                  identity: null
                  replicas:
                  - phase: Pending
                    identity: null
                  - phase: Pending
                    identity: null
                  annotations:
                    key: annotations
                  podAnnotations:
                    key: podAnnotations
                  labels:
                    key: labels
                - podLabels:
                    key: podLabels
                  identity: null
                  replicas:
                  - phase: Pending
                    identity: null
                  - phase: Pending
                    identity: null
                  annotations:
                    key: annotations
                  podAnnotations:
                    key: podAnnotations
                  labels:
                    key: labels
              fqdn:
              - fqdn
              - fqdn
              port:
              - port
              - port
              ip:
              - ip
              - ip
              harnessServiceIdentity:
                identifier: identifier
                organizationIdentifier: organizationIdentifier
                accountIdentifier: accountIdentifier
                projectIdentifier: projectIdentifier
              harnessEnvironmentIdentity:
                identifier: identifier
                infraIdentifier: infraIdentifier
                organizationIdentifier: organizationIdentifier
                accountIdentifier: accountIdentifier
                projectIdentifier: projectIdentifier
            createdAt: createdAt
            removed: true
            createdBy: createdBy
            organizationIdentifier: organizationIdentifier
            name: name
            id: id
            projectIdentifier: projectIdentifier
            removedAt: removedAt
            updatedAt: updatedAt
        page:
          totalItems: 2
          limit: 5
          totalPages: 7
          index: 5
    networkmap.RetryExperimentCreationRequest:
      type: object
      properties:
        mode:
          $ref: "#/components/schemas/targetnetworkmap.ExperimentCreationMode"
    networkmap.RetryExperimentCreationResponse:
      type: object
    networkmap.TargetServiceDetails:
      required:
      - id
      - kind
      - name
      type: object
      properties:
        averageResiliencyScore:
          type: number
        id:
          type: string
        kind:
          $ref: "#/components/schemas/database.NetworkMapResourceKind"
        kubernetes:
          $ref: "#/components/schemas/database.NetworkMapEntityKubernetesInfo"
        name:
          type: string
        removed:
          type: boolean
        resiliencyCoverage:
          type: number
        serviceIdentity:
          $ref: "#/components/schemas/database.ServiceIdentity"
      example:
        serviceIdentity: null
        kubernetes: null
        resiliencyCoverage: 5.637376656633329
        averageResiliencyScore: 5.962133916683182
        removed: true
        kind: null
        name: name
        id: id
    pipelines.BulkExperimentRunResponse:
      type: object
      properties:
        createPipelineResponse:
          $ref: "#/components/schemas/pipelines.CreatePipelineResponse"
        stageID:
          type: string
      example:
        createPipelineResponse:
          metaData: {}
          code: code
          data:
            identifier: identifier
          correlationId: correlationId
          message: message
          status: status
        stageID: stageID
    pipelines.ChaosPipelineInput:
      type: object
      properties:
        description:
          type: string
        experimentSpec:
          type: array
          items:
            $ref: "#/components/schemas/pipelines.ExperimentSpec"
        identifier:
          type: string
        name:
          type: string
        tags:
          type: object
          additionalProperties:
            type: string
    pipelines.CreatePipelineResponse:
      type: object
      properties:
        code:
          type: string
        correlationId:
          type: string
        data:
          $ref: "#/components/schemas/pipelines.CreatePipelineResponse_data"
        message:
          type: string
        metaData:
          type: object
        status:
          type: string
      example:
        metaData: {}
        code: code
        data:
          identifier: identifier
        correlationId: correlationId
        message: message
        status: status
    pipelines.ExperimentSpec:
      type: object
      properties:
        expectedResilienceScore:
          type: number
        experimentID:
          type: string
        experimentName:
          type: string
    probe.APMProbe:
      type: object
      properties:
        appDynamicsProbeInputs:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.AppDynamicsProbeInputs"
        attempt:
          type: object
        comparator:
          $ref: "#/components/schemas/probe.Comparator"
        initialDelay:
          type: string
        initialDelaySeconds:
          type: object
        interval:
          type: string
        pollingInterval:
          type: string
        probeTimeout:
          type: string
        prometheusProbeInputs:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.PrometheusProbeInputs"
        retry:
          type: object
        splunkObservabilityProbeInputs:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.SplunkObservabilityProbeInputs"
        stopOnFailure:
          type: boolean
        type:
          type: string
        verbosity:
          type: string
      example:
        pollingInterval: pollingInterval
        probeTimeout: probeTimeout
        appDynamicsProbeInputs:
          appdMetrics:
            metricsFullPath: metricsFullPath
            durationInMin: {}
          connectorID: connectorID
        initialDelay: initialDelay
        initialDelaySeconds: {}
        type: type
        attempt: {}
        prometheusProbeInputs:
          connectorID: connectorID
          query: query
          tlsConfig:
            caCrt:
              identifier: identifier
            insecureSkipVerify: true
            clientCrt: null
            key: null
        comparator:
          criteria: criteria
          type: type
          value: value
        stopOnFailure: true
        interval: interval
        splunkObservabilityProbeInputs:
          splunkObservabilityMetrics:
            durationInMin: {}
            query: query
          connectorID: connectorID
        retry: {}
        verbosity: verbosity
    probe.APMProbeTemplate:
      type: object
      properties:
        appDynamicsProbeInputs:
          $ref: "#/components/schemas/github_com_harness_hce-saas_hce-sdk_template_schema_probe.AppDynamicsProbeInputs"
        comparator:
          $ref: "#/components/schemas/probe.ComparatorTemplate"
        prometheusProbeInputs:
          $ref: "#/components/schemas/github_com_harness_hce-saas_hce-sdk_template_schema_probe.PrometheusProbeInputs"
        splunkObservabilityProbeInputs:
          $ref: "#/components/schemas/github_com_harness_hce-saas_hce-sdk_template_schema_probe.SplunkObservabilityProbeInputs"
        type:
          $ref: "#/components/schemas/probe.APMProbeType"
      example:
        comparator:
          criteria: criteria
          type: type
          value: value
        appDynamicsProbeInputs:
          appdMetrics:
            metricsFullPath: metricsFullPath
            durationInMin: {}
          connectorID: connectorID
        type: Prometheus
        splunkObservabilityProbeInputs:
          splunkObservabilityMetrics:
            durationInMin: {}
            query: query
          connectorID: connectorID
        prometheusProbeInputs:
          connectorID: connectorID
          query: query
          tlsConfig:
            caCrt:
              identifier: identifier
            insecureSkipVerify: {}
            clientCrt: null
            key: null
    probe.APMProbeType:
      type: string
      enum:
      - Prometheus
      - AppDynamics
      - SplunkObservability
      x-enum-varnames:
      - APMPrometheusProbe
      - APMAppDynamicsProbe
      - APMSplunkObservabilityProbe
    probe.APMTLSConfig:
      type: object
      properties:
        caCrt:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.SecretManager"
        clientCrt:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.SecretManager"
        insecureSkipVerify:
          type: boolean
        key:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.SecretManager"
      example:
        caCrt:
          identifier: identifier
        insecureSkipVerify: true
        clientCrt: null
        key: null
    probe.Authorization:
      type: object
      properties:
        credentials:
          type: string
        credentialsFile:
          type: string
        type:
          type: string
      example:
        credentialsFile: credentialsFile
        credentials: credentials
        type: type
    probe.AuthorizationTemplate:
      type: object
      properties:
        credentials:
          type: string
        credentialsFile:
          type: string
        type:
          type: string
      example:
        credentialsFile: credentialsFile
        credentials: credentials
        type: type
    probe.CmdProbeTemplate:
      type: object
      properties:
        command:
          type: string
        comparator:
          $ref: "#/components/schemas/probe.ComparatorTemplate"
        source:
          type: string
      example:
        comparator: null
        source: source
        command: command
    probe.Comparator:
      type: object
      properties:
        criteria:
          type: string
        type:
          type: string
        value:
          type: string
      example:
        criteria: criteria
        type: type
        value: value
    probe.ComparatorTemplate:
      type: object
      properties:
        criteria:
          type: string
        type:
          type: string
        value:
          type: string
      example:
        criteria: criteria
        type: type
        value: value
    probe.DatadogMetrics:
      type: object
      properties:
        comparator:
          $ref: "#/components/schemas/probe.Comparator"
        query:
          type: string
        timeFrame:
          type: string
      example:
        comparator: null
        query: query
        timeFrame: timeFrame
    probe.DatadogMetricsTemplate:
      type: object
      properties:
        comparator:
          $ref: "#/components/schemas/probe.ComparatorTemplate"
        query:
          type: string
        timeFrame:
          type: string
      example:
        comparator: null
        query: query
        timeFrame: timeFrame
    probe.DatadogProbe:
      type: object
      properties:
        attempt:
          type: object
        datadogCredentialsSecretName:
          type: string
        datadogSite:
          type: string
        initialDelay:
          type: string
        initialDelaySeconds:
          type: object
        interval:
          type: string
        metrics:
          $ref: "#/components/schemas/probe.DatadogMetrics"
        pollingInterval:
          type: string
        probeTimeout:
          type: string
        retry:
          type: object
        stopOnFailure:
          type: boolean
        syntheticsTest:
          $ref: "#/components/schemas/probe.SyntheticsTest"
        verbosity:
          type: string
      example:
        pollingInterval: pollingInterval
        probeTimeout: probeTimeout
        initialDelay: initialDelay
        initialDelaySeconds: {}
        attempt: {}
        datadogSite: datadogSite
        stopOnFailure: true
        datadogCredentialsSecretName: datadogCredentialsSecretName
        interval: interval
        metrics:
          comparator: null
          query: query
          timeFrame: timeFrame
        retry: {}
        syntheticsTest:
          testType: api
          publicId: publicId
        verbosity: verbosity
    probe.DatadogProbeTemplate:
      type: object
      properties:
        datadogCredentialsSecretName:
          type: string
        datadogSite:
          type: string
        metrics:
          $ref: "#/components/schemas/probe.DatadogMetricsTemplate"
        syntheticsTest:
          $ref: "#/components/schemas/probe.SyntheticsTestTemplate"
      example:
        datadogSite: datadogSite
        datadogCredentialsSecretName: datadogCredentialsSecretName
        metrics:
          comparator: null
          query: query
          timeFrame: timeFrame
        syntheticsTest:
          testType: api
          publicId: publicId
    probe.DynatraceMetricsTemplate:
      type: object
      properties:
        entitySelector:
          type: string
        metricsSelector:
          type: string
      example:
        entitySelector: entitySelector
        metricsSelector: metricsSelector
    probe.DynatraceProbe:
      type: object
      properties:
        apiTokenSecretName:
          type: string
        attempt:
          type: object
        comparator:
          $ref: "#/components/schemas/probe.Comparator"
        endpoint:
          type: string
        initialDelay:
          type: string
        initialDelaySeconds:
          type: object
        interval:
          type: string
        metrics:
          $ref: "#/components/schemas/probe.Metrics"
        pollingInterval:
          type: string
        probeTimeout:
          type: string
        retry:
          type: object
        stopOnFailure:
          type: boolean
        timeFrame:
          type: string
        verbosity:
          type: string
      example:
        apiTokenSecretName: apiTokenSecretName
        pollingInterval: pollingInterval
        probeTimeout: probeTimeout
        initialDelay: initialDelay
        initialDelaySeconds: {}
        attempt: {}
        timeFrame: timeFrame
        comparator: null
        endpoint: endpoint
        stopOnFailure: true
        interval: interval
        metrics:
          entitySelector: entitySelector
          metricsSelector: metricsSelector
        retry: {}
        verbosity: verbosity
    probe.DynatraceProbeTemplate:
      type: object
      properties:
        apiTokenSecretName:
          type: string
        comparator:
          $ref: "#/components/schemas/probe.ComparatorTemplate"
        endpoint:
          type: string
        metrics:
          $ref: "#/components/schemas/probe.DynatraceMetricsTemplate"
        timeFrame:
          type: string
      example:
        comparator: null
        endpoint: endpoint
        apiTokenSecretName: apiTokenSecretName
        metrics:
          entitySelector: entitySelector
          metricsSelector: metricsSelector
        timeFrame: timeFrame
    probe.EvaluationWindow:
      type: object
      properties:
        evaluationEndTime:
          type: string
          description: End time of evaluation
        evaluationStartTime:
          type: string
          description: Start time of evaluation
      example:
        evaluationStartTime: evaluationStartTime
        evaluationEndTime: evaluationEndTime
    probe.EvaluationWindowTemplate:
      type: object
      properties:
        evaluationEndTime:
          type: object
        evaluationStartTime:
          type: object
      example:
        evaluationStartTime: {}
        evaluationEndTime: {}
    probe.HTTPProbe:
      type: object
      properties:
        attempt:
          type: object
        auth:
          $ref: "#/components/schemas/probe.Authorization"
        headers:
          type: array
          items:
            $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.Headers"
        initialDelay:
          type: string
        initialDelaySeconds:
          type: object
        interval:
          type: string
        method:
          $ref: "#/components/schemas/probe.Method"
        pollingInterval:
          type: string
        probeTimeout:
          type: string
        retry:
          type: object
        stopOnFailure:
          type: boolean
        tlsConfig:
          $ref: "#/components/schemas/probe.TLSConfig"
        url:
          type: string
        verbosity:
          type: string
      example:
        headers:
        - value: value
          key: key
        - value: value
          key: key
        method:
          post:
            responseBody: responseBody
            criteria: criteria
            body: body
            bodyPath: bodyPath
            contentType: contentType
            responseCode: responseCode
          get:
            responseBody: responseBody
            criteria: criteria
            responseCode: responseCode
        auth:
          credentialsFile: credentialsFile
          credentials: credentials
          type: type
        pollingInterval: pollingInterval
        probeTimeout: probeTimeout
        initialDelay: initialDelay
        initialDelaySeconds: {}
        attempt: {}
        url: url
        tlsConfig:
          caFile: caFile
          keyFile: keyFile
          certFile: certFile
          insecureSkipVerify: true
        stopOnFailure: true
        interval: interval
        retry: {}
        verbosity: verbosity
    probe.HttpProbeTemplate:
      type: object
      properties:
        auth:
          $ref: "#/components/schemas/probe.AuthorizationTemplate"
        headers:
          type: array
          items:
            $ref: "#/components/schemas/github_com_harness_hce-saas_hce-sdk_template_schema_probe.Headers"
        method:
          $ref: "#/components/schemas/probe.MethodTemplate"
        tlsConfig:
          $ref: "#/components/schemas/probe.TLSConfigTemplate"
        url:
          type: string
      example:
        headers:
        - value: value
          key: key
        - value: value
          key: key
        method:
          post:
            responseBody: responseBody
            criteria: criteria
            body: body
            bodyPath: bodyPath
            contentType: contentType
            responseCode: responseCode
          get:
            responseBody: responseBody
            criteria: criteria
            responseCode: responseCode
        auth:
          credentialsFile: credentialsFile
          credentials: credentials
          type: type
        url: url
        tlsConfig:
          caFile: caFile
          keyFile: keyFile
          certFile: certFile
          insecureSkipVerify: true
    probe.InfrastructureType:
      type: string
      enum:
      - Kubernetes
      - KubernetesV2
      - Windows
      - Linux
      - CloudFoundry
      x-enum-varnames:
      - InfrastructureTypeKubernetes
      - InfrastructureTypeKubernetesV2
      - InfrastructureTypeWindows
      - InfrastructureTypeLinux
      - InfrastructureTypeCloudFoundry
    probe.K8SProbe:
      type: object
      properties:
        attempt:
          type: object
        fieldSelector:
          type: string
        group:
          type: string
        initialDelay:
          type: string
        initialDelaySeconds:
          type: object
        interval:
          type: string
        labelSelector:
          type: string
        namespace:
          type: string
        operation:
          type: string
        pollingInterval:
          type: string
        probeTimeout:
          type: string
        resource:
          type: string
        resourceNames:
          type: string
        retry:
          type: object
        stopOnFailure:
          type: boolean
        verbosity:
          type: string
        version:
          type: string
      example:
        resource: resource
        labelSelector: labelSelector
        pollingInterval: pollingInterval
        probeTimeout: probeTimeout
        initialDelay: initialDelay
        initialDelaySeconds: {}
        attempt: {}
        version: version
        resourceNames: resourceNames
        stopOnFailure: true
        namespace: namespace
        fieldSelector: fieldSelector
        interval: interval
        operation: operation
        retry: {}
        verbosity: verbosity
        group: group
    probe.K8SProbeTemplate:
      type: object
      properties:
        fieldSelector:
          type: string
        group:
          type: string
        labelSelector:
          type: string
        namespace:
          type: string
        operation:
          type: string
        resource:
          type: string
        resourceNames:
          type: string
        version:
          type: string
      example:
        resourceNames: resourceNames
        resource: resource
        labelSelector: labelSelector
        namespace: namespace
        fieldSelector: fieldSelector
        operation: operation
        version: version
        group: group
    probe.KubernetesCMDProbe:
      type: object
      properties:
        attempt:
          type: object
        command:
          type: string
        comparator:
          $ref: "#/components/schemas/probe.Comparator"
        initialDelay:
          type: string
        initialDelaySeconds:
          type: object
        interval:
          type: string
        pollingInterval:
          type: string
        probeTimeout:
          type: string
        retry:
          type: object
        source:
          type: object
        stopOnFailure:
          type: boolean
        verbosity:
          type: string
      example:
        comparator: null
        stopOnFailure: true
        pollingInterval: pollingInterval
        probeTimeout: probeTimeout
        interval: interval
        initialDelay: initialDelay
        source: {}
        initialDelaySeconds: {}
        attempt: {}
        command: command
        retry: {}
        verbosity: verbosity
    probe.LinuxCMDProbe:
      type: object
      properties:
        attempt:
          type: object
        command:
          type: string
        comparator:
          $ref: "#/components/schemas/probe.Comparator"
        initialDelay:
          type: string
        initialDelaySeconds:
          type: object
        interval:
          type: string
        pollingInterval:
          type: string
        probeTimeout:
          type: string
        retry:
          type: object
        source:
          type: object
        stopOnFailure:
          type: boolean
        verbosity:
          type: string
      example:
        comparator: null
        stopOnFailure: true
        pollingInterval: pollingInterval
        probeTimeout: probeTimeout
        interval: interval
        initialDelay: initialDelay
        source: {}
        initialDelaySeconds: {}
        attempt: {}
        command: command
        retry: {}
        verbosity: verbosity
    probe.Method:
      type: object
      properties:
        get:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.GET"
        post:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.POST"
      example:
        post:
          responseBody: responseBody
          criteria: criteria
          body: body
          bodyPath: bodyPath
          contentType: contentType
          responseCode: responseCode
        get:
          responseBody: responseBody
          criteria: criteria
          responseCode: responseCode
    probe.MethodTemplate:
      type: object
      properties:
        get:
          $ref: "#/components/schemas/github_com_harness_hce-saas_hce-sdk_template_schema_probe.GET"
        post:
          $ref: "#/components/schemas/github_com_harness_hce-saas_hce-sdk_template_schema_probe.POST"
      example:
        post:
          responseBody: responseBody
          criteria: criteria
          body: body
          bodyPath: bodyPath
          contentType: contentType
          responseCode: responseCode
        get:
          responseBody: responseBody
          criteria: criteria
          responseCode: responseCode
    probe.Metrics:
      type: object
      properties:
        entitySelector:
          type: string
        metricsSelector:
          type: string
      example:
        entitySelector: entitySelector
        metricsSelector: metricsSelector
    probe.PROMProbe:
      type: object
      properties:
        attempt:
          type: object
        auth:
          $ref: "#/components/schemas/probe.Authorization"
        comparator:
          $ref: "#/components/schemas/probe.Comparator"
        endpoint:
          type: string
        initialDelay:
          type: string
        initialDelaySeconds:
          type: object
        interval:
          type: string
        pollingInterval:
          type: string
        probeTimeout:
          type: string
        query:
          type: string
        queryPath:
          type: string
        retry:
          type: object
        stopOnFailure:
          type: boolean
        tlsConfig:
          $ref: "#/components/schemas/probe.TLSConfig"
        verbosity:
          type: string
      example:
        auth: null
        queryPath: queryPath
        query: query
        pollingInterval: pollingInterval
        probeTimeout: probeTimeout
        initialDelay: initialDelay
        initialDelaySeconds: {}
        attempt: {}
        tlsConfig: null
        comparator: null
        endpoint: endpoint
        stopOnFailure: true
        interval: interval
        retry: {}
        verbosity: verbosity
    probe.ProbeTemplateProperties:
      type: object
      properties:
        apmProbe:
          $ref: "#/components/schemas/probe.APMProbeTemplate"
        cmdProbe:
          $ref: "#/components/schemas/probe.CmdProbeTemplate"
        datadogProbe:
          $ref: "#/components/schemas/probe.DatadogProbeTemplate"
        dynatraceProbe:
          $ref: "#/components/schemas/probe.DynatraceProbeTemplate"
        httpProbe:
          $ref: "#/components/schemas/probe.HttpProbeTemplate"
        k8sProbe:
          $ref: "#/components/schemas/probe.K8SProbeTemplate"
        promProbe:
          $ref: "#/components/schemas/probe.PromProbeTemplate"
        sloProbe:
          $ref: "#/components/schemas/probe.SLOProbeTemplate"
      example:
        datadogProbe:
          datadogSite: datadogSite
          datadogCredentialsSecretName: datadogCredentialsSecretName
          metrics:
            comparator: null
            query: query
            timeFrame: timeFrame
          syntheticsTest:
            testType: api
            publicId: publicId
        sloProbe:
          comparator: null
          insecureSkipVerify: true
          evaluationTimeout: evaluationTimeout
          sloSourceMetadata:
            apiTokenSecret: apiTokenSecret
            scope:
              orgIdentifier: orgIdentifier
              accountIdentifier: accountIdentifier
              projectIdentifier: projectIdentifier
          platformEndpoint: platformEndpoint
          evaluationWindow:
            evaluationStartTime: {}
            evaluationEndTime: {}
          sloIdentifier: sloIdentifier
        promProbe:
          comparator: null
          endpoint: endpoint
          auth: null
          queryPath: queryPath
          query: query
          tlsConfig: null
        apmProbe:
          comparator:
            criteria: criteria
            type: type
            value: value
          appDynamicsProbeInputs:
            appdMetrics:
              metricsFullPath: metricsFullPath
              durationInMin: {}
            connectorID: connectorID
          type: Prometheus
          splunkObservabilityProbeInputs:
            splunkObservabilityMetrics:
              durationInMin: {}
              query: query
            connectorID: connectorID
          prometheusProbeInputs:
            connectorID: connectorID
            query: query
            tlsConfig:
              caCrt:
                identifier: identifier
              insecureSkipVerify: {}
              clientCrt: null
              key: null
        cmdProbe:
          comparator: null
          source: source
          command: command
        httpProbe:
          headers:
          - value: value
            key: key
          - value: value
            key: key
          method:
            post:
              responseBody: responseBody
              criteria: criteria
              body: body
              bodyPath: bodyPath
              contentType: contentType
              responseCode: responseCode
            get:
              responseBody: responseBody
              criteria: criteria
              responseCode: responseCode
          auth:
            credentialsFile: credentialsFile
            credentials: credentials
            type: type
          url: url
          tlsConfig:
            caFile: caFile
            keyFile: keyFile
            certFile: certFile
            insecureSkipVerify: true
        dynatraceProbe:
          comparator: null
          endpoint: endpoint
          apiTokenSecretName: apiTokenSecretName
          metrics:
            entitySelector: entitySelector
            metricsSelector: metricsSelector
          timeFrame: timeFrame
        k8sProbe:
          resourceNames: resourceNames
          resource: resource
          labelSelector: labelSelector
          namespace: namespace
          fieldSelector: fieldSelector
          operation: operation
          version: version
          group: group
    probe.ProbeTemplateRunProperties:
      type: object
      properties:
        attempt:
          type: object
        initialDelay:
          type: string
        interval:
          type: string
        pollingInterval:
          type: string
        retry:
          type: object
        stopOnFailure:
          type: boolean
        timeout:
          type: string
        verbosity:
          type: string
      example:
        stopOnFailure: true
        pollingInterval: pollingInterval
        interval: interval
        initialDelay: initialDelay
        attempt: {}
        retry: {}
        timeout: timeout
        verbosity: verbosity
    probe.ProbeType:
      type: string
      enum:
      - httpProbe
      - cmdProbe
      - promProbe
      - k8sProbe
      - sloProbe
      - datadogProbe
      - dynatraceProbe
      x-enum-varnames:
      - ProbeTypeHTTPProbe
      - ProbeTypeCmdProbe
      - ProbeTypePromProbe
      - ProbeTypeK8sProbe
      - ProbeTypeSloProbe
      - ProbeTypeDatadogProbe
      - ProbeTypeDynatraceProbe
    probe.PromProbeTemplate:
      type: object
      properties:
        auth:
          $ref: "#/components/schemas/probe.AuthorizationTemplate"
        comparator:
          $ref: "#/components/schemas/probe.ComparatorTemplate"
        endpoint:
          type: string
        query:
          type: string
        queryPath:
          type: string
        tlsConfig:
          $ref: "#/components/schemas/probe.TLSConfigTemplate"
      example:
        comparator: null
        endpoint: endpoint
        auth: null
        queryPath: queryPath
        query: query
        tlsConfig: null
    probe.SLOProbe:
      type: object
      properties:
        attempt:
          type: object
        comparator:
          $ref: "#/components/schemas/probe.Comparator"
        evaluationTimeout:
          type: string
        evaluationWindow:
          $ref: "#/components/schemas/probe.EvaluationWindow"
        initialDelay:
          type: string
        initialDelaySeconds:
          type: object
        insecureSkipVerify:
          type: boolean
        interval:
          type: string
        platformEndpoint:
          type: string
        pollingInterval:
          type: string
        probeTimeout:
          type: string
        retry:
          type: object
        sloIdentifier:
          type: string
        sloSourceMetadata:
          $ref: "#/components/schemas/probe.SLOSourceMetadata"
        stopOnFailure:
          type: boolean
        verbosity:
          type: string
      example:
        pollingInterval: pollingInterval
        probeTimeout: probeTimeout
        sloSourceMetadata:
          apiTokenSecret: apiTokenSecret
          scope: ""
        initialDelay: initialDelay
        initialDelaySeconds: {}
        attempt: {}
        sloIdentifier: sloIdentifier
        comparator: null
        stopOnFailure: true
        insecureSkipVerify: true
        evaluationTimeout: evaluationTimeout
        interval: interval
        platformEndpoint: platformEndpoint
        evaluationWindow:
          evaluationStartTime: evaluationStartTime
          evaluationEndTime: evaluationEndTime
        retry: {}
        verbosity: verbosity
    probe.SLOProbeTemplate:
      type: object
      properties:
        comparator:
          $ref: "#/components/schemas/probe.ComparatorTemplate"
        evaluationTimeout:
          type: string
        evaluationWindow:
          $ref: "#/components/schemas/probe.EvaluationWindowTemplate"
        insecureSkipVerify:
          type: boolean
        platformEndpoint:
          type: string
        sloIdentifier:
          type: string
        sloSourceMetadata:
          $ref: "#/components/schemas/probe.SLOSourceMetadataTemplate"
      example:
        comparator: null
        insecureSkipVerify: true
        evaluationTimeout: evaluationTimeout
        sloSourceMetadata:
          apiTokenSecret: apiTokenSecret
          scope:
            orgIdentifier: orgIdentifier
            accountIdentifier: accountIdentifier
            projectIdentifier: projectIdentifier
        platformEndpoint: platformEndpoint
        evaluationWindow:
          evaluationStartTime: {}
          evaluationEndTime: {}
        sloIdentifier: sloIdentifier
    probe.SLOSourceMetadata:
      type: object
      properties:
        apiTokenSecret:
          type: string
          description: APITokenSecret for authenticating with the platform service
        scope:
          type: object
          description: Scope required for fetching details
          allOf:
          - $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.Identifier"
      example:
        apiTokenSecret: apiTokenSecret
        scope: ""
    probe.SLOSourceMetadataTemplate:
      type: object
      properties:
        apiTokenSecret:
          type: string
        scope:
          $ref: "#/components/schemas/github_com_harness_hce-saas_hce-sdk_template_schema_probe.Identifier"
      example:
        apiTokenSecret: apiTokenSecret
        scope:
          orgIdentifier: orgIdentifier
          accountIdentifier: accountIdentifier
          projectIdentifier: projectIdentifier
    probe.SyntheticsTest:
      type: object
      properties:
        publicId:
          type: string
        testType:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_probe.DatadogSyntheticsTestType"
      example:
        testType: api
        publicId: publicId
    probe.SyntheticsTestTemplate:
      type: object
      properties:
        publicId:
          type: string
        testType:
          $ref: "#/components/schemas/github_com_harness_hce-saas_hce-sdk_template_schema_probe.DatadogSyntheticsTestType"
      example:
        testType: api
        publicId: publicId
    probe.TLSConfig:
      type: object
      properties:
        caFile:
          type: string
        certFile:
          type: string
        insecureSkipVerify:
          type: boolean
        keyFile:
          type: string
      example:
        caFile: caFile
        keyFile: keyFile
        certFile: certFile
        insecureSkipVerify: true
    probe.TLSConfigSM:
      type: object
      properties:
        caCrt:
          $ref: "#/components/schemas/github_com_harness_hce-saas_hce-sdk_template_schema_probe.SecretManager"
        clientCrt:
          $ref: "#/components/schemas/github_com_harness_hce-saas_hce-sdk_template_schema_probe.SecretManager"
        insecureSkipVerify:
          type: object
        key:
          $ref: "#/components/schemas/github_com_harness_hce-saas_hce-sdk_template_schema_probe.SecretManager"
      example:
        caCrt:
          identifier: identifier
        insecureSkipVerify: {}
        clientCrt: null
        key: null
    probe.TLSConfigTemplate:
      type: object
      properties:
        caFile:
          type: string
        certFile:
          type: string
        insecureSkipVerify:
          type: boolean
        keyFile:
          type: string
      example:
        caFile: caFile
        keyFile: keyFile
        certFile: certFile
        insecureSkipVerify: true
    recommendation.ConfigScannerEvents:
      type: object
      properties:
        details:
          type: string
        error:
          type: array
          items:
            $ref: "#/components/schemas/recommendation.Failure"
        id:
          type: string
        kind:
          type: string
        labels:
          type: string
        name:
          type: string
        namespace:
          type: string
        parentObject:
          type: string
    recommendation.EventRequest:
      type: object
      properties:
        environmentID:
          type: string
        faultPayload:
          $ref: "#/components/schemas/recommendation.FaultPayload"
        identifiers:
          $ref: "#/components/schemas/recommendation.Identifiers"
        infraID:
          type: string
        probePayload:
          $ref: "#/components/schemas/recommendation.ProbePayload"
        source:
          type: string
        type:
          type: string
    recommendation.Failure:
      type: object
      properties:
        containerName:
          type: string
        eventIdentifier:
          type: string
        kubernetesDoc:
          type: string
        text:
          type: string
    recommendation.FaultFilters:
      type: object
      properties:
        criticality:
          type: integer
        faultName:
          type: string
        targets:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_recommendation.Target"
      example:
        criticality: 0
        targets:
          node:
            name: name
            labels: labels
          workload:
            kind: kind
            name: name
            namespace: namespace
            labels: labels
          type: Workload
        faultName: faultName
    recommendation.FaultPayload:
      type: object
      properties:
        configScannerEvents:
          type: array
          items:
            $ref: "#/components/schemas/recommendation.ConfigScannerEvents"
    recommendation.Fixes:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
      example:
        name: name
        description: description
    recommendation.Identifiers:
      type: object
      properties:
        accountID:
          type: string
        organizationID:
          type: string
        projectID:
          type: string
    recommendation.ProbeFilters:
      type: object
      properties:
        experimentRunID:
          type: string
        probeID:
          type: string
        probeName:
          type: string
        probeType:
          type: string
      example:
        experimentRunID: experimentRunID
        probeName: probeName
        probeType: probeType
        probeID: probeID
    recommendation.ProbePayload:
      type: object
      properties:
        error:
          type: string
        experimentID:
          type: string
        experimentName:
          type: string
        experimentRunID:
          type: string
        probeID:
          type: string
        probeName:
          type: string
        probeType:
          type: string
    recommendation.RecommendationCategory:
      type: string
      enum:
      - FAULT
      - PROBE
      x-enum-varnames:
      - FaultRecommendation
      - ProbeRecommendation
    recommendation.RecommendationSource:
      type: string
      enum:
      - ConfigScanner
      - K8sWatcher
      x-enum-varnames:
      - ConfigScanner
      - K8sWatcher
    recommendation.RecommendationStatus:
      type: string
      enum:
      - Pending
      - Ignored
      - Acknowledged
      - Tracking
      x-enum-varnames:
      - PendingRecommendation
      - IgnoredRecommendation
      - AcknowledgedRecommendation
      - TrackingRecommendation
    recommendation.RecommendationType:
      type: string
      enum:
      - CREATE
      - RUN
      - FIX
      x-enum-varnames:
      - CreateRecommendation
      - RunRecommendation
      - FixRecommendation
    recommendation.Suggestions:
      type: object
      properties:
        count:
          type: integer
        error:
          type: string
        fixes:
          type: array
          items:
            $ref: "#/components/schemas/recommendation.Fixes"
        ignoreCounter:
          type: integer
        reason:
          type: string
        recommendationType:
          $ref: "#/components/schemas/recommendation.RecommendationType"
        status:
          $ref: "#/components/schemas/recommendation.RecommendationStatus"
        updatedAt:
          type: integer
      example:
        reason: reason
        count: 6
        error: error
        recommendationType: CREATE
        fixes:
        - name: name
          description: description
        - name: name
          description: description
        ignoreCounter: 1
        status: Pending
        updatedAt: 5
    recommendations.CreateActionResponse:
      type: object
      properties:
        experimentID:
          type: string
        experimentName:
          type: string
      example:
        experimentID: experimentID
        experimentName: experimentName
    recommendations.Filters:
      type: object
      properties:
        category:
          type: string
        source:
          $ref: "#/components/schemas/recommendation.RecommendationSource"
        status:
          $ref: "#/components/schemas/recommendation.RecommendationStatus"
    recommendations.ListRecommendationsRequest:
      type: object
      properties:
        filters:
          $ref: "#/components/schemas/recommendations.Filters"
    recommendations.ListRecommendationsResponse:
      type: object
      properties:
        recommendations:
          type: array
          items:
            $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_database_mongodb_recommendation.Recommendation"
      example:
        recommendations:
        - recommendationCategory: FAULT
          infraNamespace: infraNamespace
          faultFilters:
            criticality: 0
            targets:
              node:
                name: name
                labels: labels
              workload:
                kind: kind
                name: name
                namespace: namespace
                labels: labels
              type: Workload
            faultName: faultName
          infraName: infraName
          recommendationID: recommendationID
          source: ConfigScanner
          eventIdentifier: eventIdentifier
          orgID: orgID
          tags:
          - tags
          - tags
          accountID: accountID
          probeFilters:
            experimentRunID: experimentRunID
            probeName: probeName
            probeType: probeType
            probeID: probeID
          environmentID: environmentID
          isRemoved: true
          experimentID: experimentID
          suggestions:
          - reason: reason
            count: 6
            error: error
            recommendationType: CREATE
            fixes:
            - name: name
              description: description
            - name: name
              description: description
            ignoreCounter: 1
            status: Pending
            updatedAt: 5
          - reason: reason
            count: 6
            error: error
            recommendationType: CREATE
            fixes:
            - name: name
              description: description
            - name: name
              description: description
            ignoreCounter: 1
            status: Pending
            updatedAt: 5
          infraID: infraID
          projectID: projectID
          experimentName: experimentName
          infraType: infraType
        - recommendationCategory: FAULT
          infraNamespace: infraNamespace
          faultFilters:
            criticality: 0
            targets:
              node:
                name: name
                labels: labels
              workload:
                kind: kind
                name: name
                namespace: namespace
                labels: labels
              type: Workload
            faultName: faultName
          infraName: infraName
          recommendationID: recommendationID
          source: ConfigScanner
          eventIdentifier: eventIdentifier
          orgID: orgID
          tags:
          - tags
          - tags
          accountID: accountID
          probeFilters:
            experimentRunID: experimentRunID
            probeName: probeName
            probeType: probeType
            probeID: probeID
          environmentID: environmentID
          isRemoved: true
          experimentID: experimentID
          suggestions:
          - reason: reason
            count: 6
            error: error
            recommendationType: CREATE
            fixes:
            - name: name
              description: description
            - name: name
              description: description
            ignoreCounter: 1
            status: Pending
            updatedAt: 5
          - reason: reason
            count: 6
            error: error
            recommendationType: CREATE
            fixes:
            - name: name
              description: description
            - name: name
              description: description
            ignoreCounter: 1
            status: Pending
            updatedAt: 5
          infraID: infraID
          projectID: projectID
          experimentName: experimentName
          infraType: infraType
    recommendations.RunActionResponse:
      type: object
      properties:
        experimentID:
          type: string
        notifyID:
          type: string
      example:
        experimentID: experimentID
        notifyID: notifyID
    resource.Quantity:
      type: object
      properties:
        Format:
          type: string
          enum:
          - DecimalExponent
          - BinarySI
          - DecimalSI
          x-enum-varnames:
          - DecimalExponent
          - BinarySI
          - DecimalSI
          x-enum-comments:
            BinarySI: "e.g., 12Mi (12 * 2^20)"
            DecimalExponent: "e.g., 12e6"
            DecimalSI: "e.g., 12M  (12 * 10^6)"
    security_governance.ApplicationSpec:
      type: object
      properties:
        operator:
          $ref: "#/components/schemas/security_governance.Operator"
        workloads:
          type: array
          items:
            $ref: "#/components/schemas/security_governance.Workload"
      example:
        workloads:
        - applicationMapId: applicationMapId
          kind: kind
          namespace: namespace
          label: label
          services:
          - services
          - services
          env:
          - name: name
            value: value
          - name: name
            value: value
        - applicationMapId: applicationMapId
          kind: kind
          namespace: namespace
          label: label
          services:
          - services
          - services
          env:
          - name: name
            value: value
          - name: name
            value: value
        operator: null
    security_governance.ChaosServiceAccountSpec:
      type: object
      properties:
        operator:
          $ref: "#/components/schemas/security_governance.Operator"
        serviceAccounts:
          type: array
          items:
            type: string
      example:
        serviceAccounts:
        - serviceAccounts
        - serviceAccounts
        operator: null
    security_governance.Condition:
      type: object
      properties:
        conditionId:
          type: string
        description:
          type: string
        faultSpec:
          $ref: "#/components/schemas/security_governance.FaultSpec"
        infraType:
          $ref: "#/components/schemas/security_governance.InfraType"
        k8sSpec:
          $ref: "#/components/schemas/security_governance.K8sSpec"
        machineSpec:
          $ref: "#/components/schemas/security_governance.MachineSpec"
        name:
          type: string
        tags:
          type: array
          items:
            type: string
      example:
        conditionId: conditionId
        k8sSpec:
          applicationSpec:
            workloads:
            - applicationMapId: applicationMapId
              kind: kind
              namespace: namespace
              label: label
              services:
              - services
              - services
              env:
              - name: name
                value: value
              - name: name
                value: value
            - applicationMapId: applicationMapId
              kind: kind
              namespace: namespace
              label: label
              services:
              - services
              - services
              env:
              - name: name
                value: value
              - name: name
                value: value
            operator: null
          chaosServiceAccountSpec:
            serviceAccounts:
            - serviceAccounts
            - serviceAccounts
            operator: null
          infraSpec:
            infraIds:
            - infraIds
            - infraIds
            operator: null
        name: name
        description: description
        faultSpec:
          faults:
          - name: name
            faultType: FAULT_GROUP
          - name: name
            faultType: FAULT_GROUP
          operator: EQUAL_TO
        machineSpec:
          infraSpec: null
        infraType: Kubernetes
        tags:
        - tags
        - tags
    security_governance.Env:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
      example:
        name: name
        value: value
    security_governance.Fault:
      type: object
      properties:
        faultType:
          $ref: "#/components/schemas/security_governance.FaultType"
        name:
          type: string
      example:
        name: name
        faultType: FAULT_GROUP
    security_governance.FaultSpec:
      type: object
      properties:
        faults:
          type: array
          items:
            $ref: "#/components/schemas/security_governance.Fault"
        operator:
          $ref: "#/components/schemas/security_governance.Operator"
      example:
        faults:
        - name: name
          faultType: FAULT_GROUP
        - name: name
          faultType: FAULT_GROUP
        operator: EQUAL_TO
    security_governance.FaultType:
      type: string
      enum:
      - FAULT_GROUP
      - FAULT_NAME
      x-enum-varnames:
      - FAULT_GROUP
      - FAULT_NAME
    security_governance.InfraSpec:
      type: object
      properties:
        infraIds:
          type: array
          items:
            type: string
        operator:
          $ref: "#/components/schemas/security_governance.Operator"
      example:
        infraIds:
        - infraIds
        - infraIds
        operator: null
    security_governance.InfraType:
      type: string
      enum:
      - Kubernetes
      - KubernetesV2
      - Linux
      - Windows
      x-enum-varnames:
      - KUBERNETES
      - KUBERNETESV2
      - Linux
      - Windows
    security_governance.K8sSpec:
      type: object
      properties:
        applicationSpec:
          $ref: "#/components/schemas/security_governance.ApplicationSpec"
        chaosServiceAccountSpec:
          $ref: "#/components/schemas/security_governance.ChaosServiceAccountSpec"
        infraSpec:
          $ref: "#/components/schemas/security_governance.InfraSpec"
      example:
        applicationSpec:
          workloads:
          - applicationMapId: applicationMapId
            kind: kind
            namespace: namespace
            label: label
            services:
            - services
            - services
            env:
            - name: name
              value: value
            - name: name
              value: value
          - applicationMapId: applicationMapId
            kind: kind
            namespace: namespace
            label: label
            services:
            - services
            - services
            env:
            - name: name
              value: value
            - name: name
              value: value
          operator: null
        chaosServiceAccountSpec:
          serviceAccounts:
          - serviceAccounts
          - serviceAccounts
          operator: null
        infraSpec:
          infraIds:
          - infraIds
          - infraIds
          operator: null
    security_governance.MachineSpec:
      type: object
      properties:
        infraSpec:
          $ref: "#/components/schemas/security_governance.InfraSpec"
      example:
        infraSpec: null
    security_governance.Operator:
      type: string
      enum:
      - EQUAL_TO
      - NOT_EQUAL_TO
      x-enum-varnames:
      - EQUAL_TO
      - NOT_EQUAL_TO
    security_governance.Recurrence:
      type: object
      properties:
        spec:
          $ref: "#/components/schemas/security_governance.RecurrenceSpec"
        type:
          type: string
      example:
        type: type
        spec:
          until: 4
          value: 7
    security_governance.RecurrenceSpec:
      type: object
      properties:
        until:
          type: integer
        value:
          type: integer
          description: set if recurrenceType is Monthly
      example:
        until: 4
        value: 7
    security_governance.TimeWindow:
      type: object
      properties:
        duration:
          type: string
        endTime:
          type: integer
        recurrence:
          $ref: "#/components/schemas/security_governance.Recurrence"
        startTime:
          type: integer
        timeZone:
          type: string
      example:
        duration: duration
        recurrence:
          type: type
          spec:
            until: 4
            value: 7
        timeZone: timeZone
        startTime: 1
        endTime: 2
    security_governance.Workload:
      type: object
      properties:
        applicationMapId:
          type: string
        env:
          type: array
          items:
            $ref: "#/components/schemas/security_governance.Env"
        kind:
          type: string
        label:
          type: string
        namespace:
          type: string
        services:
          type: array
          items:
            type: string
      example:
        applicationMapId: applicationMapId
        kind: kind
        namespace: namespace
        label: label
        services:
        - services
        - services
        env:
        - name: name
          value: value
        - name: name
          value: value
    targetnetworkmap.ExperimentCreationMode:
      type: string
      enum:
      - Basic
      - Intermediate
      - Advanced
      x-enum-varnames:
      - BasicExperimentCreation
      - IntermediateExperimentCreation
      - AdvancedExperimentCreation
    targetnetworkmap.ExperimentRunDetail:
      required:
      - isRemoved
      type: object
      properties:
        completed:
          type: boolean
        createdAt:
          type: integer
        createdBy:
          type: string
        experimentRunID:
          type: string
        isRemoved:
          type: boolean
        name:
          type: string
        notifyID:
          type: string
        phase:
          type: string
        resiliencyScore:
          type: number
        targetService:
          type: array
          items:
            $ref: "#/components/schemas/targetservice.ServiceMetadata"
        updatedAt:
          type: integer
        updatedBy:
          type: string
      example:
        phase: phase
        createdAt: 1
        experimentRunID: experimentRunID
        isRemoved: true
        resiliencyScore: 5.962133916683182
        targetService:
        - uid: uid
          name: name
          namespace: namespace
          id: id
        - uid: uid
          name: name
          namespace: namespace
          id: id
        updatedBy: updatedBy
        createdBy: createdBy
        name: name
        notifyID: notifyID
        completed: true
        updatedAt: 5
    targetnetworkmap.Status:
      type: string
      enum:
      - COMPLETED
      - RUNNING
      - PENDING
      - ERRORED
      x-enum-varnames:
      - COMPLETED
      - RUNNING
      - PENDING
      - ERRORED
    targetnetworkmap.TargetNetworkMap:
      required:
      - accountID
      - isRemoved
      type: object
      properties:
        accountID:
          type: string
        agentIdentity:
          type: string
        averageResiliencyScore:
          type: number
        createdAt:
          type: integer
        createdBy:
          type: string
        environmentRef:
          type: string
        errorMessage:
          type: string
        experimentCreationMode:
          $ref: "#/components/schemas/targetnetworkmap.ExperimentCreationMode"
        id:
          type: string
        identity:
          type: string
        infrastructureId:
          type: string
        isRemoved:
          type: boolean
        name:
          type: string
        onboardingID:
          type: string
        orgID:
          type: string
        projectID:
          type: string
        recentExperimentRunsDetails:
          type: array
          items:
            $ref: "#/components/schemas/targetnetworkmap.ExperimentRunDetail"
        resiliencyCoverage:
          type: number
        serviceIDs:
          type: array
          items:
            type: string
        status:
          $ref: "#/components/schemas/targetnetworkmap.Status"
        targetNetworkMapID:
          type: string
        totalExperimentCount:
          type: integer
        totalExperimentRunCount:
          type: integer
        updatedAt:
          type: integer
        updatedBy:
          type: string
      example:
        totalExperimentCount: 7
        environmentRef: environmentRef
        agentIdentity: agentIdentity
        accountID: accountID
        createdAt: 6
        serviceIDs:
        - serviceIDs
        - serviceIDs
        isRemoved: true
        identity: identity
        id: id
        recentExperimentRunsDetails:
        - phase: phase
          createdAt: 1
          experimentRunID: experimentRunID
          isRemoved: true
          resiliencyScore: 5.962133916683182
          targetService:
          - uid: uid
            name: name
            namespace: namespace
            id: id
          - uid: uid
            name: name
            namespace: namespace
            id: id
          updatedBy: updatedBy
          createdBy: createdBy
          name: name
          notifyID: notifyID
          completed: true
          updatedAt: 5
        - phase: phase
          createdAt: 1
          experimentRunID: experimentRunID
          isRemoved: true
          resiliencyScore: 5.962133916683182
          targetService:
          - uid: uid
            name: name
            namespace: namespace
            id: id
          - uid: uid
            name: name
            namespace: namespace
            id: id
          updatedBy: updatedBy
          createdBy: createdBy
          name: name
          notifyID: notifyID
          completed: true
          updatedAt: 5
        projectID: projectID
        updatedAt: 3
        resiliencyCoverage: 2.3021358869347655
        averageResiliencyScore: 0.8008281904610115
        updatedBy: updatedBy
        errorMessage: errorMessage
        totalExperimentRunCount: 9
        orgID: orgID
        infrastructureId: infrastructureId
        createdBy: createdBy
        targetNetworkMapID: targetNetworkMapID
        experimentCreationMode: Basic
        name: name
        onboardingID: onboardingID
        status: COMPLETED
    targetservice.DiscoveredServiceSpec:
      type: object
      properties:
        id:
          type: string
        kind:
          type: string
        label:
          type: object
          additionalProperties:
            type: string
        name:
          type: string
        namespace:
          type: string
        uuid:
          type: string
      example:
        kind: kind
        name: name
        namespace: namespace
        id: id
        label:
          key: label
        uuid: uuid
    targetservice.ServiceMetadata:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        namespace:
          type: string
        uid:
          type: string
      example:
        uid: uid
        name: name
        namespace: namespace
        id: id
    targetservice.ServiceSpec:
      type: object
      properties:
        discoveredService:
          $ref: "#/components/schemas/targetservice.DiscoveredServiceSpec"
      example:
        discoveredService:
          kind: kind
          name: name
          namespace: namespace
          id: id
          label:
            key: label
          uuid: uuid
    targetservice.ServiceType:
      type: string
      enum:
      - DiscoveredService
      - UnAccounted
      x-enum-varnames:
      - DiscoveredService
      - UnAccounted
    targetservice.TargetService:
      required:
      - accountID
      - isRemoved
      type: object
      properties:
        accountID:
          type: string
        averageResiliencyScore:
          type: number
        createdAt:
          type: integer
        createdBy:
          type: string
        environmentRef:
          type: string
        externalId:
          type: string
        id:
          type: string
        infrastructureId:
          type: string
        isRemoved:
          type: boolean
        licenseId:
          type: string
        name:
          type: string
        orgID:
          type: string
        projectID:
          type: string
        resiliencyCoverage:
          type: number
        spec:
          $ref: "#/components/schemas/targetservice.ServiceSpec"
        totalExperimentCount:
          type: integer
        type:
          $ref: "#/components/schemas/targetservice.ServiceType"
        updatedAt:
          type: integer
        updatedBy:
          type: string
      example:
        totalExperimentCount: 5
        resiliencyCoverage: 1.4658129805029452
        averageResiliencyScore: 0.8008281904610115
        environmentRef: environmentRef
        updatedBy: updatedBy
        externalId: externalId
        type: DiscoveredService
        orgID: orgID
        spec:
          discoveredService:
            kind: kind
            name: name
            namespace: namespace
            id: id
            label:
              key: label
            uuid: uuid
        accountID: accountID
        createdAt: 6
        isRemoved: true
        infrastructureId: infrastructureId
        createdBy: createdBy
        name: name
        id: id
        licenseId: licenseId
        projectID: projectID
        updatedAt: 5
    template.ChaosExperimentInputsetSpec:
      type: object
      properties:
        experiment:
          type: array
          items:
            $ref: "#/components/schemas/template.VariableMinimum"
        tasks:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/template.VariableMinimum"
    template.RunTimeVariables:
      type: object
      properties:
        experiment:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
        tasks:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/template.Variable"
      example:
        experiment:
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        tasks:
          key:
          - null
          - null
    template.Variable:
      type: object
      properties:
        allowedValues:
          type: array
          items:
            type: object
        category:
          $ref: "#/components/schemas/template.VariableCategory"
        default:
          type: object
        description:
          type: string
        name:
          type: string
        path:
          type: string
        required:
          type: boolean
        stringify:
          type: boolean
        tags:
          type: array
          items:
            type: string
        type:
          $ref: "#/components/schemas/template.VariableType"
        validator:
          type: string
        value:
          type: object
      example:
        allowedValues:
        - {}
        - {}
        path: path
        default: {}
        name: name
        validator: validator
        description: description
        category: FaultTarget
        stringify: true
        type: String
        value: {}
        required: true
        tags:
        - tags
        - tags
    template.VariableCategory:
      type: string
      enum:
      - FaultTarget
      - FaultTunable
      - TargetInfra
      - ExperimentTunable
      - ActionProperties
      - ProbeProperties
      - RunProperties
      x-enum-varnames:
      - CategoryFaultTarget
      - CategoryFaultTunable
      - CategoryTargetInfra
      - CategoryExperimentTunable
      - CategoryActionProperties
      - CategoryProbeProperties
      - CategoryRunProperties
    template.VariableMinimum:
      type: object
      properties:
        name:
          type: string
        value:
          type: object
      example:
        name: name
        value: {}
    template.VariableType:
      type: string
      enum:
      - String
      - Integer
      - Boolean
      - Number
      x-enum-varnames:
      - StringVariable
      - IntegerVariable
      - BooleanVariable
      - NumberVariable
    types.ActionItem:
      type: object
      properties:
        createdAt:
          type: integer
        id:
          type: string
        item:
          type: string
        user:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
      example:
        createdAt: 1
        item: item
        id: id
        user: null
    types.CreateGamedayRequest:
      type: object
      properties:
        experiments:
          type: array
          items:
            $ref: "#/components/schemas/types.ExperimentRequest"
        gameDayID:
          type: string
        gamedayDescription:
          type: string
        gamedayName:
          type: string
        objective:
          type: string
        prerequisites:
          type: array
          items:
            $ref: "#/components/schemas/types.Prerequisite"
        stakeholders:
          type: array
          items:
            $ref: "#/components/schemas/types.StakeHolderInput"
      example:
        gamedayName: gamedayName
        prerequisites:
        - actionItem: actionItem
          description: description
          id: id
        - actionItem: actionItem
          description: description
          id: id
        gameDayID: gameDayID
        experiments:
        - hubID: hubID
          experimentTemplateName: experimentTemplateName
          environmentID: environmentID
          experimentID: experimentID
          infraID: infraID
          infraType: Kubernetes
        - hubID: hubID
          experimentTemplateName: experimentTemplateName
          environmentID: environmentID
          experimentID: experimentID
          infraID: infraID
          infraType: Kubernetes
        gamedayDescription: gamedayDescription
        stakeholders:
        - role: coordinator
          approvalRequired: true
          userID: userID
        - role: coordinator
          approvalRequired: true
          userID: userID
        objective: objective
    types.CreateGamedayResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/types.CreateGamedayRequest"
      example:
        data:
          gamedayName: gamedayName
          prerequisites:
          - actionItem: actionItem
            description: description
            id: id
          - actionItem: actionItem
            description: description
            id: id
          gameDayID: gameDayID
          experiments:
          - hubID: hubID
            experimentTemplateName: experimentTemplateName
            environmentID: environmentID
            experimentID: experimentID
            infraID: infraID
            infraType: Kubernetes
          - hubID: hubID
            experimentTemplateName: experimentTemplateName
            environmentID: environmentID
            experimentID: experimentID
            infraID: infraID
            infraType: Kubernetes
          gamedayDescription: gamedayDescription
          stakeholders:
          - role: coordinator
            approvalRequired: true
            userID: userID
          - role: coordinator
            approvalRequired: true
            userID: userID
          objective: objective
    types.CreateGamedayRunResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/types.Run"
        experimentError:
          type: array
          items:
            $ref: "#/components/schemas/types.ExperimentCreationError"
      example:
        data:
          summary:
            totalCompletedRuns: 5
            actionItems:
            - createdAt: 1
              item: item
              id: id
              user: null
            - createdAt: 1
              item: item
              id: id
              user: null
            totalSuspendedRuns: 7
            avgResiliencyScore: 5.962133916683182
            totalCompletedWithErrRuns: 2
          gameDayID: gameDayID
          updatedBy: null
          identifiers:
            orgIdentifier: orgIdentifier
            accountIdentifier: accountIdentifier
            projectIdentifier: projectIdentifier
          experiments:
          - hubID: hubID
            experimentCsv: experimentCsv
            experimentTemplateName: experimentTemplateName
            lastRunNotifyID: lastRunNotifyID
            environmentID: environmentID
            experimentManifest: experimentManifest
            chaosInfraID: chaosInfraID
            experimentID: experimentID
            infraType: Kubernetes
          - hubID: hubID
            experimentCsv: experimentCsv
            experimentTemplateName: experimentTemplateName
            lastRunNotifyID: lastRunNotifyID
            environmentID: environmentID
            experimentManifest: experimentManifest
            chaosInfraID: chaosInfraID
            experimentID: experimentID
            infraType: Kubernetes
          prerequisites:
          - actionItem: actionItem
            description: description
            comment: comment
            ID: ID
            status: done
          - actionItem: actionItem
            description: description
            comment: comment
            ID: ID
            status: done
          createdAt: createdAt
          isRemoved: true
          stakeHolders:
          - approvalStatus: approved
            lastUpdatedBy: null
            notes: notes
            role: coordinator
            lastUpdatedAt: 0
            approvalRequired: true
            user: null
          - approvalStatus: approved
            lastUpdatedBy: null
            notes: notes
            role: coordinator
            lastUpdatedAt: 0
            approvalRequired: true
            user: null
          createdBy:
            userID: userID
            email: email
            username: username
          name: name
          startTime: 6
          gameDayRunID: gameDayRunID
          status: awaiting_approval
          updatedAt: updatedAt
        experimentError:
        - error: error
          experimentName: experimentName
        - error: error
          experimentName: experimentName
    types.CreateNoteRequest:
      type: object
      properties:
        comment:
          type: string
        experimentID:
          type: string
        experimentRunID:
          type: string
        gamedayRunID:
          type: string
        type:
          $ref: "#/components/schemas/chaosresourcenotes.NoteType"
      example:
        gamedayRunID: gamedayRunID
        experimentRunID: experimentRunID
        comment: comment
        experimentID: experimentID
        type: experiment-run
    types.CreateNoteResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/types.CreateNoteRequest"
      example:
        data:
          gamedayRunID: gamedayRunID
          experimentRunID: experimentRunID
          comment: comment
          experimentID: experimentID
          type: experiment-run
    types.CreateProbeResponse:
      type: object
      properties:
        apmProperties:
          $ref: "#/components/schemas/probe.APMProbe"
        description:
          type: string
        k8sProperties:
          $ref: "#/components/schemas/probe.K8SProbe"
        kubernetesCmdProperties:
          $ref: "#/components/schemas/probe.KubernetesCMDProbe"
        kubernetesDatadogProperties:
          $ref: "#/components/schemas/probe.DatadogProbe"
        kubernetesDynatraceProperties:
          $ref: "#/components/schemas/probe.DynatraceProbe"
        kubernetesHttpProperties:
          $ref: "#/components/schemas/probe.HTTPProbe"
        linuxCmdProperties:
          $ref: "#/components/schemas/probe.LinuxCMDProbe"
        linuxDatadogProperties:
          $ref: "#/components/schemas/probe.DatadogProbe"
        linuxDynatraceProperties:
          $ref: "#/components/schemas/probe.DynatraceProbe"
        linuxHttpProperties:
          $ref: "#/components/schemas/probe.HTTPProbe"
        name:
          type: string
        probeId:
          type: string
        promProperties:
          $ref: "#/components/schemas/probe.PROMProbe"
        revisionId:
          type: string
        sloProperties:
          $ref: "#/components/schemas/probe.SLOProbe"
        tags:
          type: array
          items:
            type: string
        variables:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
        windowsHttpProperties:
          $ref: "#/components/schemas/probe.HTTPProbe"
      example:
        windowsHttpProperties: null
        k8sProperties:
          resource: resource
          labelSelector: labelSelector
          pollingInterval: pollingInterval
          probeTimeout: probeTimeout
          initialDelay: initialDelay
          initialDelaySeconds: {}
          attempt: {}
          version: version
          resourceNames: resourceNames
          stopOnFailure: true
          namespace: namespace
          fieldSelector: fieldSelector
          interval: interval
          operation: operation
          retry: {}
          verbosity: verbosity
          group: group
        kubernetesDatadogProperties:
          pollingInterval: pollingInterval
          probeTimeout: probeTimeout
          initialDelay: initialDelay
          initialDelaySeconds: {}
          attempt: {}
          datadogSite: datadogSite
          stopOnFailure: true
          datadogCredentialsSecretName: datadogCredentialsSecretName
          interval: interval
          metrics:
            comparator: null
            query: query
            timeFrame: timeFrame
          retry: {}
          syntheticsTest:
            testType: api
            publicId: publicId
          verbosity: verbosity
        variables:
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        kubernetesCmdProperties:
          comparator: null
          stopOnFailure: true
          pollingInterval: pollingInterval
          probeTimeout: probeTimeout
          interval: interval
          initialDelay: initialDelay
          source: {}
          initialDelaySeconds: {}
          attempt: {}
          command: command
          retry: {}
          verbosity: verbosity
        probeId: probeId
        description: description
        linuxDynatraceProperties: null
        linuxHttpProperties: null
        apmProperties:
          pollingInterval: pollingInterval
          probeTimeout: probeTimeout
          appDynamicsProbeInputs:
            appdMetrics:
              metricsFullPath: metricsFullPath
              durationInMin: {}
            connectorID: connectorID
          initialDelay: initialDelay
          initialDelaySeconds: {}
          type: type
          attempt: {}
          prometheusProbeInputs:
            connectorID: connectorID
            query: query
            tlsConfig:
              caCrt:
                identifier: identifier
              insecureSkipVerify: true
              clientCrt: null
              key: null
          comparator:
            criteria: criteria
            type: type
            value: value
          stopOnFailure: true
          interval: interval
          splunkObservabilityProbeInputs:
            splunkObservabilityMetrics:
              durationInMin: {}
              query: query
            connectorID: connectorID
          retry: {}
          verbosity: verbosity
        tags:
        - tags
        - tags
        revisionId: revisionId
        kubernetesHttpProperties:
          headers:
          - value: value
            key: key
          - value: value
            key: key
          method:
            post:
              responseBody: responseBody
              criteria: criteria
              body: body
              bodyPath: bodyPath
              contentType: contentType
              responseCode: responseCode
            get:
              responseBody: responseBody
              criteria: criteria
              responseCode: responseCode
          auth:
            credentialsFile: credentialsFile
            credentials: credentials
            type: type
          pollingInterval: pollingInterval
          probeTimeout: probeTimeout
          initialDelay: initialDelay
          initialDelaySeconds: {}
          attempt: {}
          url: url
          tlsConfig:
            caFile: caFile
            keyFile: keyFile
            certFile: certFile
            insecureSkipVerify: true
          stopOnFailure: true
          interval: interval
          retry: {}
          verbosity: verbosity
        promProperties:
          auth: null
          queryPath: queryPath
          query: query
          pollingInterval: pollingInterval
          probeTimeout: probeTimeout
          initialDelay: initialDelay
          initialDelaySeconds: {}
          attempt: {}
          tlsConfig: null
          comparator: null
          endpoint: endpoint
          stopOnFailure: true
          interval: interval
          retry: {}
          verbosity: verbosity
        linuxDatadogProperties: null
        name: name
        kubernetesDynatraceProperties:
          apiTokenSecretName: apiTokenSecretName
          pollingInterval: pollingInterval
          probeTimeout: probeTimeout
          initialDelay: initialDelay
          initialDelaySeconds: {}
          attempt: {}
          timeFrame: timeFrame
          comparator: null
          endpoint: endpoint
          stopOnFailure: true
          interval: interval
          metrics:
            entitySelector: entitySelector
            metricsSelector: metricsSelector
          retry: {}
          verbosity: verbosity
        linuxCmdProperties:
          comparator: null
          stopOnFailure: true
          pollingInterval: pollingInterval
          probeTimeout: probeTimeout
          interval: interval
          initialDelay: initialDelay
          source: {}
          initialDelaySeconds: {}
          attempt: {}
          command: command
          retry: {}
          verbosity: verbosity
        sloProperties:
          pollingInterval: pollingInterval
          probeTimeout: probeTimeout
          sloSourceMetadata:
            apiTokenSecret: apiTokenSecret
            scope: ""
          initialDelay: initialDelay
          initialDelaySeconds: {}
          attempt: {}
          sloIdentifier: sloIdentifier
          comparator: null
          stopOnFailure: true
          insecureSkipVerify: true
          evaluationTimeout: evaluationTimeout
          interval: interval
          platformEndpoint: platformEndpoint
          evaluationWindow:
            evaluationStartTime: evaluationStartTime
            evaluationEndTime: evaluationEndTime
          retry: {}
          verbosity: verbosity
    types.DeleteChaosV2ExperimentResponse:
      type: object
      properties:
        experimentId:
          type: string
        experimentName:
          type: string
        isDeleted:
          type: boolean
      example:
        isDeleted: true
        experimentId: experimentId
        experimentName: experimentName
    types.ExecutedByExperiment:
      type: object
      properties:
        experimentID:
          type: string
        experimentName:
          type: string
        experimentRunID:
          type: string
        experimentType:
          $ref: "#/components/schemas/types.ScenarioType"
        notifyID:
          type: string
        updatedAt:
          type: integer
        updatedBy:
          $ref: "#/components/schemas/types.UserDetails"
      example:
        experimentRunID: experimentRunID
        updatedBy:
          userID: userID
          email: email
          username: username
        experimentID: experimentID
        notifyID: notifyID
        experimentName: experimentName
        experimentType: CRON
        updatedAt: 1
    types.ExperimentCreationError:
      type: object
      properties:
        error:
          type: string
        experimentName:
          type: string
      example:
        error: error
        experimentName: experimentName
    types.ExperimentCreationRequest:
      type: object
      properties:
        cronSyntax:
          type: string
        description:
          type: string
        eventsMetadata:
          type: array
          items:
            $ref: "#/components/schemas/model.EventMetadata"
        experimentType:
          $ref: "#/components/schemas/model.WorkflowType"
        id:
          type: string
        identity:
          type: string
        infraId:
          type: string
        infraType:
          $ref: "#/components/schemas/model.InfrastructureType"
        isSingleRunCronEnabled:
          type: boolean
        manifest:
          type: string
        name:
          type: string
        recommendation:
          $ref: "#/components/schemas/chaos_experiment.Recommendation"
        tags:
          type: array
          items:
            type: string
        validateManifest:
          type: boolean
      example:
        validateManifest: true
        eventsMetadata:
        - environmentIdentifier:
          - environmentIdentifier
          - environmentIdentifier
          faultName: faultName
          serviceIdentifier:
          - serviceIdentifier
          - serviceIdentifier
        - environmentIdentifier:
          - environmentIdentifier
          - environmentIdentifier
          faultName: faultName
          serviceIdentifier:
          - serviceIdentifier
          - serviceIdentifier
        manifest: manifest
        isSingleRunCronEnabled: true
        description: description
        recommendation:
          bySystem: true
          weightage: 5
          reasons:
          - reasons
          - reasons
        experimentType: All
        tags:
        - tags
        - tags
        identity: identity
        name: name
        id: id
        infraId: infraId
        cronSyntax: cronSyntax
        infraType: Kubernetes
    types.ExperimentCreationResponse:
      type: object
      properties:
        auditAction:
          $ref: "#/components/schemas/experiment.SaveChaosExperimentResponse"
        data:
          $ref: "#/components/schemas/types.ExperimentCreationRequest"
      example:
        data:
          validateManifest: true
          eventsMetadata:
          - environmentIdentifier:
            - environmentIdentifier
            - environmentIdentifier
            faultName: faultName
            serviceIdentifier:
            - serviceIdentifier
            - serviceIdentifier
          - environmentIdentifier:
            - environmentIdentifier
            - environmentIdentifier
            faultName: faultName
            serviceIdentifier:
            - serviceIdentifier
            - serviceIdentifier
          manifest: manifest
          isSingleRunCronEnabled: true
          description: description
          recommendation:
            bySystem: true
            weightage: 5
            reasons:
            - reasons
            - reasons
          experimentType: All
          tags:
          - tags
          - tags
          identity: identity
          name: name
          id: id
          infraId: infraId
          cronSyntax: cronSyntax
          infraType: Kubernetes
        auditAction:
          response: response
          auditAction: auditAction
    types.ExperimentRequest:
      type: object
      properties:
        environmentID:
          type: string
        experimentID:
          type: string
        experimentTemplateName:
          type: string
        hubID:
          type: string
        infraID:
          type: string
        infraType:
          $ref: "#/components/schemas/model.InfrastructureType"
      example:
        hubID: hubID
        experimentTemplateName: experimentTemplateName
        environmentID: environmentID
        experimentID: experimentID
        infraID: infraID
        infraType: Kubernetes
    types.ExperimentRunRequest:
      type: object
      properties:
        inputsetIdentity:
          type: string
        runtimeInputs:
          $ref: "#/components/schemas/template.ChaosExperimentInputsetSpec"
    types.ExperimentRuns:
      type: object
      properties:
        chaosInfraID:
          type: string
        environmentID:
          type: string
        experimentCsv:
          type: string
        experimentID:
          type: string
        experimentManifest:
          type: string
        experimentTemplateName:
          type: string
        hubID:
          type: string
        infraType:
          $ref: "#/components/schemas/model.InfrastructureType"
        lastRunNotifyID:
          type: string
      example:
        hubID: hubID
        experimentCsv: experimentCsv
        experimentTemplateName: experimentTemplateName
        lastRunNotifyID: lastRunNotifyID
        environmentID: environmentID
        experimentManifest: experimentManifest
        chaosInfraID: chaosInfraID
        experimentID: experimentID
        infraType: Kubernetes
    types.ExperimentV2:
      type: object
      properties:
        createdAt:
          type: string
        createdBy:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
        cronSyntax:
          type: string
        description:
          type: string
        eventsMetadata:
          type: array
          items:
            $ref: "#/components/schemas/model.EventMetadata"
        identifiers:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.Identifiers"
        infra:
          $ref: "#/components/schemas/chaos_infrastructure_v2.ChaosInfraV2"
        isCronEnabled:
          type: boolean
        isCustomWorkflow:
          type: boolean
        isRemoved:
          type: boolean
        isSingleRunCronEnabled:
          type: boolean
        lastExecutedAt:
          type: string
        name:
          type: string
        recentWorkflowRunDetails:
          type: array
          items:
            $ref: "#/components/schemas/model.RecentWorkflowRun"
        recommendation:
          $ref: "#/components/schemas/chaos_experiment.Recommendation"
        singleClickOnboardMetadata:
          $ref: "#/components/schemas/chaos_experiment.SingleClickOnboardMetadata"
        tags:
          type: array
          items:
            type: string
        targetNetworkService:
          type: array
          items:
            $ref: "#/components/schemas/targetservice.ServiceMetadata"
        updatedAt:
          type: string
        updatedBy:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
        weightages:
          type: array
          items:
            $ref: "#/components/schemas/types.Weightages"
        workflowID:
          type: string
        workflowManifest:
          type: string
        workflowType:
          type: string
      example:
        recentWorkflowRunDetails:
        - phase: phase
          createdAt: createdAt
          resiliencyScore: 1.4658129805029452
          updatedBy: ""
          createdBy: ""
          runSequence: 5
          notifyID: notifyID
          workflowRunID: workflowRunID
          updatedAt: updatedAt
        - phase: phase
          createdAt: createdAt
          resiliencyScore: 1.4658129805029452
          updatedBy: ""
          createdBy: ""
          runSequence: 5
          notifyID: notifyID
          workflowRunID: workflowRunID
          updatedAt: updatedAt
        updatedBy: null
        weightages:
        - weightage: 2
          experimentName: experimentName
        - weightage: 2
          experimentName: experimentName
        eventsMetadata:
        - environmentIdentifier:
          - environmentIdentifier
          - environmentIdentifier
          faultName: faultName
          serviceIdentifier:
          - serviceIdentifier
          - serviceIdentifier
        - environmentIdentifier:
          - environmentIdentifier
          - environmentIdentifier
          faultName: faultName
          serviceIdentifier:
          - serviceIdentifier
          - serviceIdentifier
        lastExecutedAt: lastExecutedAt
        identifiers:
          orgIdentifier: orgIdentifier
          accountIdentifier: accountIdentifier
          projectIdentifier: projectIdentifier
        isCronEnabled: true
        isCustomWorkflow: true
        isSingleRunCronEnabled: true
        description: description
        recommendation:
          bySystem: true
          weightage: 5
          reasons:
          - reasons
          - reasons
        singleClickOnboardMetadata:
          onboardingID: onboardingID
          faults:
          - faults
          - faults
        workflowManifest: workflowManifest
        infra:
          updatedBy: updatedBy
          kind: kind
          description: description
          orgID: orgID
          spec:
            k8sInfraV2:
              emissaryURL: emissaryURL
              discoveryAgentId: discoveryAgentId
              scope: NAMESPACE
              aiEnabled: true
              namespace: namespace
              serviceAccount: serviceAccount
              type: KUBERNETES
              version: version
          tags:
          - tags
          - tags
          accountID: accountID
          createdAt: 0
          apiVersion: apiVersion
          environmentId: environmentId
          isRemoved: true
          createdBy: createdBy
          identity: identity
          name: name
          id: id
          projectID: projectID
          updatedAt: 6
        tags:
        - tags
        - tags
        createdAt: createdAt
        targetNetworkService:
        - uid: uid
          name: name
          namespace: namespace
          id: id
        - uid: uid
          name: name
          namespace: namespace
          id: id
        isRemoved: true
        createdBy:
          userID: userID
          email: email
          username: username
        name: name
        workflowType: workflowType
        cronSyntax: cronSyntax
        workflowID: workflowID
        updatedAt: updatedAt
    types.GamedayInfraDetails:
      type: object
      properties:
        environmentID:
          type: string
        infraID:
          type: string
        infraType:
          $ref: "#/components/schemas/model.InfrastructureType"
        name:
          type: string
      example:
        environmentID: environmentID
        name: name
        infraID: infraID
        infraType: Kubernetes
    types.GamedayV2:
      type: object
      properties:
        createdAt:
          type: string
        createdBy:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
        description:
          type: string
        experiments:
          type: array
          items:
            $ref: "#/components/schemas/types.ListGamedayExperimentResponse"
        gameDayID:
          type: string
        identifiers:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.Identifiers"
        isRemoved:
          type: boolean
        name:
          type: string
        objective:
          type: string
        prerequisites:
          type: array
          items:
            $ref: "#/components/schemas/types.Prerequisite"
        recentGamedayRuns:
          type: array
          items:
            $ref: "#/components/schemas/types.RecentGamedayRun"
        stakeholders:
          type: array
          items:
            $ref: "#/components/schemas/types.StakeHolderResponse"
        tags:
          type: array
          items:
            type: string
        updatedAt:
          type: string
        updatedBy:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
      example:
        gameDayID: gameDayID
        updatedBy: null
        identifiers:
          orgIdentifier: orgIdentifier
          accountIdentifier: accountIdentifier
          projectIdentifier: projectIdentifier
        experiments:
        - hubID: hubID
          experimentTemplateName: experimentTemplateName
          environmentID: environmentID
          experimentID: experimentID
          infraID: infraID
          infraType: Kubernetes
        - hubID: hubID
          experimentTemplateName: experimentTemplateName
          environmentID: environmentID
          experimentID: experimentID
          infraID: infraID
          infraType: Kubernetes
        description: description
        stakeholders:
        - role: coordinator
          approvalRequired: true
          user: null
        - role: coordinator
          approvalRequired: true
          user: null
        objective: objective
        recentGamedayRuns:
        - runAt: runAt
          name: name
          gameDayRunID: gameDayRunID
          runBy: null
          status: awaiting_approval
        - runAt: runAt
          name: name
          gameDayRunID: gameDayRunID
          runBy: null
          status: awaiting_approval
        tags:
        - tags
        - tags
        prerequisites:
        - actionItem: actionItem
          description: description
          id: id
        - actionItem: actionItem
          description: description
          id: id
        createdAt: createdAt
        isRemoved: true
        createdBy:
          userID: userID
          email: email
          username: username
        name: name
        updatedAt: updatedAt
    types.GetGamedayExperimentResponse:
      type: object
      properties:
        experimentCsv:
          type: string
        experimentID:
          type: string
        experimentManifest:
          type: string
        experimentTemplateName:
          type: string
        hubID:
          type: string
        infra:
          $ref: "#/components/schemas/types.GamedayInfraDetails"
      example:
        hubID: hubID
        experimentCsv: experimentCsv
        experimentTemplateName: experimentTemplateName
        experimentManifest: experimentManifest
        experimentID: experimentID
        infra:
          environmentID: environmentID
          name: name
          infraID: infraID
          infraType: Kubernetes
    types.GetGamedayResponse:
      type: object
      properties:
        createdAt:
          type: string
        createdBy:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
        description:
          type: string
        experiments:
          type: array
          items:
            $ref: "#/components/schemas/types.GetGamedayExperimentResponse"
        gameDayID:
          type: string
        identifiers:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.Identifiers"
        isRemoved:
          type: boolean
        name:
          type: string
        objective:
          type: string
        prerequisites:
          type: array
          items:
            $ref: "#/components/schemas/types.Prerequisite"
        stakeholders:
          type: array
          items:
            $ref: "#/components/schemas/types.StakeHolderResponse"
        tags:
          type: array
          items:
            type: string
        totalGamedayRuns:
          type: integer
        updatedAt:
          type: string
        updatedBy:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
      example:
        gameDayID: gameDayID
        updatedBy: null
        identifiers:
          orgIdentifier: orgIdentifier
          accountIdentifier: accountIdentifier
          projectIdentifier: projectIdentifier
        experiments:
        - hubID: hubID
          experimentCsv: experimentCsv
          experimentTemplateName: experimentTemplateName
          experimentManifest: experimentManifest
          experimentID: experimentID
          infra:
            environmentID: environmentID
            name: name
            infraID: infraID
            infraType: Kubernetes
        - hubID: hubID
          experimentCsv: experimentCsv
          experimentTemplateName: experimentTemplateName
          experimentManifest: experimentManifest
          experimentID: experimentID
          infra:
            environmentID: environmentID
            name: name
            infraID: infraID
            infraType: Kubernetes
        description: description
        stakeholders:
        - role: coordinator
          approvalRequired: true
          user: null
        - role: coordinator
          approvalRequired: true
          user: null
        objective: objective
        tags:
        - tags
        - tags
        prerequisites:
        - actionItem: actionItem
          description: description
          id: id
        - actionItem: actionItem
          description: description
          id: id
        createdAt: createdAt
        isRemoved: true
        createdBy:
          userID: userID
          email: email
          username: username
        name: name
        totalGamedayRuns: 0
        updatedAt: updatedAt
    types.GetProbeResponse:
      type: object
      properties:
        createdAt:
          type: integer
        createdBy:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
        description:
          type: string
        identity:
          type: string
        infrastructureType:
          $ref: "#/components/schemas/types.InfrastructureType"
        isEnabled:
          type: boolean
        name:
          type: string
        probeId:
          type: string
        probeProperties:
          $ref: "#/components/schemas/probe.ProbeTemplateProperties"
        probeReferenceCount:
          type: integer
        recentProbeRuns:
          type: array
          items:
            $ref: "#/components/schemas/types.ProbeRecentExecutions"
        runProperties:
          $ref: "#/components/schemas/probe.ProbeTemplateRunProperties"
        tags:
          type: array
          items:
            type: string
        type:
          $ref: "#/components/schemas/types.ProbeType"
        updatedAt:
          type: integer
        updatedBy:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
        variables:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
      example:
        variables:
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        - allowedValues:
          - {}
          - {}
          path: path
          default: {}
          name: name
          validator: validator
          description: description
          category: FaultTarget
          stringify: true
          type: String
          value: {}
          required: true
          tags:
          - tags
          - tags
        updatedBy: null
        probeId: probeId
        description: description
        recentProbeRuns:
        - executedByExperiment:
            experimentRunID: experimentRunID
            updatedBy:
              userID: userID
              email: email
              username: username
            experimentID: experimentID
            notifyID: notifyID
            experimentName: experimentName
            experimentType: CRON
            updatedAt: 1
          faultName: faultName
          status:
            verdict: Passed
            description: description
        - executedByExperiment:
            experimentRunID: experimentRunID
            updatedBy:
              userID: userID
              email: email
              username: username
            experimentID: experimentID
            notifyID: notifyID
            experimentName: experimentName
            experimentType: CRON
            updatedAt: 1
          faultName: faultName
          status:
            verdict: Passed
            description: description
        type: httpProbe
        probeProperties:
          datadogProbe:
            datadogSite: datadogSite
            datadogCredentialsSecretName: datadogCredentialsSecretName
            metrics:
              comparator: null
              query: query
              timeFrame: timeFrame
            syntheticsTest:
              testType: api
              publicId: publicId
          sloProbe:
            comparator: null
            insecureSkipVerify: true
            evaluationTimeout: evaluationTimeout
            sloSourceMetadata:
              apiTokenSecret: apiTokenSecret
              scope:
                orgIdentifier: orgIdentifier
                accountIdentifier: accountIdentifier
                projectIdentifier: projectIdentifier
            platformEndpoint: platformEndpoint
            evaluationWindow:
              evaluationStartTime: {}
              evaluationEndTime: {}
            sloIdentifier: sloIdentifier
          promProbe:
            comparator: null
            endpoint: endpoint
            auth: null
            queryPath: queryPath
            query: query
            tlsConfig: null
          apmProbe:
            comparator:
              criteria: criteria
              type: type
              value: value
            appDynamicsProbeInputs:
              appdMetrics:
                metricsFullPath: metricsFullPath
                durationInMin: {}
              connectorID: connectorID
            type: Prometheus
            splunkObservabilityProbeInputs:
              splunkObservabilityMetrics:
                durationInMin: {}
                query: query
              connectorID: connectorID
            prometheusProbeInputs:
              connectorID: connectorID
              query: query
              tlsConfig:
                caCrt:
                  identifier: identifier
                insecureSkipVerify: {}
                clientCrt: null
                key: null
          cmdProbe:
            comparator: null
            source: source
            command: command
          httpProbe:
            headers:
            - value: value
              key: key
            - value: value
              key: key
            method:
              post:
                responseBody: responseBody
                criteria: criteria
                body: body
                bodyPath: bodyPath
                contentType: contentType
                responseCode: responseCode
              get:
                responseBody: responseBody
                criteria: criteria
                responseCode: responseCode
            auth:
              credentialsFile: credentialsFile
              credentials: credentials
              type: type
            url: url
            tlsConfig:
              caFile: caFile
              keyFile: keyFile
              certFile: certFile
              insecureSkipVerify: true
          dynatraceProbe:
            comparator: null
            endpoint: endpoint
            apiTokenSecretName: apiTokenSecretName
            metrics:
              entitySelector: entitySelector
              metricsSelector: metricsSelector
            timeFrame: timeFrame
          k8sProbe:
            resourceNames: resourceNames
            resource: resource
            labelSelector: labelSelector
            namespace: namespace
            fieldSelector: fieldSelector
            operation: operation
            version: version
            group: group
        tags:
        - tags
        - tags
        createdAt: 0
        runProperties:
          stopOnFailure: true
          pollingInterval: pollingInterval
          interval: interval
          initialDelay: initialDelay
          attempt: {}
          retry: {}
          timeout: timeout
          verbosity: verbosity
        createdBy:
          userID: userID
          email: email
          username: username
        identity: identity
        infrastructureType: Kubernetes
        isEnabled: true
        name: name
        probeReferenceCount: 6
        updatedAt: 5
    types.ImportProbeTemplateRequest:
      required:
      - accountID
      - name
      type: object
      properties:
        accountID:
          type: string
        description:
          type: string
        hubRef:
          type: string
        identity:
          type: string
        name:
          type: string
        orgID:
          type: string
        probeRef:
          type: string
        projectID:
          type: string
        tags:
          type: array
          items:
            type: string
    types.InfrastructureType:
      type: string
      enum:
      - Kubernetes
      - KubernetesV2
      - Windows
      - Linux
      - CloudFoundry
      - Container
      x-enum-varnames:
      - InfrastructureTypeKubernetes
      - InfrastructureTypeKubernetesV2
      - InfrastructureTypeWindows
      - InfrastructureTypeLinux
      - InfrastructureTypeCloudFoundry
      - InfrastructureTypeContainer
    types.InternalExperimentRunRequest:
      type: object
      properties:
        email:
          type: string
        inputsetIdentity:
          type: string
        runtimeInputs:
          $ref: "#/components/schemas/template.ChaosExperimentInputsetSpec"
        userID:
          type: string
        username:
          type: string
    types.ListExperimentV2Response:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/types.ExperimentV2"
        pagination:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_api.Pagination"
      example:
        pagination:
          totalItems: 2
          limit: 5
          totalPages: 7
          index: 5
        data:
        - recentWorkflowRunDetails:
          - phase: phase
            createdAt: createdAt
            resiliencyScore: 1.4658129805029452
            updatedBy: ""
            createdBy: ""
            runSequence: 5
            notifyID: notifyID
            workflowRunID: workflowRunID
            updatedAt: updatedAt
          - phase: phase
            createdAt: createdAt
            resiliencyScore: 1.4658129805029452
            updatedBy: ""
            createdBy: ""
            runSequence: 5
            notifyID: notifyID
            workflowRunID: workflowRunID
            updatedAt: updatedAt
          updatedBy: null
          weightages:
          - weightage: 2
            experimentName: experimentName
          - weightage: 2
            experimentName: experimentName
          eventsMetadata:
          - environmentIdentifier:
            - environmentIdentifier
            - environmentIdentifier
            faultName: faultName
            serviceIdentifier:
            - serviceIdentifier
            - serviceIdentifier
          - environmentIdentifier:
            - environmentIdentifier
            - environmentIdentifier
            faultName: faultName
            serviceIdentifier:
            - serviceIdentifier
            - serviceIdentifier
          lastExecutedAt: lastExecutedAt
          identifiers:
            orgIdentifier: orgIdentifier
            accountIdentifier: accountIdentifier
            projectIdentifier: projectIdentifier
          isCronEnabled: true
          isCustomWorkflow: true
          isSingleRunCronEnabled: true
          description: description
          recommendation:
            bySystem: true
            weightage: 5
            reasons:
            - reasons
            - reasons
          singleClickOnboardMetadata:
            onboardingID: onboardingID
            faults:
            - faults
            - faults
          workflowManifest: workflowManifest
          infra:
            updatedBy: updatedBy
            kind: kind
            description: description
            orgID: orgID
            spec:
              k8sInfraV2:
                emissaryURL: emissaryURL
                discoveryAgentId: discoveryAgentId
                scope: NAMESPACE
                aiEnabled: true
                namespace: namespace
                serviceAccount: serviceAccount
                type: KUBERNETES
                version: version
            tags:
            - tags
            - tags
            accountID: accountID
            createdAt: 0
            apiVersion: apiVersion
            environmentId: environmentId
            isRemoved: true
            createdBy: createdBy
            identity: identity
            name: name
            id: id
            projectID: projectID
            updatedAt: 6
          tags:
          - tags
          - tags
          createdAt: createdAt
          targetNetworkService:
          - uid: uid
            name: name
            namespace: namespace
            id: id
          - uid: uid
            name: name
            namespace: namespace
            id: id
          isRemoved: true
          createdBy:
            userID: userID
            email: email
            username: username
          name: name
          workflowType: workflowType
          cronSyntax: cronSyntax
          workflowID: workflowID
          updatedAt: updatedAt
        - recentWorkflowRunDetails:
          - phase: phase
            createdAt: createdAt
            resiliencyScore: 1.4658129805029452
            updatedBy: ""
            createdBy: ""
            runSequence: 5
            notifyID: notifyID
            workflowRunID: workflowRunID
            updatedAt: updatedAt
          - phase: phase
            createdAt: createdAt
            resiliencyScore: 1.4658129805029452
            updatedBy: ""
            createdBy: ""
            runSequence: 5
            notifyID: notifyID
            workflowRunID: workflowRunID
            updatedAt: updatedAt
          updatedBy: null
          weightages:
          - weightage: 2
            experimentName: experimentName
          - weightage: 2
            experimentName: experimentName
          eventsMetadata:
          - environmentIdentifier:
            - environmentIdentifier
            - environmentIdentifier
            faultName: faultName
            serviceIdentifier:
            - serviceIdentifier
            - serviceIdentifier
          - environmentIdentifier:
            - environmentIdentifier
            - environmentIdentifier
            faultName: faultName
            serviceIdentifier:
            - serviceIdentifier
            - serviceIdentifier
          lastExecutedAt: lastExecutedAt
          identifiers:
            orgIdentifier: orgIdentifier
            accountIdentifier: accountIdentifier
            projectIdentifier: projectIdentifier
          isCronEnabled: true
          isCustomWorkflow: true
          isSingleRunCronEnabled: true
          description: description
          recommendation:
            bySystem: true
            weightage: 5
            reasons:
            - reasons
            - reasons
          singleClickOnboardMetadata:
            onboardingID: onboardingID
            faults:
            - faults
            - faults
          workflowManifest: workflowManifest
          infra:
            updatedBy: updatedBy
            kind: kind
            description: description
            orgID: orgID
            spec:
              k8sInfraV2:
                emissaryURL: emissaryURL
                discoveryAgentId: discoveryAgentId
                scope: NAMESPACE
                aiEnabled: true
                namespace: namespace
                serviceAccount: serviceAccount
                type: KUBERNETES
                version: version
            tags:
            - tags
            - tags
            accountID: accountID
            createdAt: 0
            apiVersion: apiVersion
            environmentId: environmentId
            isRemoved: true
            createdBy: createdBy
            identity: identity
            name: name
            id: id
            projectID: projectID
            updatedAt: 6
          tags:
          - tags
          - tags
          createdAt: createdAt
          targetNetworkService:
          - uid: uid
            name: name
            namespace: namespace
            id: id
          - uid: uid
            name: name
            namespace: namespace
            id: id
          isRemoved: true
          createdBy:
            userID: userID
            email: email
            username: username
          name: name
          workflowType: workflowType
          cronSyntax: cronSyntax
          workflowID: workflowID
          updatedAt: updatedAt
    types.ListGamedayExperimentResponse:
      type: object
      properties:
        environmentID:
          type: string
        experimentID:
          type: string
        experimentTemplateName:
          type: string
        hubID:
          type: string
        infraID:
          type: string
        infraType:
          $ref: "#/components/schemas/model.InfrastructureType"
      example:
        hubID: hubID
        experimentTemplateName: experimentTemplateName
        environmentID: environmentID
        experimentID: experimentID
        infraID: infraID
        infraType: Kubernetes
    types.ListGamedayRunV2Response:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/types.Run"
      example:
        data:
        - summary:
            totalCompletedRuns: 5
            actionItems:
            - createdAt: 1
              item: item
              id: id
              user: null
            - createdAt: 1
              item: item
              id: id
              user: null
            totalSuspendedRuns: 7
            avgResiliencyScore: 5.962133916683182
            totalCompletedWithErrRuns: 2
          gameDayID: gameDayID
          updatedBy: null
          identifiers:
            orgIdentifier: orgIdentifier
            accountIdentifier: accountIdentifier
            projectIdentifier: projectIdentifier
          experiments:
          - hubID: hubID
            experimentCsv: experimentCsv
            experimentTemplateName: experimentTemplateName
            lastRunNotifyID: lastRunNotifyID
            environmentID: environmentID
            experimentManifest: experimentManifest
            chaosInfraID: chaosInfraID
            experimentID: experimentID
            infraType: Kubernetes
          - hubID: hubID
            experimentCsv: experimentCsv
            experimentTemplateName: experimentTemplateName
            lastRunNotifyID: lastRunNotifyID
            environmentID: environmentID
            experimentManifest: experimentManifest
            chaosInfraID: chaosInfraID
            experimentID: experimentID
            infraType: Kubernetes
          prerequisites:
          - actionItem: actionItem
            description: description
            comment: comment
            ID: ID
            status: done
          - actionItem: actionItem
            description: description
            comment: comment
            ID: ID
            status: done
          createdAt: createdAt
          isRemoved: true
          stakeHolders:
          - approvalStatus: approved
            lastUpdatedBy: null
            notes: notes
            role: coordinator
            lastUpdatedAt: 0
            approvalRequired: true
            user: null
          - approvalStatus: approved
            lastUpdatedBy: null
            notes: notes
            role: coordinator
            lastUpdatedAt: 0
            approvalRequired: true
            user: null
          createdBy:
            userID: userID
            email: email
            username: username
          name: name
          startTime: 6
          gameDayRunID: gameDayRunID
          status: awaiting_approval
          updatedAt: updatedAt
        - summary:
            totalCompletedRuns: 5
            actionItems:
            - createdAt: 1
              item: item
              id: id
              user: null
            - createdAt: 1
              item: item
              id: id
              user: null
            totalSuspendedRuns: 7
            avgResiliencyScore: 5.962133916683182
            totalCompletedWithErrRuns: 2
          gameDayID: gameDayID
          updatedBy: null
          identifiers:
            orgIdentifier: orgIdentifier
            accountIdentifier: accountIdentifier
            projectIdentifier: projectIdentifier
          experiments:
          - hubID: hubID
            experimentCsv: experimentCsv
            experimentTemplateName: experimentTemplateName
            lastRunNotifyID: lastRunNotifyID
            environmentID: environmentID
            experimentManifest: experimentManifest
            chaosInfraID: chaosInfraID
            experimentID: experimentID
            infraType: Kubernetes
          - hubID: hubID
            experimentCsv: experimentCsv
            experimentTemplateName: experimentTemplateName
            lastRunNotifyID: lastRunNotifyID
            environmentID: environmentID
            experimentManifest: experimentManifest
            chaosInfraID: chaosInfraID
            experimentID: experimentID
            infraType: Kubernetes
          prerequisites:
          - actionItem: actionItem
            description: description
            comment: comment
            ID: ID
            status: done
          - actionItem: actionItem
            description: description
            comment: comment
            ID: ID
            status: done
          createdAt: createdAt
          isRemoved: true
          stakeHolders:
          - approvalStatus: approved
            lastUpdatedBy: null
            notes: notes
            role: coordinator
            lastUpdatedAt: 0
            approvalRequired: true
            user: null
          - approvalStatus: approved
            lastUpdatedBy: null
            notes: notes
            role: coordinator
            lastUpdatedAt: 0
            approvalRequired: true
            user: null
          createdBy:
            userID: userID
            email: email
            username: username
          name: name
          startTime: 6
          gameDayRunID: gameDayRunID
          status: awaiting_approval
          updatedAt: updatedAt
    types.ListGamedayV2Response:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/types.GamedayV2"
        pagination:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_api.Pagination"
      example:
        pagination:
          totalItems: 2
          limit: 5
          totalPages: 7
          index: 5
        data:
        - gameDayID: gameDayID
          updatedBy: null
          identifiers:
            orgIdentifier: orgIdentifier
            accountIdentifier: accountIdentifier
            projectIdentifier: projectIdentifier
          experiments:
          - hubID: hubID
            experimentTemplateName: experimentTemplateName
            environmentID: environmentID
            experimentID: experimentID
            infraID: infraID
            infraType: Kubernetes
          - hubID: hubID
            experimentTemplateName: experimentTemplateName
            environmentID: environmentID
            experimentID: experimentID
            infraID: infraID
            infraType: Kubernetes
          description: description
          stakeholders:
          - role: coordinator
            approvalRequired: true
            user: null
          - role: coordinator
            approvalRequired: true
            user: null
          objective: objective
          recentGamedayRuns:
          - runAt: runAt
            name: name
            gameDayRunID: gameDayRunID
            runBy: null
            status: awaiting_approval
          - runAt: runAt
            name: name
            gameDayRunID: gameDayRunID
            runBy: null
            status: awaiting_approval
          tags:
          - tags
          - tags
          prerequisites:
          - actionItem: actionItem
            description: description
            id: id
          - actionItem: actionItem
            description: description
            id: id
          createdAt: createdAt
          isRemoved: true
          createdBy:
            userID: userID
            email: email
            username: username
          name: name
          updatedAt: updatedAt
        - gameDayID: gameDayID
          updatedBy: null
          identifiers:
            orgIdentifier: orgIdentifier
            accountIdentifier: accountIdentifier
            projectIdentifier: projectIdentifier
          experiments:
          - hubID: hubID
            experimentTemplateName: experimentTemplateName
            environmentID: environmentID
            experimentID: experimentID
            infraID: infraID
            infraType: Kubernetes
          - hubID: hubID
            experimentTemplateName: experimentTemplateName
            environmentID: environmentID
            experimentID: experimentID
            infraID: infraID
            infraType: Kubernetes
          description: description
          stakeholders:
          - role: coordinator
            approvalRequired: true
            user: null
          - role: coordinator
            approvalRequired: true
            user: null
          objective: objective
          recentGamedayRuns:
          - runAt: runAt
            name: name
            gameDayRunID: gameDayRunID
            runBy: null
            status: awaiting_approval
          - runAt: runAt
            name: name
            gameDayRunID: gameDayRunID
            runBy: null
            status: awaiting_approval
          tags:
          - tags
          - tags
          prerequisites:
          - actionItem: actionItem
            description: description
            id: id
          - actionItem: actionItem
            description: description
            id: id
          createdAt: createdAt
          isRemoved: true
          createdBy:
            userID: userID
            email: email
            username: username
          name: name
          updatedAt: updatedAt
    types.ListProbeResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/types.GetProbeResponse"
        pagination:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_api.Pagination"
        totalNoOfProbes:
          type: integer
      example:
        pagination:
          totalItems: 2
          limit: 5
          totalPages: 7
          index: 5
        data:
        - variables:
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          updatedBy: null
          probeId: probeId
          description: description
          recentProbeRuns:
          - executedByExperiment:
              experimentRunID: experimentRunID
              updatedBy:
                userID: userID
                email: email
                username: username
              experimentID: experimentID
              notifyID: notifyID
              experimentName: experimentName
              experimentType: CRON
              updatedAt: 1
            faultName: faultName
            status:
              verdict: Passed
              description: description
          - executedByExperiment:
              experimentRunID: experimentRunID
              updatedBy:
                userID: userID
                email: email
                username: username
              experimentID: experimentID
              notifyID: notifyID
              experimentName: experimentName
              experimentType: CRON
              updatedAt: 1
            faultName: faultName
            status:
              verdict: Passed
              description: description
          type: httpProbe
          probeProperties:
            datadogProbe:
              datadogSite: datadogSite
              datadogCredentialsSecretName: datadogCredentialsSecretName
              metrics:
                comparator: null
                query: query
                timeFrame: timeFrame
              syntheticsTest:
                testType: api
                publicId: publicId
            sloProbe:
              comparator: null
              insecureSkipVerify: true
              evaluationTimeout: evaluationTimeout
              sloSourceMetadata:
                apiTokenSecret: apiTokenSecret
                scope:
                  orgIdentifier: orgIdentifier
                  accountIdentifier: accountIdentifier
                  projectIdentifier: projectIdentifier
              platformEndpoint: platformEndpoint
              evaluationWindow:
                evaluationStartTime: {}
                evaluationEndTime: {}
              sloIdentifier: sloIdentifier
            promProbe:
              comparator: null
              endpoint: endpoint
              auth: null
              queryPath: queryPath
              query: query
              tlsConfig: null
            apmProbe:
              comparator:
                criteria: criteria
                type: type
                value: value
              appDynamicsProbeInputs:
                appdMetrics:
                  metricsFullPath: metricsFullPath
                  durationInMin: {}
                connectorID: connectorID
              type: Prometheus
              splunkObservabilityProbeInputs:
                splunkObservabilityMetrics:
                  durationInMin: {}
                  query: query
                connectorID: connectorID
              prometheusProbeInputs:
                connectorID: connectorID
                query: query
                tlsConfig:
                  caCrt:
                    identifier: identifier
                  insecureSkipVerify: {}
                  clientCrt: null
                  key: null
            cmdProbe:
              comparator: null
              source: source
              command: command
            httpProbe:
              headers:
              - value: value
                key: key
              - value: value
                key: key
              method:
                post:
                  responseBody: responseBody
                  criteria: criteria
                  body: body
                  bodyPath: bodyPath
                  contentType: contentType
                  responseCode: responseCode
                get:
                  responseBody: responseBody
                  criteria: criteria
                  responseCode: responseCode
              auth:
                credentialsFile: credentialsFile
                credentials: credentials
                type: type
              url: url
              tlsConfig:
                caFile: caFile
                keyFile: keyFile
                certFile: certFile
                insecureSkipVerify: true
            dynatraceProbe:
              comparator: null
              endpoint: endpoint
              apiTokenSecretName: apiTokenSecretName
              metrics:
                entitySelector: entitySelector
                metricsSelector: metricsSelector
              timeFrame: timeFrame
            k8sProbe:
              resourceNames: resourceNames
              resource: resource
              labelSelector: labelSelector
              namespace: namespace
              fieldSelector: fieldSelector
              operation: operation
              version: version
              group: group
          tags:
          - tags
          - tags
          createdAt: 0
          runProperties:
            stopOnFailure: true
            pollingInterval: pollingInterval
            interval: interval
            initialDelay: initialDelay
            attempt: {}
            retry: {}
            timeout: timeout
            verbosity: verbosity
          createdBy:
            userID: userID
            email: email
            username: username
          identity: identity
          infrastructureType: Kubernetes
          isEnabled: true
          name: name
          probeReferenceCount: 6
          updatedAt: 5
        - variables:
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          - allowedValues:
            - {}
            - {}
            path: path
            default: {}
            name: name
            validator: validator
            description: description
            category: FaultTarget
            stringify: true
            type: String
            value: {}
            required: true
            tags:
            - tags
            - tags
          updatedBy: null
          probeId: probeId
          description: description
          recentProbeRuns:
          - executedByExperiment:
              experimentRunID: experimentRunID
              updatedBy:
                userID: userID
                email: email
                username: username
              experimentID: experimentID
              notifyID: notifyID
              experimentName: experimentName
              experimentType: CRON
              updatedAt: 1
            faultName: faultName
            status:
              verdict: Passed
              description: description
          - executedByExperiment:
              experimentRunID: experimentRunID
              updatedBy:
                userID: userID
                email: email
                username: username
              experimentID: experimentID
              notifyID: notifyID
              experimentName: experimentName
              experimentType: CRON
              updatedAt: 1
            faultName: faultName
            status:
              verdict: Passed
              description: description
          type: httpProbe
          probeProperties:
            datadogProbe:
              datadogSite: datadogSite
              datadogCredentialsSecretName: datadogCredentialsSecretName
              metrics:
                comparator: null
                query: query
                timeFrame: timeFrame
              syntheticsTest:
                testType: api
                publicId: publicId
            sloProbe:
              comparator: null
              insecureSkipVerify: true
              evaluationTimeout: evaluationTimeout
              sloSourceMetadata:
                apiTokenSecret: apiTokenSecret
                scope:
                  orgIdentifier: orgIdentifier
                  accountIdentifier: accountIdentifier
                  projectIdentifier: projectIdentifier
              platformEndpoint: platformEndpoint
              evaluationWindow:
                evaluationStartTime: {}
                evaluationEndTime: {}
              sloIdentifier: sloIdentifier
            promProbe:
              comparator: null
              endpoint: endpoint
              auth: null
              queryPath: queryPath
              query: query
              tlsConfig: null
            apmProbe:
              comparator:
                criteria: criteria
                type: type
                value: value
              appDynamicsProbeInputs:
                appdMetrics:
                  metricsFullPath: metricsFullPath
                  durationInMin: {}
                connectorID: connectorID
              type: Prometheus
              splunkObservabilityProbeInputs:
                splunkObservabilityMetrics:
                  durationInMin: {}
                  query: query
                connectorID: connectorID
              prometheusProbeInputs:
                connectorID: connectorID
                query: query
                tlsConfig:
                  caCrt:
                    identifier: identifier
                  insecureSkipVerify: {}
                  clientCrt: null
                  key: null
            cmdProbe:
              comparator: null
              source: source
              command: command
            httpProbe:
              headers:
              - value: value
                key: key
              - value: value
                key: key
              method:
                post:
                  responseBody: responseBody
                  criteria: criteria
                  body: body
                  bodyPath: bodyPath
                  contentType: contentType
                  responseCode: responseCode
                get:
                  responseBody: responseBody
                  criteria: criteria
                  responseCode: responseCode
              auth:
                credentialsFile: credentialsFile
                credentials: credentials
                type: type
              url: url
              tlsConfig:
                caFile: caFile
                keyFile: keyFile
                certFile: certFile
                insecureSkipVerify: true
            dynatraceProbe:
              comparator: null
              endpoint: endpoint
              apiTokenSecretName: apiTokenSecretName
              metrics:
                entitySelector: entitySelector
                metricsSelector: metricsSelector
              timeFrame: timeFrame
            k8sProbe:
              resourceNames: resourceNames
              resource: resource
              labelSelector: labelSelector
              namespace: namespace
              fieldSelector: fieldSelector
              operation: operation
              version: version
              group: group
          tags:
          - tags
          - tags
          createdAt: 0
          runProperties:
            stopOnFailure: true
            pollingInterval: pollingInterval
            interval: interval
            initialDelay: initialDelay
            attempt: {}
            retry: {}
            timeout: timeout
            verbosity: verbosity
          createdBy:
            userID: userID
            email: email
            username: username
          identity: identity
          infrastructureType: Kubernetes
          isEnabled: true
          name: name
          probeReferenceCount: 6
          updatedAt: 5
        totalNoOfProbes: 5
    types.Note:
      type: object
      properties:
        comment:
          type: string
        createdAt:
          type: integer
        noteId:
          type: string
        updatedAt:
          type: integer
        user:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
      example:
        createdAt: 0
        comment: comment
        noteId: noteId
        user:
          userID: userID
          email: email
          username: username
        updatedAt: 6
    types.Notes:
      type: object
      properties:
        experimentID:
          type: string
        experimentRunID:
          type: string
        gamedayRunID:
          type: string
        id:
          type: string
        identifiers:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.Identifiers"
        notes:
          type: array
          items:
            $ref: "#/components/schemas/types.Note"
        type:
          $ref: "#/components/schemas/chaosresourcenotes.NoteType"
      example:
        gamedayRunID: gamedayRunID
        experimentRunID: experimentRunID
        notes:
        - createdAt: 0
          comment: comment
          noteId: noteId
          user:
            userID: userID
            email: email
            username: username
          updatedAt: 6
        - createdAt: 0
          comment: comment
          noteId: noteId
          user:
            userID: userID
            email: email
            username: username
          updatedAt: 6
        identifiers:
          orgIdentifier: orgIdentifier
          accountIdentifier: accountIdentifier
          projectIdentifier: projectIdentifier
        experimentID: experimentID
        id: id
        type: experiment-run
    types.Prerequisite:
      type: object
      properties:
        actionItem:
          type: string
        description:
          type: string
        id:
          type: string
      example:
        actionItem: actionItem
        description: description
        id: id
    types.PrerequisiteForRun:
      type: object
      properties:
        ID:
          type: string
        actionItem:
          type: string
        comment:
          type: string
        description:
          type: string
        status:
          $ref: "#/components/schemas/gamedayrunv2.PrerequisiteStatus"
      example:
        actionItem: actionItem
        description: description
        comment: comment
        ID: ID
        status: done
    types.ProbeBulkEnableRequest:
      type: object
      properties:
        isBulkUpdate:
          type: boolean
        isEnabled:
          type: boolean
    types.ProbeRecentExecutions:
      type: object
      properties:
        executedByExperiment:
          $ref: "#/components/schemas/types.ExecutedByExperiment"
        faultName:
          type: string
        status:
          $ref: "#/components/schemas/types.Status"
      example:
        executedByExperiment:
          experimentRunID: experimentRunID
          updatedBy:
            userID: userID
            email: email
            username: username
          experimentID: experimentID
          notifyID: notifyID
          experimentName: experimentName
          experimentType: CRON
          updatedAt: 1
        faultName: faultName
        status:
          verdict: Passed
          description: description
    types.ProbeRequest:
      type: object
      properties:
        description:
          type: string
        identity:
          type: string
        infrastructureType:
          $ref: "#/components/schemas/types.InfrastructureType"
        isEnabled:
          type: boolean
        name:
          type: string
        probeId:
          type: string
        probeProperties:
          $ref: "#/components/schemas/probe.ProbeTemplateProperties"
        probeReferenceCount:
          type: integer
        recentProbeRuns:
          type: array
          items:
            $ref: "#/components/schemas/types.ProbeRecentExecutions"
        runProperties:
          $ref: "#/components/schemas/probe.ProbeTemplateRunProperties"
        tags:
          type: array
          items:
            type: string
        type:
          $ref: "#/components/schemas/types.ProbeType"
        variables:
          type: array
          items:
            $ref: "#/components/schemas/template.Variable"
    types.ProbeType:
      type: string
      enum:
      - httpProbe
      - cmdProbe
      - promProbe
      - k8sProbe
      - sloProbe
      - datadogProbe
      - dynatraceProbe
      - apmProbe
      x-enum-varnames:
      - ProbeTypeHTTPProbe
      - ProbeTypeCmdProbe
      - ProbeTypePromProbe
      - ProbeTypeK8sProbe
      - ProbeTypeSloProbe
      - ProbeTypeDatadogProbe
      - ProbeTypeDynatraceProbe
      - ProbeTypeAPMProbe
    types.RecentGamedayRun:
      type: object
      properties:
        gameDayRunID:
          type: string
        name:
          type: string
        runAt:
          type: string
        runBy:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
        status:
          $ref: "#/components/schemas/gamedayv2.GamedayRunStatus"
      example:
        runAt: runAt
        name: name
        gameDayRunID: gameDayRunID
        runBy: null
        status: awaiting_approval
    types.Run:
      type: object
      properties:
        createdAt:
          type: string
        createdBy:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
        experiments:
          type: array
          items:
            $ref: "#/components/schemas/types.ExperimentRuns"
        gameDayID:
          type: string
        gameDayRunID:
          type: string
        identifiers:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.Identifiers"
        isRemoved:
          type: boolean
        name:
          type: string
        prerequisites:
          type: array
          items:
            $ref: "#/components/schemas/types.PrerequisiteForRun"
        stakeHolders:
          type: array
          items:
            $ref: "#/components/schemas/types.StakeHolderDetailsForRuns"
        startTime:
          type: integer
          description: after approval
        status:
          $ref: "#/components/schemas/gamedayv2.GamedayRunStatus"
        summary:
          $ref: "#/components/schemas/types.Summary"
        updatedAt:
          type: string
        updatedBy:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
      example:
        summary:
          totalCompletedRuns: 5
          actionItems:
          - createdAt: 1
            item: item
            id: id
            user: null
          - createdAt: 1
            item: item
            id: id
            user: null
          totalSuspendedRuns: 7
          avgResiliencyScore: 5.962133916683182
          totalCompletedWithErrRuns: 2
        gameDayID: gameDayID
        updatedBy: null
        identifiers:
          orgIdentifier: orgIdentifier
          accountIdentifier: accountIdentifier
          projectIdentifier: projectIdentifier
        experiments:
        - hubID: hubID
          experimentCsv: experimentCsv
          experimentTemplateName: experimentTemplateName
          lastRunNotifyID: lastRunNotifyID
          environmentID: environmentID
          experimentManifest: experimentManifest
          chaosInfraID: chaosInfraID
          experimentID: experimentID
          infraType: Kubernetes
        - hubID: hubID
          experimentCsv: experimentCsv
          experimentTemplateName: experimentTemplateName
          lastRunNotifyID: lastRunNotifyID
          environmentID: environmentID
          experimentManifest: experimentManifest
          chaosInfraID: chaosInfraID
          experimentID: experimentID
          infraType: Kubernetes
        prerequisites:
        - actionItem: actionItem
          description: description
          comment: comment
          ID: ID
          status: done
        - actionItem: actionItem
          description: description
          comment: comment
          ID: ID
          status: done
        createdAt: createdAt
        isRemoved: true
        stakeHolders:
        - approvalStatus: approved
          lastUpdatedBy: null
          notes: notes
          role: coordinator
          lastUpdatedAt: 0
          approvalRequired: true
          user: null
        - approvalStatus: approved
          lastUpdatedBy: null
          notes: notes
          role: coordinator
          lastUpdatedAt: 0
          approvalRequired: true
          user: null
        createdBy:
          userID: userID
          email: email
          username: username
        name: name
        startTime: 6
        gameDayRunID: gameDayRunID
        status: awaiting_approval
        updatedAt: updatedAt
    types.ScenarioType:
      type: string
      enum:
      - CRON
      - NON_CRON
      - GAMEDAY
      - ALL
      x-enum-varnames:
      - ScenarioTypeCron
      - ScenarioTypeNonCron
      - ScenarioTypeGameday
      - ScenarioTypeAll
    types.StakeHolderDetailsForRuns:
      type: object
      properties:
        approvalRequired:
          type: boolean
        approvalStatus:
          $ref: "#/components/schemas/gamedayrunv2.ApprovalStatus"
        lastUpdatedAt:
          type: integer
        lastUpdatedBy:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
        notes:
          type: string
        role:
          $ref: "#/components/schemas/gamedayv2.StakeHolderRole"
        user:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
      example:
        approvalStatus: approved
        lastUpdatedBy: null
        notes: notes
        role: coordinator
        lastUpdatedAt: 0
        approvalRequired: true
        user: null
    types.StakeHolderInput:
      type: object
      properties:
        approvalRequired:
          type: boolean
        role:
          $ref: "#/components/schemas/types.StakeHolderRole"
        userID:
          type: string
      example:
        role: coordinator
        approvalRequired: true
        userID: userID
    types.StakeHolderResponse:
      type: object
      properties:
        approvalRequired:
          type: boolean
        role:
          $ref: "#/components/schemas/types.StakeHolderRole"
        user:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_graph_model.UserDetails"
      example:
        role: coordinator
        approvalRequired: true
        user: null
    types.StakeHolderRole:
      type: string
      enum:
      - coordinator
      - triage_engineer
      - attendee
      - others
      x-enum-varnames:
      - Coordinator
      - TriageEngineer
      - Attendee
      - Others
    types.Status:
      type: object
      properties:
        description:
          type: string
        verdict:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_pkg_chaos_v2_probes_types.ProbeVerdict"
      example:
        verdict: Passed
        description: description
    types.StopChaosV2ExperimentResponse:
      type: object
      properties:
        experimentId:
          type: string
        experimentName:
          type: string
        isStopped:
          type: boolean
      example:
        isStopped: true
        experimentId: experimentId
        experimentName: experimentName
    types.Summary:
      type: object
      properties:
        actionItems:
          type: array
          items:
            $ref: "#/components/schemas/types.ActionItem"
        avgResiliencyScore:
          type: number
        totalCompletedRuns:
          type: integer
        totalCompletedWithErrRuns:
          type: integer
        totalSuspendedRuns:
          type: integer
      example:
        totalCompletedRuns: 5
        actionItems:
        - createdAt: 1
          item: item
          id: id
          user: null
        - createdAt: 1
          item: item
          id: id
          user: null
        totalSuspendedRuns: 7
        avgResiliencyScore: 5.962133916683182
        totalCompletedWithErrRuns: 2
    types.UpdateCronExperimentAction:
      type: string
      enum:
      - Enable
      - Disable
      - Update
      x-enum-varnames:
      - UpdateCronExperimentActionEnable
      - UpdateCronExperimentActionDisable
      - UpdateCronExperimentActionUpdate
    types.UpdateCronExperimentStateRequest:
      type: object
      properties:
        action:
          $ref: "#/components/schemas/types.UpdateCronExperimentAction"
        cronSyntax:
          type: string
        experimentIDs:
          type: array
          items:
            type: string
        isSingleRunCronEnabled:
          type: boolean
    types.UpdateCronExperimentStateResponse:
      type: object
      properties:
        failedIDs:
          type: array
          items:
            type: string
        successIDs:
          type: array
          items:
            type: string
      example:
        successIDs:
        - successIDs
        - successIDs
        failedIDs:
        - failedIDs
        - failedIDs
    types.UpdateGameDayRunRequest:
      type: object
      properties:
        actionItems:
          type: array
          items:
            type: string
        gameDayRunID:
          type: string
        status:
          $ref: "#/components/schemas/gamedayv2.GamedayRunStatus"
    types.UpdateGamedayRequest:
      type: object
      properties:
        experiments:
          type: array
          items:
            $ref: "#/components/schemas/types.ExperimentRequest"
        gameDayID:
          type: string
        gamedayDescription:
          type: string
        gamedayName:
          type: string
        isRemoved:
          type: boolean
        objective:
          type: string
        prerequisites:
          type: array
          items:
            $ref: "#/components/schemas/types.Prerequisite"
        stakeholders:
          type: array
          items:
            $ref: "#/components/schemas/types.StakeHolderInput"
    types.UpdateNoteRequest:
      type: object
      properties:
        comment:
          type: string
        experimentID:
          type: string
        experimentRunID:
          type: string
        gamedayRunID:
          type: string
        noteId:
          type: string
        operation:
          $ref: "#/components/schemas/types.UpdateOperation"
        type:
          $ref: "#/components/schemas/chaosresourcenotes.NoteType"
    types.UpdateOperation:
      type: string
      enum:
      - delete
      - update
      x-enum-varnames:
      - OperationDelete
      - OperationUpdate
    types.UpdatePrerequisiteRequest:
      type: object
      properties:
        ID:
          type: string
        comment:
          type: string
        status:
          $ref: "#/components/schemas/gamedayrunv2.PrerequisiteStatus"
    types.UpdateStakeHolderActionRequest:
      type: object
      properties:
        approvalStatus:
          $ref: "#/components/schemas/gamedayrunv2.ApprovalStatus"
        notes:
          type: string
        userID:
          type: string
    types.UserDetails:
      type: object
      properties:
        email:
          type: string
        userID:
          type: string
        username:
          type: string
      example:
        userID: userID
        email: email
        username: username
    types.Weightages:
      type: object
      properties:
        experimentName:
          type: string
        weightage:
          type: integer
      example:
        weightage: 2
        experimentName: experimentName
    v1.APMProbeInputs:
      type: object
      properties:
        appDynamicsInputs:
          type: object
          description: AppDynamicsInputs contains the inputs required for AppDynamics
            probe
          allOf:
          - $ref: "#/components/schemas/v1.AppDynamicsInputs"
        comparator:
          type: object
          description: Comparator check for the correctness of the probe output
          allOf:
          - $ref: "#/components/schemas/v1.ComparatorInfo"
        prometheusInputs:
          type: object
          description: PrometheusInputs contains the inputs required for prometheus
            probe
          allOf:
          - $ref: "#/components/schemas/v1.PrometheusInputs"
        splunkObservabilityInputs:
          type: object
          description: SplunkObservabilityInputs contains the inputs required for
            Splunk Observability probe
          allOf:
          - $ref: "#/components/schemas/v1.SplunkObservabilityInputs"
        type:
          type: string
          description: Type for the prometheus probe
    v1.APMProbeTLSConfig:
      type: object
      properties:
        insecureSkipVerify:
          type: boolean
          description: InsecureSkipVerify flag to skip certificate checks
        secretName:
          type: string
          description: SecretName contains the secret name for the TLS configuration
        serverName:
          type: string
          description: ServerName contains the server name for the TLS configuration
    v1.AWSElasticBlockStoreVolumeSource:
      type: object
      properties:
        fsType:
          type: string
          description: |-
            Filesystem type of the volume that you want to mount.
            Tip: Ensure that the filesystem type is supported by the host operating system.
            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
            TODO: how do we prevent errors in the filesystem from compromising the machine
            +optional
        partition:
          type: integer
          description: |-
            The partition in the volume that you want to mount.
            If omitted, the default is to mount by volume name.
            Examples: For volume /dev/sda1, you specify the partition as "1".
            Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
            +optional
        readOnly:
          type: boolean
          description: |-
            Specify "true" to force and set the ReadOnly property in VolumeMounts to "true".
            If omitted, the default is "false".
            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
            +optional
        volumeID:
          type: string
          description: |-
            Unique ID of the persistent disk resource in AWS (Amazon EBS volume).
            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    v1.AppDynamicsInputs:
      type: object
      properties:
        appdMetrics:
          type: object
          description: AppdMetrics contains the appd metrics
          allOf:
          - $ref: "#/components/schemas/v1.AppdMetrics"
        authSecretName:
          type: string
          description: AuthSecretName secret name for the authentication
        endpoint:
          type: string
          description: Endpoint for the AppDynamics probe
    v1.AppdMetrics:
      type: object
      properties:
        durationInMin:
          type: integer
          description: DurationInMin contains the duration in minutes
        metricsFullPath:
          type: string
          description: MetricsFullPath contains the full path of the metrics
    v1.Authorization:
      type: object
      properties:
        credentials:
          type: string
        credentialsFile:
          type: string
        type:
          type: string
    v1.AzureDataDiskCachingMode:
      type: string
      enum:
      - None
      - ReadOnly
      - ReadWrite
      x-enum-varnames:
      - AzureDataDiskCachingNone
      - AzureDataDiskCachingReadOnly
      - AzureDataDiskCachingReadWrite
    v1.AzureDataDiskKind:
      type: string
      enum:
      - Shared
      - Dedicated
      - Managed
      x-enum-varnames:
      - AzureSharedBlobDisk
      - AzureDedicatedBlobDisk
      - AzureManagedDisk
    v1.AzureDiskVolumeSource:
      type: object
      properties:
        cachingMode:
          type: object
          description: |-
            Host Caching mode: None, Read Only, Read Write.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.AzureDataDiskCachingMode"
        diskName:
          type: string
          description: The Name of the data disk in the blob storage
        diskURI:
          type: string
          description: The URI the data disk in the blob storage
        fsType:
          type: string
          description: |-
            Filesystem type to mount.
            Must be a filesystem type supported by the host operating system.
            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
            +optional
        kind:
          type: object
          description: "Expected values Shared: multiple blob disks per storage account\
            \  Dedicated: single blob disk per storage account  Managed: azure managed\
            \ data disk (only in managed availability set). defaults to shared"
          allOf:
          - $ref: "#/components/schemas/v1.AzureDataDiskKind"
        readOnly:
          type: boolean
          description: |-
            Defaults to false (read/write). ReadOnly here will force
            the ReadOnly setting in VolumeMounts.
            +optional
    v1.AzureFileVolumeSource:
      type: object
      properties:
        readOnly:
          type: boolean
          description: |-
            Defaults to false (read/write). ReadOnly here will force
            the ReadOnly setting in VolumeMounts.
            +optional
        secretName:
          type: string
          description: the name of secret that contains Azure Storage Account Name
            and Key
        shareName:
          type: string
          description: Share Name
    v1.CSIVolumeSource:
      type: object
      properties:
        driver:
          type: string
          description: |-
            Driver is the name of the CSI driver that handles this volume.
            Consult with your admin for the correct name as registered in the cluster.
        fsType:
          type: string
          description: |-
            Filesystem type to mount. Ex. "ext4", "xfs", "ntfs".
            If not provided, the empty value is passed to the associated CSI driver
            which will determine the default filesystem to apply.
            +optional
        nodePublishSecretRef:
          type: object
          description: |-
            NodePublishSecretRef is a reference to the secret object containing
            sensitive information to pass to the CSI driver to complete the CSI
            NodePublishVolume and NodeUnpublishVolume calls.
            This field is optional, and  may be empty if no secret is required. If the
            secret object contains more than one secret, all secret references are passed.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.LocalObjectReference"
        readOnly:
          type: boolean
          description: |-
            Specifies a read-only configuration for the volume.
            Defaults to false (read/write).
            +optional
        volumeAttributes:
          type: object
          additionalProperties:
            type: string
          description: |-
            VolumeAttributes stores driver-specific properties that are passed to the CSI
            driver. Consult your driver's documentation for supported values.
            +optional
    v1.Capabilities:
      type: object
      properties:
        add:
          type: array
          description: |-
            Added capabilities
            +optional
          items:
            type: string
        drop:
          type: array
          description: |-
            Removed capabilities
            +optional
          items:
            type: string
    v1.CephFSVolumeSource:
      type: object
      properties:
        monitors:
          type: array
          description: |-
            Required: Monitors is a collection of Ceph monitors
            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
          items:
            type: string
        path:
          type: string
          description: |-
            Optional: Used as the mounted root, rather than the full Ceph tree, default is /
            +optional
        readOnly:
          type: boolean
          description: |-
            Optional: Defaults to false (read/write). ReadOnly here will force
            the ReadOnly setting in VolumeMounts.
            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
            +optional
        secretFile:
          type: string
          description: |-
            Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
            +optional
        secretRef:
          type: object
          description: |-
            Optional: SecretRef is reference to the authentication secret for User, default is empty.
            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.LocalObjectReference"
        user:
          type: string
          description: |-
            Optional: User is the rados user name, default is admin
            More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
            +optional
    v1.CinderVolumeSource:
      type: object
      properties:
        fsType:
          type: string
          description: |-
            Filesystem type to mount.
            Must be a filesystem type supported by the host operating system.
            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
            +optional
        readOnly:
          type: boolean
          description: |-
            Optional: Defaults to false (read/write). ReadOnly here will force
            the ReadOnly setting in VolumeMounts.
            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
            +optional
        secretRef:
          type: object
          description: |-
            Optional: points to a secret object containing parameters used to connect
            to OpenStack.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.LocalObjectReference"
        volumeID:
          type: string
          description: |-
            volume id used to identify the volume in cinder.
            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    v1.ClientIPConfig:
      type: object
      properties:
        timeoutSeconds:
          type: integer
          description: |-
            timeoutSeconds specifies the seconds of ClientIP type session sticky time.
            The value must be >0 && <=86400(for 1 day) if ServiceAffinity == "ClientIP".
            Default value is 10800(for 3 hours).
            +optional
    v1.CmdProbeInputs:
      type: object
      properties:
        command:
          type: string
          description: Command need to be executed for the probe
        comparator:
          type: object
          description: Comparator check for the correctness of the probe output
          allOf:
          - $ref: "#/components/schemas/v1.ComparatorInfo"
        source:
          type: object
          description: |-
            The source where we have to run the command
            It will run in inline(inside experiment itself) mode if source is nil
          allOf:
          - $ref: "#/components/schemas/v1.SourceDetails"
    v1.ComparatorInfo:
      type: object
      properties:
        criteria:
          type: string
          description: |-
            Criteria for matching data
            it supports >=, <=, ==, >, <, != for int and float
            it supports equal, notEqual, contains for string
        type:
          type: string
          description: |-
            Type of data
            it can be int, float, string
        value:
          type: string
          description: Value contains relative value for criteria
    v1.Condition:
      type: object
      properties:
        lastTransitionTime:
          type: string
          description: |-
            lastTransitionTime is the last time the condition transitioned from one status to another.
            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
            +required
            +kubebuilder:validation:Required
            +kubebuilder:validation:Type=string
            +kubebuilder:validation:Format=date-time
        message:
          type: string
          description: |-
            message is a human readable message indicating details about the transition.
            This may be an empty string.
            +required
            +kubebuilder:validation:Required
            +kubebuilder:validation:MaxLength=32768
        observedGeneration:
          type: integer
          description: |-
            observedGeneration represents the .metadata.generation that the condition was set based upon.
            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
            with respect to the current state of the instance.
            +optional
            +kubebuilder:validation:Minimum=0
        reason:
          type: string
          description: |-
            reason contains a programmatic identifier indicating the reason for the condition's last transition.
            Producers of specific condition types may define expected values and meanings for this field,
            and whether the values are considered a guaranteed API.
            The value should be a CamelCase string.
            This field may not be empty.
            +required
            +kubebuilder:validation:Required
            +kubebuilder:validation:MaxLength=1024
            +kubebuilder:validation:MinLength=1
            +kubebuilder:validation:Pattern=`^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$`
        status:
          type: object
          description: |-
            status of the condition, one of True, False, Unknown.
            +required
            +kubebuilder:validation:Required
            +kubebuilder:validation:Enum=True;False;Unknown
          allOf:
          - $ref: "#/components/schemas/k8s_io_apimachinery_pkg_apis_meta_v1.ConditionStatus"
        type:
          type: string
          description: |-
            type of condition in CamelCase or in foo.example.com/CamelCase.
            ---
            Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
            useful (see .node.status.conditions), the ability to deconflict is important.
            The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
            +required
            +kubebuilder:validation:Required
            +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
            +kubebuilder:validation:MaxLength=316
      example:
        reason: reason
        lastTransitionTime: lastTransitionTime
        message: message
        type: type
        observedGeneration: 6
        status: ""
    v1.ConfigMapEnvSource:
      type: object
      properties:
        name:
          type: string
          description: |-
            Name of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            TODO: Add other useful fields. apiVersion, kind, uid?
            +optional
        optional:
          type: boolean
          description: |-
            Specify whether the ConfigMap must be defined
            +optional
    v1.ConfigMapKeySelector:
      type: object
      properties:
        key:
          type: string
          description: The key to select.
        name:
          type: string
          description: |-
            Name of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            TODO: Add other useful fields. apiVersion, kind, uid?
            +optional
        optional:
          type: boolean
          description: |-
            Specify whether the ConfigMap or its key must be defined
            +optional
    v1.ConfigMapProjection:
      type: object
      properties:
        items:
          type: array
          description: |-
            If unspecified, each key-value pair in the Data field of the referenced
            ConfigMap will be projected into the volume as a file whose name is the
            key and content is the value. If specified, the listed keys will be
            projected into the specified paths, and unlisted keys will not be
            present. If a key is specified which is not present in the ConfigMap,
            the volume setup will error unless it is marked optional. Paths must be
            relative and may not contain the '..' path or start with '..'.
            +optional
          items:
            $ref: "#/components/schemas/v1.KeyToPath"
        name:
          type: string
          description: |-
            Name of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            TODO: Add other useful fields. apiVersion, kind, uid?
            +optional
        optional:
          type: boolean
          description: |-
            Specify whether the ConfigMap or its keys must be defined
            +optional
    v1.ConfigMapVolumeSource:
      type: object
      properties:
        defaultMode:
          type: integer
          description: |-
            Optional: mode bits used to set permissions on created files by default.
            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
            Defaults to 0644.
            Directories within the path are not affected by this setting.
            This might be in conflict with other options that affect the file
            mode, like fsGroup, and the result can be other mode bits set.
            +optional
        items:
          type: array
          description: |-
            If unspecified, each key-value pair in the Data field of the referenced
            ConfigMap will be projected into the volume as a file whose name is the
            key and content is the value. If specified, the listed keys will be
            projected into the specified paths, and unlisted keys will not be
            present. If a key is specified which is not present in the ConfigMap,
            the volume setup will error unless it is marked optional. Paths must be
            relative and may not contain the '..' path or start with '..'.
            +optional
          items:
            $ref: "#/components/schemas/v1.KeyToPath"
        name:
          type: string
          description: |-
            Name of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            TODO: Add other useful fields. apiVersion, kind, uid?
            +optional
        optional:
          type: boolean
          description: |-
            Specify whether the ConfigMap or its keys must be defined
            +optional
    v1.DatadogMetrics:
      type: object
      properties:
        comparator:
          type: object
          description: Comparator check for the correctness of the probe output
          allOf:
          - $ref: "#/components/schemas/v1.ComparatorInfo"
        query:
          type: string
          description: Raw query string
        timeFrame:
          type: string
          description: Timeframe of the metrics
    v1.DatadogProbeInputs:
      type: object
      properties:
        datadogCredentialsSecretName:
          type: string
          description: name of the kubernetes secret containing the Datadog credntials
        datadogSite:
          type: string
          description: datadog site URL identifier
        metrics:
          type: object
          description: metrics parameters
          allOf:
          - $ref: "#/components/schemas/v1.DatadogMetrics"
        syntheticsTest:
          type: object
          description: synthetics test parameters
          allOf:
          - $ref: "#/components/schemas/v1.SyntheticsTest"
    v1.DatadogSyntheticsTestType:
      type: string
      enum:
      - api
      - browser
      x-enum-varnames:
      - API
      - Browser
    v1.DownwardAPIProjection:
      type: object
      properties:
        items:
          type: array
          description: |-
            Items is a list of DownwardAPIVolume file
            +optional
          items:
            $ref: "#/components/schemas/v1.DownwardAPIVolumeFile"
    v1.DownwardAPIVolumeFile:
      type: object
      properties:
        fieldRef:
          type: object
          description: |-
            Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ObjectFieldSelector"
        mode:
          type: integer
          description: |-
            Optional: mode bits used to set permissions on this file, must be an octal value
            between 0000 and 0777 or a decimal value between 0 and 511.
            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
            If not specified, the volume defaultMode will be used.
            This might be in conflict with other options that affect the file
            mode, like fsGroup, and the result can be other mode bits set.
            +optional
        path:
          type: string
          description: "Required: Path is  the relative path name of the file to be\
            \ created. Must not be absolute or contain the '..' path. Must be utf-8\
            \ encoded. The first item of the relative path must not start with '..'"
        resourceFieldRef:
          type: object
          description: |-
            Selects a resource of the container: only resources limits and requests
            (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ResourceFieldSelector"
    v1.DownwardAPIVolumeSource:
      type: object
      properties:
        defaultMode:
          type: integer
          description: |-
            Optional: mode bits to use on created files by default. Must be a
            Optional: mode bits used to set permissions on created files by default.
            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
            Defaults to 0644.
            Directories within the path are not affected by this setting.
            This might be in conflict with other options that affect the file
            mode, like fsGroup, and the result can be other mode bits set.
            +optional
        items:
          type: array
          description: |-
            Items is a list of downward API volume file
            +optional
          items:
            $ref: "#/components/schemas/v1.DownwardAPIVolumeFile"
    v1.DynatraceProbeInputs:
      type: object
      properties:
        apiTokenSecretName:
          type: string
          description: APITokenSecretName for authenticating with the Dynatrace platform
        comparator:
          type: object
          description: Comparator check for the correctness of the probe output
          allOf:
          - $ref: "#/components/schemas/v1.ComparatorInfo"
        endpoint:
          type: string
          description: Endpoint of the Dynatrace probe
        metrics:
          type: object
          description: Raw metrcis details of the Dynatrace probe
          allOf:
          - $ref: "#/components/schemas/v1.Metrics"
        timeFrame:
          type: string
          description: Timeframe of the metrics
    v1.EmptyDirVolumeSource:
      type: object
      properties:
        medium:
          type: object
          description: |-
            What type of storage medium should back this directory.
            The default is "" which means to use the node's default medium.
            Must be an empty string (default) or Memory.
            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.StorageMedium"
        sizeLimit:
          type: object
          description: |-
            Total amount of local storage required for this EmptyDir volume.
            The size limit is also applicable for memory medium.
            The maximum usage on memory medium EmptyDir would be the minimum value between
            the SizeLimit specified here and the sum of memory limits of all containers in a pod.
            The default is nil which means that the limit is undefined.
            More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
            +optional
          allOf:
          - $ref: "#/components/schemas/resource.Quantity"
    v1.EnvFromSource:
      type: object
      properties:
        configMapRef:
          type: object
          description: |-
            The ConfigMap to select from
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ConfigMapEnvSource"
        prefix:
          type: string
          description: |-
            An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
            +optional
        secretRef:
          type: object
          description: |-
            The Secret to select from
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.SecretEnvSource"
    v1.EnvVar:
      type: object
      properties:
        name:
          type: string
          description: Name of the environment variable. Must be a C_IDENTIFIER.
        value:
          type: string
          description: |-
            Variable references $(VAR_NAME) are expanded
            using the previous defined environment variables in the container and
            any service environment variables. If a variable cannot be resolved,
            the reference in the input string will be unchanged. The $(VAR_NAME)
            syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
            references will never be expanded, regardless of whether the variable
            exists or not.
            Defaults to "".
            +optional
        valueFrom:
          type: object
          description: |-
            Source for the environment variable's value. Cannot be used if value is not empty.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.EnvVarSource"
      example:
        name: name
        value: value
        valueFrom: ""
    v1.EnvVarSource:
      type: object
      properties:
        configMapKeyRef:
          type: object
          description: |-
            Selects a key of a ConfigMap.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ConfigMapKeySelector"
        fieldRef:
          type: object
          description: |-
            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ObjectFieldSelector"
        resourceFieldRef:
          type: object
          description: |-
            Selects a resource of the container: only resources limits and requests
            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ResourceFieldSelector"
        secretKeyRef:
          type: object
          description: |-
            Selects a key of a secret in the pod's namespace
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.SecretKeySelector"
    v1.EphemeralVolumeSource:
      type: object
      properties:
        volumeClaimTemplate:
          type: object
          description: |-
            Will be used to create a stand-alone PVC to provision the volume.
            The pod in which this EphemeralVolumeSource is embedded will be the
            owner of the PVC, i.e. the PVC will be deleted together with the
            pod.  The name of the PVC will be `<pod name>-<volume name>` where
            `<volume name>` is the name from the `PodSpec.Volumes` array
            entry. Pod validation will reject the pod if the concatenated name
            is not valid for a PVC (for example, too long).

            An existing PVC with that name that is not owned by the pod
            will *not* be used for the pod to avoid using an unrelated
            volume by mistake. Starting the pod is then blocked until
            the unrelated PVC is removed. If such a pre-created PVC is
            meant to be used by the pod, the PVC has to updated with an
            owner reference to the pod once the pod exists. Normally
            this should not be necessary, but it may be useful when
            manually reconstructing a broken cluster.

            This field is read-only and no changes will be made by Kubernetes
            to the PVC after it has been created.

            Required, must not be nil.
          allOf:
          - $ref: "#/components/schemas/v1.PersistentVolumeClaimTemplate"
    v1.EvaluationWindow:
      type: object
      properties:
        evaluationEndTime:
          type: integer
          description: End time of evaluation
        evaluationStartTime:
          type: integer
          description: Start time of evaluation
    v1.FCVolumeSource:
      type: object
      properties:
        fsType:
          type: string
          description: |-
            Filesystem type to mount.
            Must be a filesystem type supported by the host operating system.
            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
            TODO: how do we prevent errors in the filesystem from compromising the machine
            +optional
        lun:
          type: integer
          description: |-
            Optional: FC target lun number
            +optional
        readOnly:
          type: boolean
          description: |-
            Optional: Defaults to false (read/write). ReadOnly here will force
            the ReadOnly setting in VolumeMounts.
            +optional
        targetWWNs:
          type: array
          description: |-
            Optional: FC target worldwide names (WWNs)
            +optional
          items:
            type: string
        wwids:
          type: array
          description: |-
            Optional: FC volume world wide identifiers (wwids)
            Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
            +optional
          items:
            type: string
    v1.FieldsV1:
      type: object
    v1.FlexVolumeSource:
      type: object
      properties:
        driver:
          type: string
          description: Driver is the name of the driver to use for this volume.
        fsType:
          type: string
          description: |-
            Filesystem type to mount.
            Must be a filesystem type supported by the host operating system.
            Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
            +optional
        options:
          type: object
          additionalProperties:
            type: string
          description: |-
            Optional: Extra command options if any.
            +optional
        readOnly:
          type: boolean
          description: |-
            Optional: Defaults to false (read/write). ReadOnly here will force
            the ReadOnly setting in VolumeMounts.
            +optional
        secretRef:
          type: object
          description: |-
            Optional: SecretRef is reference to the secret object containing
            sensitive information to pass to the plugin scripts. This may be
            empty if no secret object is specified. If the secret object
            contains more than one secret, all secrets are passed to the plugin
            scripts.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.LocalObjectReference"
    v1.FlockerVolumeSource:
      type: object
      properties:
        datasetName:
          type: string
          description: |-
            Name of the dataset stored as metadata -> name on the dataset for Flocker
            should be considered as deprecated
            +optional
        datasetUUID:
          type: string
          description: |-
            UUID of the dataset. This is unique identifier of a Flocker dataset
            +optional
    v1.GCEPersistentDiskVolumeSource:
      type: object
      properties:
        fsType:
          type: string
          description: |-
            Filesystem type of the volume that you want to mount.
            Tip: Ensure that the filesystem type is supported by the host operating system.
            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
            TODO: how do we prevent errors in the filesystem from compromising the machine
            +optional
        partition:
          type: integer
          description: |-
            The partition in the volume that you want to mount.
            If omitted, the default is to mount by volume name.
            Examples: For volume /dev/sda1, you specify the partition as "1".
            Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
            +optional
        pdName:
          type: string
          description: |-
            Unique name of the PD resource in GCE. Used to identify the disk in GCE.
            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
        readOnly:
          type: boolean
          description: |-
            ReadOnly here will force the ReadOnly setting in VolumeMounts.
            Defaults to false.
            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
            +optional
    v1.GetMethod:
      type: object
      properties:
        criteria:
          type: string
          description: |-
            Criteria for matching data
            it supports  == != operations
        responseBody:
          type: string
          description: ResponseBody contains the response body for the http get request
        responseCode:
          type: string
          description: Value contains relative value for criteria
    v1.GitRepoVolumeSource:
      type: object
      properties:
        directory:
          type: string
          description: |-
            Target directory name.
            Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
            git repository.  Otherwise, if specified, the volume will contain the git repository in
            the subdirectory with the given name.
            +optional
        repository:
          type: string
          description: Repository URL
        revision:
          type: string
          description: |-
            Commit hash for the specified revision.
            +optional
    v1.GlusterfsVolumeSource:
      type: object
      properties:
        endpoints:
          type: string
          description: |-
            EndpointsName is the endpoint name that details Glusterfs topology.
            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
        path:
          type: string
          description: |-
            Path is the Glusterfs volume path.
            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
        readOnly:
          type: boolean
          description: |-
            ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions.
            Defaults to false.
            More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
            +optional
    v1.HTTPMethod:
      type: object
      properties:
        get:
          $ref: "#/components/schemas/v1.GetMethod"
        post:
          $ref: "#/components/schemas/v1.PostMethod"
    v1.HTTPProbeInputs:
      type: object
      properties:
        auth:
          type: object
          description: Auth contains the authentication details for the http probe
          allOf:
          - $ref: "#/components/schemas/v1.Authorization"
        headers:
          type: object
          additionalProperties:
            type: string
          description: Headers contains the request headers
        insecureSkipVerify:
          type: boolean
          description: InsecureSkipVerify flag to skip certificate checks
        method:
          type: object
          description: "Method define the http method, it can be get or post"
          allOf:
          - $ref: "#/components/schemas/v1.HTTPMethod"
        tlsConfig:
          type: object
          description: TLSConfig contains the tls configuration for the http probe
          allOf:
          - $ref: "#/components/schemas/v1.TLSConfig"
        url:
          type: string
          description: "URL which needs to curl, to check the status"
    v1.HostPathType:
      type: string
      enum:
      - ""
      - DirectoryOrCreate
      - Directory
      - FileOrCreate
      - File
      - Socket
      - CharDevice
      - BlockDevice
      x-enum-varnames:
      - HostPathUnset
      - HostPathDirectoryOrCreate
      - HostPathDirectory
      - HostPathFileOrCreate
      - HostPathFile
      - HostPathSocket
      - HostPathCharDev
      - HostPathBlockDev
    v1.HostPathVolumeSource:
      type: object
      properties:
        path:
          type: string
          description: |-
            Path of the directory on the host.
            If the path is a symlink, it will follow the link to the real path.
            More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
        type:
          type: object
          description: |-
            Type for HostPath Volume
            Defaults to ""
            More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.HostPathType"
    v1.IPFamily:
      type: string
      enum:
      - IPv4
      - IPv6
      x-enum-varnames:
      - IPv4Protocol
      - IPv6Protocol
    v1.IPFamilyPolicyType:
      type: string
      enum:
      - SingleStack
      - PreferDualStack
      - RequireDualStack
      x-enum-varnames:
      - IPFamilyPolicySingleStack
      - IPFamilyPolicyPreferDualStack
      - IPFamilyPolicyRequireDualStack
    v1.ISCSIVolumeSource:
      type: object
      properties:
        chapAuthDiscovery:
          type: boolean
          description: |-
            whether support iSCSI Discovery CHAP authentication
            +optional
        chapAuthSession:
          type: boolean
          description: |-
            whether support iSCSI Session CHAP authentication
            +optional
        fsType:
          type: string
          description: |-
            Filesystem type of the volume that you want to mount.
            Tip: Ensure that the filesystem type is supported by the host operating system.
            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
            More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
            TODO: how do we prevent errors in the filesystem from compromising the machine
            +optional
        initiatorName:
          type: string
          description: |-
            Custom iSCSI Initiator Name.
            If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
            <target portal>:<volume name> will be created for the connection.
            +optional
        iqn:
          type: string
          description: Target iSCSI Qualified Name.
        iscsiInterface:
          type: string
          description: |-
            iSCSI Interface Name that uses an iSCSI transport.
            Defaults to 'default' (tcp).
            +optional
        lun:
          type: integer
          description: iSCSI Target Lun number.
        portals:
          type: array
          description: |-
            iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
            is other than default (typically TCP ports 860 and 3260).
            +optional
          items:
            type: string
        readOnly:
          type: boolean
          description: |-
            ReadOnly here will force the ReadOnly setting in VolumeMounts.
            Defaults to false.
            +optional
        secretRef:
          type: object
          description: |-
            CHAP Secret for iSCSI target and initiator authentication
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.LocalObjectReference"
        targetPortal:
          type: string
          description: |-
            iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
            is other than default (typically TCP ports 860 and 3260).
    v1.Identifier:
      type: object
      properties:
        accountIdentifier:
          type: string
          description: AccountIdentifier for account ID
        orgIdentifier:
          type: string
          description: OrgIdentifier for organization ID
        projectIdentifier:
          type: string
          description: ProjectIdentifier for project ID
    v1.K8sProbeInputs:
      type: object
      properties:
        data:
          type: string
          description: |-
            Data contains the manifest/data for the resource, which need to be created
            it supported for create operation only
        fieldSelector:
          type: string
          description: fieldselector to get the resource using fields selector
        group:
          type: string
          description: group of the resource
        labelSelector:
          type: string
          description: labelselector to get the resource using labels selector
        namespace:
          type: string
          description: namespace of the resource
        operation:
          type: string
          description: |-
            Operation performed by the k8s probe
            it can be create, delete, present, absent
        resource:
          type: string
          description: kind of resource
        resourceNames:
          type: string
          description: ResourceNames to get the resources using their list of comma
            separated names
        version:
          type: string
          description: apiversion of the resource
    v1.KeyToPath:
      type: object
      properties:
        key:
          type: string
          description: The key to project.
        mode:
          type: integer
          description: |-
            Optional: mode bits used to set permissions on this file.
            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
            If not specified, the volume defaultMode will be used.
            This might be in conflict with other options that affect the file
            mode, like fsGroup, and the result can be other mode bits set.
            +optional
        path:
          type: string
          description: |-
            The relative path of the file to map the key to.
            May not be an absolute path.
            May not contain the path element '..'.
            May not start with the string '..'.
    v1.LabelSelector:
      type: object
      properties:
        matchExpressions:
          type: array
          description: |-
            matchExpressions is a list of label selector requirements. The requirements are ANDed.
            +optional
          items:
            $ref: "#/components/schemas/v1.LabelSelectorRequirement"
        matchLabels:
          type: object
          additionalProperties:
            type: string
          description: |-
            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
            map is equivalent to an element of matchExpressions, whose key field is "key", the
            operator is "In", and the values array contains only "value". The requirements are ANDed.
            +optional
    v1.LabelSelectorOperator:
      type: string
      enum:
      - In
      - NotIn
      - Exists
      - DoesNotExist
      x-enum-varnames:
      - LabelSelectorOpIn
      - LabelSelectorOpNotIn
      - LabelSelectorOpExists
      - LabelSelectorOpDoesNotExist
    v1.LabelSelectorRequirement:
      type: object
      properties:
        key:
          type: string
          description: |-
            key is the label key that the selector applies to.
            +patchMergeKey=key
            +patchStrategy=merge
        operator:
          type: object
          description: |-
            operator represents a key's relationship to a set of values.
            Valid operators are In, NotIn, Exists and DoesNotExist.
          allOf:
          - $ref: "#/components/schemas/v1.LabelSelectorOperator"
        values:
          type: array
          description: |-
            values is an array of string values. If the operator is In or NotIn,
            the values array must be non-empty. If the operator is Exists or DoesNotExist,
            the values array must be empty. This array is replaced during a strategic
            merge patch.
            +optional
          items:
            type: string
    v1.LoadBalancerIngress:
      type: object
      properties:
        hostname:
          type: string
          description: |-
            Hostname is set for load-balancer ingress points that are DNS based
            (typically AWS load-balancers)
            +optional
        ip:
          type: string
          description: |-
            IP is set for load-balancer ingress points that are IP based
            (typically GCE or OpenStack load-balancers)
            +optional
        ports:
          type: array
          description: |-
            Ports is a list of records of service ports
            If used, every port defined in the service should have an entry in it
            +listType=atomic
            +optional
          items:
            $ref: "#/components/schemas/v1.PortStatus"
    v1.LoadBalancerStatus:
      type: object
      properties:
        ingress:
          type: array
          description: |-
            Ingress is a list containing ingress points for the load-balancer.
            Traffic intended for the service should be sent to these ingress points.
            +optional
          items:
            $ref: "#/components/schemas/v1.LoadBalancerIngress"
    v1.LocalObjectReference:
      type: object
      properties:
        name:
          type: string
          description: |-
            Name of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            TODO: Add other useful fields. apiVersion, kind, uid?
            +optional
    v1.ManagedFieldsEntry:
      type: object
      properties:
        apiVersion:
          type: string
          description: |-
            APIVersion defines the version of this resource that this field set
            applies to. The format is "group/version" just like the top-level
            APIVersion field. It is necessary to track the version of a field
            set because it cannot be automatically converted.
        fieldsType:
          type: string
          description: |-
            FieldsType is the discriminator for the different fields format and version.
            There is currently only one possible value: "FieldsV1"
        fieldsV1:
          type: object
          description: |-
            FieldsV1 holds the first JSON version format as described in the "FieldsV1" type.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.FieldsV1"
        manager:
          type: string
          description: Manager is an identifier of the workflow managing these fields.
        operation:
          type: object
          description: |-
            Operation is the type of operation which lead to this ManagedFieldsEntry being created.
            The only valid values for this field are 'Apply' and 'Update'.
          allOf:
          - $ref: "#/components/schemas/v1.ManagedFieldsOperationType"
        time:
          type: string
          description: |-
            Time is timestamp of when these fields were set. It should always be empty if Operation is 'Apply'
            +optional
    v1.ManagedFieldsOperationType:
      type: string
      enum:
      - Apply
      - Update
      x-enum-varnames:
      - ManagedFieldsOperationApply
      - ManagedFieldsOperationUpdate
    v1.Metrics:
      type: object
      properties:
        entitySelector:
          type: string
          description: Entity Selector of the metrics
        metricsSelector:
          type: string
          description: Query to get Dynatrace metrics
    v1.MountPropagationMode:
      type: string
      enum:
      - None
      - HostToContainer
      - Bidirectional
      x-enum-varnames:
      - MountPropagationNone
      - MountPropagationHostToContainer
      - MountPropagationBidirectional
    v1.NFSVolumeSource:
      type: object
      properties:
        path:
          type: string
          description: |-
            Path that is exported by the NFS server.
            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
        readOnly:
          type: boolean
          description: |-
            ReadOnly here will force
            the NFS export to be mounted with read-only permissions.
            Defaults to false.
            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
            +optional
        server:
          type: string
          description: |-
            Server is the hostname or IP address of the NFS server.
            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    v1.NewrelicMetrics:
      type: object
      properties:
        comparator:
          type: object
          description: Comparator check for the correctness of the probe output
          allOf:
          - $ref: "#/components/schemas/v1.ComparatorInfo"
        metricsEvaluationMode:
          type: string
          description: Mode on which metrcis will get evaluated(min/max/mean)
        query:
          type: string
          description: NRQL query string
        queryMetrics:
          type: string
          description: NRQL Metrics that will get evaluated
    v1.NewrelicProbeInputs:
      type: object
      properties:
        accountId:
          type: string
          description: Newrelic accountId
        apiTokenSecretName:
          type: string
          description: APITokenSecretName for authenticating with the Newrelic platform
        endpoint:
          type: string
          description: newrelic site URL identifier
        newrelicMetrics:
          type: object
          description: Newrelic metrics parameters
          allOf:
          - $ref: "#/components/schemas/v1.NewrelicMetrics"
    v1.ObjectFieldSelector:
      type: object
      properties:
        apiVersion:
          type: string
          description: |-
            Version of the schema the FieldPath is written in terms of, defaults to "v1".
            +optional
        fieldPath:
          type: string
          description: Path of the field to select in the specified API version.
    v1.ObjectMeta:
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
          description: |-
            Annotations is an unstructured key value map stored with a resource that may be
            set by external tools to store and retrieve arbitrary metadata. They are not
            queryable and should be preserved when modifying objects.
            More info: http://kubernetes.io/docs/user-guide/annotations
            +optional
        clusterName:
          type: string
          description: |-
            The name of the cluster which the object belongs to.
            This is used to distinguish resources with same name and namespace in different clusters.
            This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
            +optional
        creationTimestamp:
          type: string
          description: |-
            CreationTimestamp is a timestamp representing the server time when this object was
            created. It is not guaranteed to be set in happens-before order across separate operations.
            Clients may not set this value. It is represented in RFC3339 form and is in UTC.

            Populated by the system.
            Read-only.
            Null for lists.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
            +optional
        deletionGracePeriodSeconds:
          type: integer
          description: |-
            Number of seconds allowed for this object to gracefully terminate before
            it will be removed from the system. Only set when deletionTimestamp is also set.
            May only be shortened.
            Read-only.
            +optional
        deletionTimestamp:
          type: string
          description: |-
            DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This
            field is set by the server when a graceful deletion is requested by the user, and is not
            directly settable by a client. The resource is expected to be deleted (no longer visible
            from resource lists, and not reachable by name) after the time in this field, once the
            finalizers list is empty. As long as the finalizers list contains items, deletion is blocked.
            Once the deletionTimestamp is set, this value may not be unset or be set further into the
            future, although it may be shortened or the resource may be deleted prior to this time.
            For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react
            by sending a graceful termination signal to the containers in the pod. After that 30 seconds,
            the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,
            remove the pod from the API. In the presence of network partitions, this object may still
            exist after this timestamp, until an administrator or automated process can determine the
            resource is fully terminated.
            If not set, graceful deletion of the object has not been requested.

            Populated by the system when a graceful deletion is requested.
            Read-only.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
            +optional
        finalizers:
          type: array
          description: |-
            Must be empty before the object is deleted from the registry. Each entry
            is an identifier for the responsible component that will remove the entry
            from the list. If the deletionTimestamp of the object is non-nil, entries
            in this list can only be removed.
            Finalizers may be processed and removed in any order.  Order is NOT enforced
            because it introduces significant risk of stuck finalizers.
            finalizers is a shared field, any actor with permission can reorder it.
            If the finalizer list is processed in order, then this can lead to a situation
            in which the component responsible for the first finalizer in the list is
            waiting for a signal (field value, external system, or other) produced by a
            component responsible for a finalizer later in the list, resulting in a deadlock.
            Without enforced ordering finalizers are free to order amongst themselves and
            are not vulnerable to ordering changes in the list.
            +optional
            +patchStrategy=merge
          items:
            type: string
        generateName:
          type: string
          description: |-
            GenerateName is an optional prefix, used by the server, to generate a unique
            name ONLY IF the Name field has not been provided.
            If this field is used, the name returned to the client will be different
            than the name passed. This value will also be combined with a unique suffix.
            The provided value has the same validation rules as the Name field,
            and may be truncated by the length of the suffix required to make the value
            unique on the server.

            If this field is specified and the generated name exists, the server will
            NOT return a 409 - instead, it will either return 201 Created or 500 with Reason
            ServerTimeout indicating a unique name could not be found in the time allotted, and the client
            should retry (optionally after the time indicated in the Retry-After header).

            Applied only if Name is not specified.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
            +optional
        generation:
          type: integer
          description: |-
            A sequence number representing a specific generation of the desired state.
            Populated by the system. Read-only.
            +optional
        labels:
          type: object
          additionalProperties:
            type: string
          description: |-
            Map of string keys and values that can be used to organize and categorize
            (scope and select) objects. May match selectors of replication controllers
            and services.
            More info: http://kubernetes.io/docs/user-guide/labels
            +optional
        managedFields:
          type: array
          description: |-
            ManagedFields maps workflow-id and version to the set of fields
            that are managed by that workflow. This is mostly for internal
            housekeeping, and users typically shouldn't need to set or
            understand this field. A workflow can be the user's name, a
            controller's name, or the name of a specific apply path like
            "ci-cd". The set of fields is always in the version that the
            workflow used when modifying the object.

            +optional
          items:
            $ref: "#/components/schemas/v1.ManagedFieldsEntry"
        name:
          type: string
          description: |-
            Name must be unique within a namespace. Is required when creating resources, although
            some resources may allow a client to request the generation of an appropriate name
            automatically. Name is primarily intended for creation idempotence and configuration
            definition.
            Cannot be updated.
            More info: http://kubernetes.io/docs/user-guide/identifiers#names
            +optional
        namespace:
          type: string
          description: |-
            Namespace defines the space within which each name must be unique. An empty namespace is
            equivalent to the "default" namespace, but "default" is the canonical representation.
            Not all objects are required to be scoped to a namespace - the value of this field for
            those objects will be empty.

            Must be a DNS_LABEL.
            Cannot be updated.
            More info: http://kubernetes.io/docs/user-guide/namespaces
            +optional
        ownerReferences:
          type: array
          description: |-
            List of objects depended by this object. If ALL objects in the list have
            been deleted, this object will be garbage collected. If this object is managed by a controller,
            then an entry in this list will point to this controller, with the controller field set to true.
            There cannot be more than one managing controller.
            +optional
            +patchMergeKey=uid
            +patchStrategy=merge
          items:
            $ref: "#/components/schemas/v1.OwnerReference"
        resourceVersion:
          type: string
          description: |-
            An opaque value that represents the internal version of this object that can
            be used by clients to determine when objects have changed. May be used for optimistic
            concurrency, change detection, and the watch operation on a resource or set of resources.
            Clients must treat these values as opaque and passed unmodified back to the server.
            They may only be valid for a particular resource or set of resources.

            Populated by the system.
            Read-only.
            Value must be treated as opaque by clients and .
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
            +optional
        selfLink:
          type: string
          description: |-
            SelfLink is a URL representing this object.
            Populated by the system.
            Read-only.

            DEPRECATED
            Kubernetes will stop propagating this field in 1.20 release and the field is planned
            to be removed in 1.21 release.
            +optional
        uid:
          type: string
          description: |-
            UID is the unique in time and space value for this object. It is typically generated by
            the server on successful creation of a resource and is not allowed to change on PUT
            operations.

            Populated by the system.
            Read-only.
            More info: http://kubernetes.io/docs/user-guide/identifiers#uids
            +optional
    v1.ObjectReference:
      type: object
      properties:
        apiVersion:
          type: string
          description: |-
            API version of the referent.
            +optional
        fieldPath:
          type: string
          description: |-
            If referring to a piece of an object instead of an entire object, this string
            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
            For example, if the object reference is to a container within a pod, this would take on a value like:
            "spec.containers{name}" (where "name" refers to the name of the container that triggered
            the event) or if no container name is specified "spec.containers[2]" (container with
            index 2 in this pod). This syntax is chosen only to have some well-defined way of
            referencing a part of an object.
            TODO: this design is not final and this field is subject to change in the future.
            +optional
        kind:
          type: string
          description: |-
            Kind of the referent.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            +optional
        name:
          type: string
          description: |-
            Name of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            +optional
        namespace:
          type: string
          description: |-
            Namespace of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
            +optional
        resourceVersion:
          type: string
          description: |-
            Specific resourceVersion to which this reference is made, if any.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
            +optional
        uid:
          type: string
          description: |-
            UID of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
            +optional
      example:
        uid: uid
        apiVersion: apiVersion
        kind: kind
        resourceVersion: resourceVersion
        fieldPath: fieldPath
        name: name
        namespace: namespace
    v1.OwnerReference:
      type: object
      properties:
        apiVersion:
          type: string
          description: API version of the referent.
        blockOwnerDeletion:
          type: boolean
          description: |-
            If true, AND if the owner has the "foregroundDeletion" finalizer, then
            the owner cannot be deleted from the key-value store until this
            reference is removed.
            Defaults to false.
            To set this field, a user needs "delete" permission of the owner,
            otherwise 422 (Unprocessable Entity) will be returned.
            +optional
        controller:
          type: boolean
          description: |-
            If true, this reference points to the managing controller.
            +optional
        kind:
          type: string
          description: |-
            Kind of the referent.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        name:
          type: string
          description: |-
            Name of the referent.
            More info: http://kubernetes.io/docs/user-guide/identifiers#names
        uid:
          type: string
          description: |-
            UID of the referent.
            More info: http://kubernetes.io/docs/user-guide/identifiers#uids
      example:
        uid: uid
        controller: true
        apiVersion: apiVersion
        kind: kind
        name: name
        blockOwnerDeletion: true
    v1.PersistentVolumeAccessMode:
      type: string
      enum:
      - ReadWriteOnce
      - ReadOnlyMany
      - ReadWriteMany
      x-enum-varnames:
      - ReadWriteOnce
      - ReadOnlyMany
      - ReadWriteMany
    v1.PersistentVolumeClaimSpec:
      type: object
      properties:
        accessModes:
          type: array
          description: |-
            AccessModes contains the desired access modes the volume should have.
            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
            +optional
          items:
            $ref: "#/components/schemas/v1.PersistentVolumeAccessMode"
        dataSource:
          type: object
          description: |-
            This field can be used to specify either:
            * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
            * An existing PVC (PersistentVolumeClaim)
            * An existing custom resource that implements data population (Alpha)
            In order to use custom resource types that implement data population,
            the AnyVolumeDataSource feature gate must be enabled.
            If the provisioner or an external controller can support the specified data source,
            it will create a new volume based on the contents of the specified data source.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.TypedLocalObjectReference"
        resources:
          type: object
          description: |-
            Resources represents the minimum resources the volume should have.
            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ResourceRequirements"
        selector:
          type: object
          description: |-
            A label query over volumes to consider for binding.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.LabelSelector"
        storageClassName:
          type: string
          description: |-
            Name of the StorageClass required by the claim.
            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
            +optional
        volumeMode:
          type: object
          description: |-
            volumeMode defines what type of volume is required by the claim.
            Value of Filesystem is implied when not included in claim spec.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.PersistentVolumeMode"
        volumeName:
          type: string
          description: |-
            VolumeName is the binding reference to the PersistentVolume backing this claim.
            +optional
    v1.PersistentVolumeClaimTemplate:
      type: object
      properties:
        metadata:
          type: object
          description: |-
            May contain labels and annotations that will be copied into the PVC
            when creating it. No other fields are allowed and will be rejected during
            validation.

            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ObjectMeta"
        spec:
          type: object
          description: |-
            The specification for the PersistentVolumeClaim. The entire content is
            copied unchanged into the PVC that gets created from this
            template. The same fields as in a PersistentVolumeClaim
            are also valid here.
          allOf:
          - $ref: "#/components/schemas/v1.PersistentVolumeClaimSpec"
    v1.PersistentVolumeClaimVolumeSource:
      type: object
      properties:
        claimName:
          type: string
          description: |-
            ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
        readOnly:
          type: boolean
          description: |-
            Will force the ReadOnly setting in VolumeMounts.
            Default false.
            +optional
    v1.PersistentVolumeMode:
      type: string
      enum:
      - Block
      - Filesystem
      x-enum-varnames:
      - PersistentVolumeBlock
      - PersistentVolumeFilesystem
    v1.PhotonPersistentDiskVolumeSource:
      type: object
      properties:
        fsType:
          type: string
          description: |-
            Filesystem type to mount.
            Must be a filesystem type supported by the host operating system.
            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
        pdID:
          type: string
          description: ID that identifies Photon Controller persistent disk
    v1.PodFSGroupChangePolicy:
      type: string
      enum:
      - OnRootMismatch
      - Always
      x-enum-varnames:
      - FSGroupChangeOnRootMismatch
      - FSGroupChangeAlways
    v1.PodPhase:
      type: string
      enum:
      - Pending
      - Running
      - Succeeded
      - Failed
      - Unknown
      x-enum-varnames:
      - PodPending
      - PodRunning
      - PodSucceeded
      - PodFailed
      - PodUnknown
    v1.PodSecurityContext:
      type: object
      properties:
        fsGroup:
          type: integer
          description: |-
            A special supplemental group that applies to all containers in a pod.
            Some volume types allow the Kubelet to change the ownership of that volume
            to be owned by the pod:

            1. The owning GID will be the FSGroup
            2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
            3. The permission bits are OR'd with rw-rw----

            If unset, the Kubelet will not modify the ownership and permissions of any volume.
            +optional
        fsGroupChangePolicy:
          type: object
          description: |-
            fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
            before being exposed inside Pod. This field will only apply to
            volume types which support fsGroup based ownership(and permissions).
            It will have no effect on ephemeral volume types such as: secret, configmaps
            and emptydir.
            Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.PodFSGroupChangePolicy"
        runAsGroup:
          type: integer
          description: |-
            The GID to run the entrypoint of the container process.
            Uses runtime default if unset.
            May also be set in SecurityContext.  If set in both SecurityContext and
            PodSecurityContext, the value specified in SecurityContext takes precedence
            for that container.
            +optional
        runAsNonRoot:
          type: boolean
          description: |-
            Indicates that the container must run as a non-root user.
            If true, the Kubelet will validate the image at runtime to ensure that it
            does not run as UID 0 (root) and fail to start the container if it does.
            If unset or false, no such validation will be performed.
            May also be set in SecurityContext.  If set in both SecurityContext and
            PodSecurityContext, the value specified in SecurityContext takes precedence.
            +optional
        runAsUser:
          type: integer
          description: |-
            The UID to run the entrypoint of the container process.
            Defaults to user specified in image metadata if unspecified.
            May also be set in SecurityContext.  If set in both SecurityContext and
            PodSecurityContext, the value specified in SecurityContext takes precedence
            for that container.
            +optional
        seLinuxOptions:
          type: object
          description: |-
            The SELinux context to be applied to all containers.
            If unspecified, the container runtime will allocate a random SELinux context for each
            container.  May also be set in SecurityContext.  If set in
            both SecurityContext and PodSecurityContext, the value specified in SecurityContext
            takes precedence for that container.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.SELinuxOptions"
        seccompProfile:
          type: object
          description: |-
            The seccomp options to use by the containers in this pod.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.SeccompProfile"
        supplementalGroups:
          type: array
          description: |-
            A list of groups applied to the first process run in each container, in addition
            to the container's primary GID.  If unspecified, no groups will be added to
            any container.
            +optional
          items:
            type: integer
        sysctls:
          type: array
          description: |-
            Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
            sysctls (by the container runtime) might fail to launch.
            +optional
          items:
            $ref: "#/components/schemas/v1.Sysctl"
        windowsOptions:
          type: object
          description: |-
            The Windows specific settings applied to all containers.
            If unspecified, the options within a container's SecurityContext will be used.
            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.WindowsSecurityContextOptions"
      example:
        runAsUser: 7
        seLinuxOptions: ""
        fsGroup: 5
        seccompProfile: ""
        windowsOptions: ""
        fsGroupChangePolicy: ""
        supplementalGroups:
        - 9
        - 9
        runAsGroup: 2
        runAsNonRoot: true
        sysctls:
        - name: name
          value: value
        - name: name
          value: value
    v1.PortStatus:
      type: object
      properties:
        error:
          type: string
          description: |-
            Error is to record the problem with the service port
            The format of the error shall comply with the following rules:
            - built-in error values shall be specified in this file and those shall use
              CamelCase names
            - cloud provider specific error values must have names that comply with the
              format foo.example.com/CamelCase.
            ---
            The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
            +optional
            +kubebuilder:validation:Required
            +kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`
            +kubebuilder:validation:MaxLength=316
        port:
          type: integer
          description: Port is the port number of the service port of which status
            is recorded here
        protocol:
          type: object
          description: |-
            Protocol is the protocol of the service port of which status is recorded here
            The supported values are: "TCP", "UDP", "SCTP"
          allOf:
          - $ref: "#/components/schemas/v1.Protocol"
    v1.PortworxVolumeSource:
      type: object
      properties:
        fsType:
          type: string
          description: |-
            FSType represents the filesystem type to mount
            Must be a filesystem type supported by the host operating system.
            Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
        readOnly:
          type: boolean
          description: |-
            Defaults to false (read/write). ReadOnly here will force
            the ReadOnly setting in VolumeMounts.
            +optional
        volumeID:
          type: string
          description: VolumeID uniquely identifies a Portworx volume
    v1.PostMethod:
      type: object
      properties:
        body:
          type: string
          description: Body contains http body for post request
        bodyPath:
          type: string
          description: "BodyPath contains filePath, which contains http body"
        contentType:
          type: string
          description: ContentType contains content type for http body data
        criteria:
          type: string
          description: |-
            Criteria for matching data
            it supports  == != operations
        responseBody:
          type: string
          description: ResponseBody contains the response body for the http post request
        responseCode:
          type: string
          description: Value contains relative value for criteria
    v1.ProcMountType:
      type: string
      enum:
      - Default
      - Unmasked
      x-enum-varnames:
      - DefaultProcMount
      - UnmaskedProcMount
    v1.ProjectedVolumeSource:
      type: object
      properties:
        defaultMode:
          type: integer
          description: |-
            Mode bits used to set permissions on created files by default.
            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
            YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
            Directories within the path are not affected by this setting.
            This might be in conflict with other options that affect the file
            mode, like fsGroup, and the result can be other mode bits set.
            +optional
        sources:
          type: array
          description: |-
            list of volume projections
            +optional
          items:
            $ref: "#/components/schemas/v1.VolumeProjection"
    v1.PromProbeInputs:
      type: object
      properties:
        auth:
          type: object
          description: Auth contains the authentication details for the prometheus
            probe
          allOf:
          - $ref: "#/components/schemas/v1.Authorization"
        comparator:
          type: object
          description: Comparator check for the correctness of the probe output
          allOf:
          - $ref: "#/components/schemas/v1.ComparatorInfo"
        endpoint:
          type: string
          description: Endpoint for the prometheus probe
        query:
          type: string
          description: Query to get prometheus metrics
        queryPath:
          type: string
          description: "QueryPath contains filePath, which contains prometheus query"
        tlsConfig:
          type: object
          description: TLSConfig contains the tls configuration for the prometheus
            probe
          allOf:
          - $ref: "#/components/schemas/v1.TLSConfig"
    v1.PrometheusInputs:
      type: object
      properties:
        authSecretName:
          type: string
          description: AuthSecretName secret name for the authentication
        endpoint:
          type: string
          description: Endpoint for the prometheus probe
        query:
          type: string
          description: Query to get prometheus metrics
        tlsConfig:
          type: object
          description: TLSConfig contains the tls configuration for the prometheus
            probe
          allOf:
          - $ref: "#/components/schemas/v1.APMProbeTLSConfig"
    v1.Protocol:
      type: string
      enum:
      - TCP
      - UDP
      - SCTP
      x-enum-varnames:
      - ProtocolTCP
      - ProtocolUDP
      - ProtocolSCTP
    v1.PullPolicy:
      type: string
      enum:
      - Always
      - Never
      - IfNotPresent
      x-enum-varnames:
      - PullAlways
      - PullNever
      - PullIfNotPresent
    v1.QuobyteVolumeSource:
      type: object
      properties:
        group:
          type: string
          description: |-
            Group to map volume access to
            Default is no group
            +optional
        readOnly:
          type: boolean
          description: |-
            ReadOnly here will force the Quobyte volume to be mounted with read-only permissions.
            Defaults to false.
            +optional
        registry:
          type: string
          description: |-
            Registry represents a single or multiple Quobyte Registry services
            specified as a string as host:port pair (multiple entries are separated with commas)
            which acts as the central registry for volumes
        tenant:
          type: string
          description: |-
            Tenant owning the given Quobyte volume in the Backend
            Used with dynamically provisioned Quobyte volumes, value is set by the plugin
            +optional
        user:
          type: string
          description: |-
            User to map volume access to
            Defaults to serivceaccount user
            +optional
        volume:
          type: string
          description: Volume is a string that references an already created Quobyte
            volume by name.
    v1.RBDVolumeSource:
      type: object
      properties:
        fsType:
          type: string
          description: |-
            Filesystem type of the volume that you want to mount.
            Tip: Ensure that the filesystem type is supported by the host operating system.
            Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
            More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
            TODO: how do we prevent errors in the filesystem from compromising the machine
            +optional
        image:
          type: string
          description: |-
            The rados image name.
            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
        keyring:
          type: string
          description: |-
            Keyring is the path to key ring for RBDUser.
            Default is /etc/ceph/keyring.
            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
            +optional
        monitors:
          type: array
          description: |-
            A collection of Ceph monitors.
            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
          items:
            type: string
        pool:
          type: string
          description: |-
            The rados pool name.
            Default is rbd.
            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
            +optional
        readOnly:
          type: boolean
          description: |-
            ReadOnly here will force the ReadOnly setting in VolumeMounts.
            Defaults to false.
            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
            +optional
        secretRef:
          type: object
          description: |-
            SecretRef is name of the authentication secret for RBDUser. If provided
            overrides keyring.
            Default is nil.
            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.LocalObjectReference"
        user:
          type: string
          description: |-
            The rados user name.
            Default is admin.
            More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
            +optional
    v1.ResourceFieldSelector:
      type: object
      properties:
        containerName:
          type: string
          description: |-
            Container name: required for volumes, optional for env vars
            +optional
        divisor:
          type: object
          description: |-
            Specifies the output format of the exposed resources, defaults to "1"
            +optional
          allOf:
          - $ref: "#/components/schemas/resource.Quantity"
        resource:
          type: string
          description: "Required: resource to select"
    v1.ResourceList:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/resource.Quantity"
    v1.ResourceRequirements:
      type: object
      properties:
        limits:
          type: object
          description: |-
            Limits describes the maximum amount of compute resources allowed.
            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ResourceList"
        requests:
          type: object
          description: |-
            Requests describes the minimum amount of compute resources required.
            If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
            otherwise to an implementation-defined value.
            More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ResourceList"
    v1.RunProperty:
      type: object
      properties:
        attempt:
          type: integer
          description: Attempt contains the total attempt count for the probe
        initialDelay:
          type: string
          description: InitialDelay time interval for which probe will wait before
            run
        initialDelaySeconds:
          type: integer
          description: InitialDelaySeconds time interval for which probe will wait
            before run
        interval:
          type: string
          description: Interval contains the interval for the probe
        probePollingInterval:
          type: string
          description: |-
            ProbePollingInterval contains time interval, for which continuous probe should be sleep
            after each iteration
        probeTimeout:
          type: string
          description: ProbeTimeout contains timeout for the probe
        retry:
          type: integer
          description: Retry contains the retry count for the probe
        stopOnFailure:
          type: boolean
          description: |-
            StopOnFailure contains flag to stop/continue experiment execution, if probe fails
            it will stop the experiment execution, if provided true
            it will continue the experiment execution, if provided false or not provided(default case)
        verbosity:
          type: string
          description: |-
            Verbosity contains flag to set the verbosity of probe
            it support info and debug verbosity
    v1.SELinuxOptions:
      type: object
      properties:
        level:
          type: string
          description: |-
            Level is SELinux level label that applies to the container.
            +optional
        role:
          type: string
          description: |-
            Role is a SELinux role label that applies to the container.
            +optional
        type:
          type: string
          description: |-
            Type is a SELinux type label that applies to the container.
            +optional
        user:
          type: string
          description: |-
            User is a SELinux user label that applies to the container.
            +optional
    v1.SLOProbeInputs:
      type: object
      properties:
        comparator:
          type: object
          description: Comparator check for the correctness of the probe output
          allOf:
          - $ref: "#/components/schemas/v1.ComparatorInfo"
        evaluationTimeout:
          type: string
          description: |-
            EvaluationTimeout is the timeout window in which the SLO metrics
            will be fetched and will be evaluated
        evaluationWindow:
          type: object
          description: EvaluationWindow is the time period for which the metrics will
            be evaluated
          allOf:
          - $ref: "#/components/schemas/v1.EvaluationWindow"
        insecureSkipVerify:
          type: boolean
          description: InsecureSkipVerify flag to skip certificate checks
        platformEndpoint:
          type: string
          description: PlatformEndpoint for the monitoring service endpoint
        sloIdentifier:
          type: string
          description: SLOIdentifier for fetching the details of the SLO
        sloSourceMetadata:
          type: object
          description: SLOSourceMetadata consists of required metadata details to
            fetch metric data
          allOf:
          - $ref: "#/components/schemas/v1.SLOSourceMetadata"
    v1.SLOSourceMetadata:
      type: object
      properties:
        apiTokenSecret:
          type: string
          description: APITokenSecret for authenticating with the platform service
        scope:
          type: object
          description: Scope required for fetching details
          allOf:
          - $ref: "#/components/schemas/v1.Identifier"
    v1.ScaleIOVolumeSource:
      type: object
      properties:
        fsType:
          type: string
          description: |-
            Filesystem type to mount.
            Must be a filesystem type supported by the host operating system.
            Ex. "ext4", "xfs", "ntfs".
            Default is "xfs".
            +optional
        gateway:
          type: string
          description: The host address of the ScaleIO API Gateway.
        protectionDomain:
          type: string
          description: |-
            The name of the ScaleIO Protection Domain for the configured storage.
            +optional
        readOnly:
          type: boolean
          description: |-
            Defaults to false (read/write). ReadOnly here will force
            the ReadOnly setting in VolumeMounts.
            +optional
        secretRef:
          type: object
          description: |-
            SecretRef references to the secret for ScaleIO user and other
            sensitive information. If this is not provided, Login operation will fail.
          allOf:
          - $ref: "#/components/schemas/v1.LocalObjectReference"
        sslEnabled:
          type: boolean
          description: |-
            Flag to enable/disable SSL communication with Gateway, default false
            +optional
        storageMode:
          type: string
          description: |-
            Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
            Default is ThinProvisioned.
            +optional
        storagePool:
          type: string
          description: |-
            The ScaleIO Storage Pool associated with the protection domain.
            +optional
        system:
          type: string
          description: The name of the storage system as configured in ScaleIO.
        volumeName:
          type: string
          description: |-
            The name of a volume already created in the ScaleIO system
            that is associated with this volume source.
    v1.SeccompProfile:
      type: object
      properties:
        localhostProfile:
          type: string
          description: |-
            localhostProfile indicates a profile defined in a file on the node should be used.
            The profile must be preconfigured on the node to work.
            Must be a descending path, relative to the kubelet's configured seccomp profile location.
            Must only be set if type is "Localhost".
            +optional
        type:
          type: object
          description: |-
            type indicates which kind of seccomp profile will be applied.
            Valid options are:

            Localhost - a profile defined in a file on the node should be used.
            RuntimeDefault - the container runtime default profile should be used.
            Unconfined - no profile should be applied.
            +unionDiscriminator
          allOf:
          - $ref: "#/components/schemas/v1.SeccompProfileType"
    v1.SeccompProfileType:
      type: string
      enum:
      - Unconfined
      - RuntimeDefault
      - Localhost
      x-enum-varnames:
      - SeccompProfileTypeUnconfined
      - SeccompProfileTypeRuntimeDefault
      - SeccompProfileTypeLocalhost
    v1.SecretEnvSource:
      type: object
      properties:
        name:
          type: string
          description: |-
            Name of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            TODO: Add other useful fields. apiVersion, kind, uid?
            +optional
        optional:
          type: boolean
          description: |-
            Specify whether the Secret must be defined
            +optional
    v1.SecretKeySelector:
      type: object
      properties:
        key:
          type: string
          description: The key of the secret to select from.  Must be a valid secret
            key.
        name:
          type: string
          description: |-
            Name of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            TODO: Add other useful fields. apiVersion, kind, uid?
            +optional
        optional:
          type: boolean
          description: |-
            Specify whether the Secret or its key must be defined
            +optional
    v1.SecretProjection:
      type: object
      properties:
        items:
          type: array
          description: |-
            If unspecified, each key-value pair in the Data field of the referenced
            Secret will be projected into the volume as a file whose name is the
            key and content is the value. If specified, the listed keys will be
            projected into the specified paths, and unlisted keys will not be
            present. If a key is specified which is not present in the Secret,
            the volume setup will error unless it is marked optional. Paths must be
            relative and may not contain the '..' path or start with '..'.
            +optional
          items:
            $ref: "#/components/schemas/v1.KeyToPath"
        name:
          type: string
          description: |-
            Name of the referent.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            TODO: Add other useful fields. apiVersion, kind, uid?
            +optional
        optional:
          type: boolean
          description: |-
            Specify whether the Secret or its key must be defined
            +optional
    v1.SecretVolumeSource:
      type: object
      properties:
        defaultMode:
          type: integer
          description: |-
            Optional: mode bits used to set permissions on created files by default.
            Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
            YAML accepts both octal and decimal values, JSON requires decimal values
            for mode bits. Defaults to 0644.
            Directories within the path are not affected by this setting.
            This might be in conflict with other options that affect the file
            mode, like fsGroup, and the result can be other mode bits set.
            +optional
        items:
          type: array
          description: |-
            If unspecified, each key-value pair in the Data field of the referenced
            Secret will be projected into the volume as a file whose name is the
            key and content is the value. If specified, the listed keys will be
            projected into the specified paths, and unlisted keys will not be
            present. If a key is specified which is not present in the Secret,
            the volume setup will error unless it is marked optional. Paths must be
            relative and may not contain the '..' path or start with '..'.
            +optional
          items:
            $ref: "#/components/schemas/v1.KeyToPath"
        optional:
          type: boolean
          description: |-
            Specify whether the Secret or its keys must be defined
            +optional
        secretName:
          type: string
          description: |-
            Name of the secret in the pod's namespace to use.
            More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
            +optional
    v1.SecurityContext:
      type: object
      properties:
        allowPrivilegeEscalation:
          type: boolean
          description: |-
            AllowPrivilegeEscalation controls whether a process can gain more
            privileges than its parent process. This bool directly controls if
            the no_new_privs flag will be set on the container process.
            AllowPrivilegeEscalation is true always when the container is:
            1) run as Privileged
            2) has CAP_SYS_ADMIN
            +optional
        capabilities:
          type: object
          description: |-
            The capabilities to add/drop when running containers.
            Defaults to the default set of capabilities granted by the container runtime.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.Capabilities"
        privileged:
          type: boolean
          description: |-
            Run container in privileged mode.
            Processes in privileged containers are essentially equivalent to root on the host.
            Defaults to false.
            +optional
        procMount:
          type: object
          description: |-
            procMount denotes the type of proc mount to use for the containers.
            The default is DefaultProcMount which uses the container runtime defaults for
            readonly paths and masked paths.
            This requires the ProcMountType feature flag to be enabled.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ProcMountType"
        readOnlyRootFilesystem:
          type: boolean
          description: |-
            Whether this container has a read-only root filesystem.
            Default is false.
            +optional
        runAsGroup:
          type: integer
          description: |-
            The GID to run the entrypoint of the container process.
            Uses runtime default if unset.
            May also be set in PodSecurityContext.  If set in both SecurityContext and
            PodSecurityContext, the value specified in SecurityContext takes precedence.
            +optional
        runAsNonRoot:
          type: boolean
          description: |-
            Indicates that the container must run as a non-root user.
            If true, the Kubelet will validate the image at runtime to ensure that it
            does not run as UID 0 (root) and fail to start the container if it does.
            If unset or false, no such validation will be performed.
            May also be set in PodSecurityContext.  If set in both SecurityContext and
            PodSecurityContext, the value specified in SecurityContext takes precedence.
            +optional
        runAsUser:
          type: integer
          description: |-
            The UID to run the entrypoint of the container process.
            Defaults to user specified in image metadata if unspecified.
            May also be set in PodSecurityContext.  If set in both SecurityContext and
            PodSecurityContext, the value specified in SecurityContext takes precedence.
            +optional
        seLinuxOptions:
          type: object
          description: |-
            The SELinux context to be applied to the container.
            If unspecified, the container runtime will allocate a random SELinux context for each
            container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
            PodSecurityContext, the value specified in SecurityContext takes precedence.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.SELinuxOptions"
        seccompProfile:
          type: object
          description: |-
            The seccomp options to use by this container. If seccomp options are
            provided at both the pod & container level, the container options
            override the pod options.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.SeccompProfile"
        windowsOptions:
          type: object
          description: |-
            The Windows specific settings applied to all containers.
            If unspecified, the options from the PodSecurityContext will be used.
            If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.WindowsSecurityContextOptions"
      example:
        privileged: true
        runAsUser: 5
        capabilities: ""
        seLinuxOptions: ""
        seccompProfile: ""
        windowsOptions: ""
        procMount: ""
        allowPrivilegeEscalation: true
        runAsGroup: 1
        runAsNonRoot: true
        readOnlyRootFilesystem: true
    v1.ServiceAccountTokenProjection:
      type: object
      properties:
        audience:
          type: string
          description: |-
            Audience is the intended audience of the token. A recipient of a token
            must identify itself with an identifier specified in the audience of the
            token, and otherwise should reject the token. The audience defaults to the
            identifier of the apiserver.
            +optional
        expirationSeconds:
          type: integer
          description: |-
            ExpirationSeconds is the requested duration of validity of the service
            account token. As the token approaches expiration, the kubelet volume
            plugin will proactively rotate the service account token. The kubelet will
            start trying to rotate the token if the token is older than 80 percent of
            its time to live or if the token is older than 24 hours.Defaults to 1 hour
            and must be at least 10 minutes.
            +optional
        path:
          type: string
          description: |-
            Path is the path relative to the mount point of the file to project the
            token into.
    v1.ServiceAffinity:
      type: string
      enum:
      - ClientIP
      - None
      x-enum-varnames:
      - ServiceAffinityClientIP
      - ServiceAffinityNone
    v1.ServiceExternalTrafficPolicyType:
      type: string
      enum:
      - Local
      - Cluster
      x-enum-varnames:
      - ServiceExternalTrafficPolicyTypeLocal
      - ServiceExternalTrafficPolicyTypeCluster
    v1.ServiceInternalTrafficPolicyType:
      type: string
      enum:
      - Cluster
      - Local
      x-enum-varnames:
      - ServiceInternalTrafficPolicyCluster
      - ServiceInternalTrafficPolicyLocal
    v1.ServicePort:
      type: object
      properties:
        appProtocol:
          type: string
          description: |-
            The application protocol for this port.
            This field follows standard Kubernetes label syntax.
            Un-prefixed names are reserved for IANA standard service names (as per
            RFC-6335 and http://www.iana.org/assignments/service-names).
            Non-standard protocols should use prefixed names such as
            mycompany.com/my-custom-protocol.
            This is a beta field that is guarded by the ServiceAppProtocol feature
            gate and enabled by default.
            +optional
        name:
          type: string
          description: |-
            The name of this port within the service. This must be a DNS_LABEL.
            All ports within a ServiceSpec must have unique names. When considering
            the endpoints for a Service, this must match the 'name' field in the
            EndpointPort.
            Optional if only one ServicePort is defined on this service.
            +optional
        nodePort:
          type: integer
          description: |-
            The port on each node on which this service is exposed when type is
            NodePort or LoadBalancer.  Usually assigned by the system. If a value is
            specified, in-range, and not in use it will be used, otherwise the
            operation will fail.  If not specified, a port will be allocated if this
            Service requires one.  If this field is specified when creating a
            Service which does not need it, creation will fail. This field will be
            wiped when updating a Service to no longer need it (e.g. changing type
            from NodePort to ClusterIP).
            More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
            +optional
        port:
          type: integer
          description: The port that will be exposed by this service.
        protocol:
          type: object
          description: |-
            The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
            Default is TCP.
            +default="TCP"
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.Protocol"
        targetPort:
          type: object
          description: |-
            Number or name of the port to access on the pods targeted by the service.
            Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
            If this is a string, it will be looked up as a named port in the
            target Pod's container ports. If this is not specified, the value
            of the 'port' field is used (an identity map).
            This field is ignored for services with clusterIP=None, and should be
            omitted or set equal to the 'port' field.
            More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
            +optional
          allOf:
          - $ref: "#/components/schemas/intstr.IntOrString"
      example:
        protocol: ""
        port: 7
        appProtocol: appProtocol
        name: name
        nodePort: 2
        targetPort: ""
    v1.ServiceSpec:
      type: object
      properties:
        allocateLoadBalancerNodePorts:
          type: boolean
          description: |-
            allocateLoadBalancerNodePorts defines if NodePorts will be automatically
            allocated for services with type LoadBalancer.  Default is "true". It may be
            set to "false" if the cluster load-balancer does not rely on NodePorts.
            allocateLoadBalancerNodePorts may only be set for services with type LoadBalancer
            and will be cleared if the type is changed to any other type.
            This field is alpha-level and is only honored by servers that enable the ServiceLBNodePortControl feature.
            +optional
        clusterIP:
          type: string
          description: |-
            clusterIP is the IP address of the service and is usually assigned
            randomly. If an address is specified manually, is in-range (as per
            system configuration), and is not in use, it will be allocated to the
            service; otherwise creation of the service will fail. This field may not
            be changed through updates unless the type field is also being changed
            to ExternalName (which requires this field to be blank) or the type
            field is being changed from ExternalName (in which case this field may
            optionally be specified, as describe above).  Valid values are "None",
            empty string (""), or a valid IP address. Setting this to "None" makes a
            "headless service" (no virtual IP), which is useful when direct endpoint
            connections are preferred and proxying is not required.  Only applies to
            types ClusterIP, NodePort, and LoadBalancer. If this field is specified
            when creating a Service of type ExternalName, creation will fail. This
            field will be wiped when updating a Service to type ExternalName.
            More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
            +optional
        clusterIPs:
          type: array
          description: |-
            ClusterIPs is a list of IP addresses assigned to this service, and are
            usually assigned randomly.  If an address is specified manually, is
            in-range (as per system configuration), and is not in use, it will be
            allocated to the service; otherwise creation of the service will fail.
            This field may not be changed through updates unless the type field is
            also being changed to ExternalName (which requires this field to be
            empty) or the type field is being changed from ExternalName (in which
            case this field may optionally be specified, as describe above).  Valid
            values are "None", empty string (""), or a valid IP address.  Setting
            this to "None" makes a "headless service" (no virtual IP), which is
            useful when direct endpoint connections are preferred and proxying is
            not required.  Only applies to types ClusterIP, NodePort, and
            LoadBalancer. If this field is specified when creating a Service of type
            ExternalName, creation will fail. This field will be wiped when updating
            a Service to type ExternalName.  If this field is not specified, it will
            be initialized from the clusterIP field.  If this field is specified,
            clients must ensure that clusterIPs[0] and clusterIP have the same
            value.

            Unless the "IPv6DualStack" feature gate is enabled, this field is
            limited to one value, which must be the same as the clusterIP field.  If
            the feature gate is enabled, this field may hold a maximum of two
            entries (dual-stack IPs, in either order).  These IPs must correspond to
            the values of the ipFamilies field. Both clusterIPs and ipFamilies are
            governed by the ipFamilyPolicy field.
            More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
            +listType=atomic
            +optional
          items:
            type: string
        externalIPs:
          type: array
          description: |-
            externalIPs is a list of IP addresses for which nodes in the cluster
            will also accept traffic for this service.  These IPs are not managed by
            Kubernetes.  The user is responsible for ensuring that traffic arrives
            at a node with this IP.  A common example is external load-balancers
            that are not part of the Kubernetes system.
            +optional
          items:
            type: string
        externalName:
          type: string
          description: |-
            externalName is the external reference that discovery mechanisms will
            return as an alias for this service (e.g. a DNS CNAME record). No
            proxying will be involved.  Must be a lowercase RFC-1123 hostname
            (https://tools.ietf.org/html/rfc1123) and requires `type` to be "ExternalName".
            +optional
        externalTrafficPolicy:
          type: object
          description: |-
            externalTrafficPolicy denotes if this Service desires to route external
            traffic to node-local or cluster-wide endpoints. "Local" preserves the
            client source IP and avoids a second hop for LoadBalancer and Nodeport
            type services, but risks potentially imbalanced traffic spreading.
            "Cluster" obscures the client source IP and may cause a second hop to
            another node, but should have good overall load-spreading.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ServiceExternalTrafficPolicyType"
        healthCheckNodePort:
          type: integer
          description: |-
            healthCheckNodePort specifies the healthcheck nodePort for the service.
            This only applies when type is set to LoadBalancer and
            externalTrafficPolicy is set to Local. If a value is specified, is
            in-range, and is not in use, it will be used.  If not specified, a value
            will be automatically allocated.  External systems (e.g. load-balancers)
            can use this port to determine if a given node holds endpoints for this
            service or not.  If this field is specified when creating a Service
            which does not need it, creation will fail. This field will be wiped
            when updating a Service to no longer need it (e.g. changing type).
            +optional
        internalTrafficPolicy:
          type: object
          description: |-
            InternalTrafficPolicy specifies if the cluster internal traffic
            should be routed to all endpoints or node-local endpoints only.
            "Cluster" routes internal traffic to a Service to all endpoints.
            "Local" routes traffic to node-local endpoints only, traffic is
            dropped if no node-local endpoints are ready.
            The default value is "Cluster".
            +featureGate=ServiceInternalTrafficPolicy
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ServiceInternalTrafficPolicyType"
        ipFamilies:
          type: array
          description: |-
            IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this
            service, and is gated by the "IPv6DualStack" feature gate.  This field
            is usually assigned automatically based on cluster configuration and the
            ipFamilyPolicy field. If this field is specified manually, the requested
            family is available in the cluster, and ipFamilyPolicy allows it, it
            will be used; otherwise creation of the service will fail.  This field
            is conditionally mutable: it allows for adding or removing a secondary
            IP family, but it does not allow changing the primary IP family of the
            Service.  Valid values are "IPv4" and "IPv6".  This field only applies
            to Services of types ClusterIP, NodePort, and LoadBalancer, and does
            apply to "headless" services.  This field will be wiped when updating a
            Service to type ExternalName.

            This field may hold a maximum of two entries (dual-stack families, in
            either order).  These families must correspond to the values of the
            clusterIPs field, if specified. Both clusterIPs and ipFamilies are
            governed by the ipFamilyPolicy field.
            +listType=atomic
            +optional
          items:
            $ref: "#/components/schemas/v1.IPFamily"
        ipFamilyPolicy:
          type: object
          description: |-
            IPFamilyPolicy represents the dual-stack-ness requested or required by
            this Service, and is gated by the "IPv6DualStack" feature gate.  If
            there is no value provided, then this field will be set to SingleStack.
            Services can be "SingleStack" (a single IP family), "PreferDualStack"
            (two IP families on dual-stack configured clusters or a single IP family
            on single-stack clusters), or "RequireDualStack" (two IP families on
            dual-stack configured clusters, otherwise fail). The ipFamilies and
            clusterIPs fields depend on the value of this field.  This field will be
            wiped when updating a service to type ExternalName.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.IPFamilyPolicyType"
        loadBalancerClass:
          type: string
          description: |-
            loadBalancerClass is the class of the load balancer implementation this Service belongs to.
            If specified, the value of this field must be a label-style identifier, with an optional prefix,
            e.g. "internal-vip" or "example.com/internal-vip". Unprefixed names are reserved for end-users.
            This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load
            balancer implementation is used, today this is typically done through the cloud provider integration,
            but should apply for any default implementation. If set, it is assumed that a load balancer
            implementation is watching for Services with a matching class. Any default load balancer
            implementation (e.g. cloud providers) should ignore Services that set this field.
            This field can only be set when creating or updating a Service to type 'LoadBalancer'.
            Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.
            +featureGate=LoadBalancerClass
            +optional
        loadBalancerIP:
          type: string
          description: |-
            Only applies to Service Type: LoadBalancer
            LoadBalancer will get created with the IP specified in this field.
            This feature depends on whether the underlying cloud-provider supports specifying
            the loadBalancerIP when a load balancer is created.
            This field will be ignored if the cloud-provider does not support the feature.
            +optional
        loadBalancerSourceRanges:
          type: array
          description: |-
            If specified and supported by the platform, this will restrict traffic through the cloud-provider
            load-balancer will be restricted to the specified client IPs. This field will be ignored if the
            cloud-provider does not support the feature."
            More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/
            +optional
          items:
            type: string
        ports:
          type: array
          description: |-
            The list of ports that are exposed by this service.
            More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
            +patchMergeKey=port
            +patchStrategy=merge
            +listType=map
            +listMapKey=port
            +listMapKey=protocol
          items:
            $ref: "#/components/schemas/v1.ServicePort"
        publishNotReadyAddresses:
          type: boolean
          description: |-
            publishNotReadyAddresses indicates that any agent which deals with endpoints for this
            Service should disregard any indications of ready/not-ready.
            The primary use case for setting this field is for a StatefulSet's Headless Service to
            propagate SRV DNS records for its Pods for the purpose of peer discovery.
            The Kubernetes controllers that generate Endpoints and EndpointSlice resources for
            Services interpret this to mean that all endpoints are considered "ready" even if the
            Pods themselves are not. Agents which consume only Kubernetes generated endpoints
            through the Endpoints or EndpointSlice resources can safely assume this behavior.
            +optional
        selector:
          type: object
          additionalProperties:
            type: string
          description: |-
            Route service traffic to pods with label keys and values matching this
            selector. If empty or not present, the service is assumed to have an
            external process managing its endpoints, which Kubernetes will not
            modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.
            Ignored if type is ExternalName.
            More info: https://kubernetes.io/docs/concepts/services-networking/service/
            +optional
        sessionAffinity:
          type: object
          description: |-
            Supports "ClientIP" and "None". Used to maintain session affinity.
            Enable client IP based session affinity.
            Must be ClientIP or None.
            Defaults to None.
            More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ServiceAffinity"
        sessionAffinityConfig:
          type: object
          description: |-
            sessionAffinityConfig contains the configurations of session affinity.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.SessionAffinityConfig"
        topologyKeys:
          type: array
          description: |-
            topologyKeys is a preference-order list of topology keys which
            implementations of services should use to preferentially sort endpoints
            when accessing this Service, it can not be used at the same time as
            externalTrafficPolicy=Local.
            Topology keys must be valid label keys and at most 16 keys may be specified.
            Endpoints are chosen based on the first topology key with available backends.
            If this field is specified and all entries have no backends that match
            the topology of the client, the service has no backends for that client
            and connections should fail.
            The special value "*" may be used to mean "any topology". This catch-all
            value, if used, only makes sense as the last value in the list.
            If this is not specified or empty, no topology constraints will be applied.
            This field is alpha-level and is only honored by servers that enable the ServiceTopology feature.
            This field is deprecated and will be removed in a future version.
            +optional
          items:
            type: string
        type:
          type: object
          description: |-
            type determines how the Service is exposed. Defaults to ClusterIP. Valid
            options are ExternalName, ClusterIP, NodePort, and LoadBalancer.
            "ClusterIP" allocates a cluster-internal IP address for load-balancing
            to endpoints. Endpoints are determined by the selector or if that is not
            specified, by manual construction of an Endpoints object or
            EndpointSlice objects. If clusterIP is "None", no virtual IP is
            allocated and the endpoints are published as a set of endpoints rather
            than a virtual IP.
            "NodePort" builds on ClusterIP and allocates a port on every node which
            routes to the same endpoints as the clusterIP.
            "LoadBalancer" builds on NodePort and creates an external load-balancer
            (if supported in the current cloud) which routes to the same endpoints
            as the clusterIP.
            "ExternalName" aliases this service to the specified externalName.
            Several other fields do not apply to ExternalName services.
            More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ServiceType"
      example:
        clusterIPs:
        - clusterIPs
        - clusterIPs
        healthCheckNodePort: 0
        ipFamilyPolicy: ""
        externalIPs:
        - externalIPs
        - externalIPs
        sessionAffinity: ""
        allocateLoadBalancerNodePorts: true
        ports:
        - protocol: ""
          port: 7
          appProtocol: appProtocol
          name: name
          nodePort: 2
          targetPort: ""
        - protocol: ""
          port: 7
          appProtocol: appProtocol
          name: name
          nodePort: 2
          targetPort: ""
        type: ""
        loadBalancerClass: loadBalancerClass
        sessionAffinityConfig: ""
        ipFamilies:
        - IPv4
        - IPv4
        loadBalancerIP: loadBalancerIP
        externalName: externalName
        loadBalancerSourceRanges:
        - loadBalancerSourceRanges
        - loadBalancerSourceRanges
        externalTrafficPolicy: ""
        selector:
          key: selector
        publishNotReadyAddresses: true
        topologyKeys:
        - topologyKeys
        - topologyKeys
        internalTrafficPolicy: ""
        clusterIP: clusterIP
    v1.ServiceStatus:
      type: object
      properties:
        conditions:
          type: array
          description: |-
            Current service state
            +optional
            +patchMergeKey=type
            +patchStrategy=merge
            +listType=map
            +listMapKey=type
          items:
            $ref: "#/components/schemas/v1.Condition"
        loadBalancer:
          type: object
          description: |-
            LoadBalancer contains the current status of the load-balancer,
            if one is present.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.LoadBalancerStatus"
      example:
        loadBalancer: ""
        conditions:
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          observedGeneration: 6
          status: ""
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          observedGeneration: 6
          status: ""
    v1.ServiceType:
      type: string
      enum:
      - ClusterIP
      - NodePort
      - LoadBalancer
      - ExternalName
      x-enum-varnames:
      - ServiceTypeClusterIP
      - ServiceTypeNodePort
      - ServiceTypeLoadBalancer
      - ServiceTypeExternalName
    v1.SessionAffinityConfig:
      type: object
      properties:
        clientIP:
          type: object
          description: |-
            clientIP contains the configurations of Client IP based session affinity.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ClientIPConfig"
    v1.SourceDetails:
      type: object
      properties:
        annotations:
          type: object
          additionalProperties:
            type: string
          description: Annotations for the source pod
        args:
          type: array
          description: Args for the source pod
          items:
            type: string
        command:
          type: array
          description: Command for the source pod
          items:
            type: string
        env:
          type: array
          description: ENVList contains ENV passed to the source pod
          items:
            $ref: "#/components/schemas/v1.EnvVar"
        hostNetwork:
          type: boolean
          description: |-
            HostNetwork define the hostNetwork of the external pod
            it supports boolean values and default value is false
        image:
          type: string
          description: Image for the source pod
        imagePullPolicy:
          type: object
          description: ImagePullPolicy for the source pod
          allOf:
          - $ref: "#/components/schemas/v1.PullPolicy"
        imagePullSecrets:
          type: array
          description: ImagePullSecrets for source pod
          items:
            $ref: "#/components/schemas/v1.LocalObjectReference"
        inheritInputs:
          type: boolean
          description: |-
            InheritInputs defined to inherit experiment pod attributes(ENV, volumes, and volumeMounts) into probe pod
            it supports boolean values and default value is false
        labels:
          type: object
          additionalProperties:
            type: string
          description: Labels for the source pod
        nodeSelector:
          type: object
          additionalProperties:
            type: string
          description: NodeSelector for the source pod
        privileged:
          type: boolean
          description: Privileged for the source pod
        tolerations:
          type: array
          items:
            $ref: "#/components/schemas/v1.Toleration"
        volumeMount:
          type: array
          description: VolumesMount for the source pod
          items:
            $ref: "#/components/schemas/v1.VolumeMount"
        volumes:
          type: array
          description: Volumes for the source pod
          items:
            $ref: "#/components/schemas/v1.Volume"
    v1.SplunkObservabilityInputs:
      type: object
      properties:
        authSecretName:
          type: string
          description: AuthSecretName secret name for the authentication
        endpoint:
          type: string
          description: Endpoint for the Splunk Observability probe
        splunkObservabilityMetrics:
          type: object
          description: SplunkObservabilityMetrics contains the splunk observability
            metrics
          allOf:
          - $ref: "#/components/schemas/v1.SplunkObservabilityMetrics"
    v1.SplunkObservabilityMetrics:
      type: object
      properties:
        durationInMin:
          type: integer
          description: DurationInMin contains the duration in minutes
        query:
          type: string
          description: Query contains the query for the metrics
    v1.StorageMedium:
      type: string
      enum:
      - ""
      - Memory
      - HugePages
      - HugePages-
      x-enum-comments:
        StorageMediumDefault: "use whatever the default is for the node, assume anything\
          \ we don't explicitly handle is this"
        StorageMediumHugePages: use hugepages
        StorageMediumHugePagesPrefix: prefix for full medium notation HugePages-<size>
        StorageMediumMemory: use memory (e.g. tmpfs on linux)
      x-enum-varnames:
      - StorageMediumDefault
      - StorageMediumMemory
      - StorageMediumHugePages
      - StorageMediumHugePagesPrefix
    v1.StorageOSVolumeSource:
      type: object
      properties:
        fsType:
          type: string
          description: |-
            Filesystem type to mount.
            Must be a filesystem type supported by the host operating system.
            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
            +optional
        readOnly:
          type: boolean
          description: |-
            Defaults to false (read/write). ReadOnly here will force
            the ReadOnly setting in VolumeMounts.
            +optional
        secretRef:
          type: object
          description: |-
            SecretRef specifies the secret to use for obtaining the StorageOS API
            credentials.  If not specified, default values will be attempted.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.LocalObjectReference"
        volumeName:
          type: string
          description: |-
            VolumeName is the human-readable name of the StorageOS volume.  Volume
            names are only unique within a namespace.
        volumeNamespace:
          type: string
          description: |-
            VolumeNamespace specifies the scope of the volume within StorageOS.  If no
            namespace is specified then the Pod's namespace will be used.  This allows the
            Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
            Set VolumeName to any name to override the default behaviour.
            Set to "default" if you are not using namespaces within StorageOS.
            Namespaces that do not pre-exist within StorageOS will be created.
            +optional
    v1.SyntheticsTest:
      type: object
      properties:
        publicId:
          type: string
          description: public id of the test
        testType:
          type: object
          description: type of the test; supports 'api' and 'browser' only
          allOf:
          - $ref: "#/components/schemas/v1.DatadogSyntheticsTestType"
    v1.Sysctl:
      type: object
      properties:
        name:
          type: string
          description: Name of a property to set
        value:
          type: string
          description: Value of a property to set
      example:
        name: name
        value: value
    v1.TLSConfig:
      type: object
      properties:
        caFile:
          type: string
          description: The CA cert to use for the targets.
        certFile:
          type: string
          description: The client cert file for the targets.
        insecureSkipVerify:
          type: boolean
          description: Disable target certificate validation.
        keyFile:
          type: string
          description: The client key file for the targets.
        serverName:
          type: string
          description: Used to verify the hostname for the targets.
    v1.TaintEffect:
      type: string
      enum:
      - NoSchedule
      - PreferNoSchedule
      - NoExecute
      x-enum-varnames:
      - TaintEffectNoSchedule
      - TaintEffectPreferNoSchedule
      - TaintEffectNoExecute
    v1.Toleration:
      type: object
      properties:
        effect:
          type: object
          description: |-
            Effect indicates the taint effect to match. Empty means match all taint effects.
            When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.TaintEffect"
        key:
          type: string
          description: |-
            Key is the taint key that the toleration applies to. Empty means match all taint keys.
            If the key is empty, operator must be Exists; this combination means to match all values and all keys.
            +optional
        operator:
          type: object
          description: |-
            Operator represents a key's relationship to the value.
            Valid operators are Exists and Equal. Defaults to Equal.
            Exists is equivalent to wildcard for value, so that a pod can
            tolerate all taints of a particular category.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.TolerationOperator"
        tolerationSeconds:
          type: integer
          description: |-
            TolerationSeconds represents the period of time the toleration (which must be
            of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
            it is not set, which means tolerate the taint forever (do not evict). Zero and
            negative values will be treated as 0 (evict immediately) by the system.
            +optional
        value:
          type: string
          description: |-
            Value is the taint value the toleration matches to.
            If the operator is Exists, the value should be empty, otherwise just a regular string.
            +optional
      example:
        effect: ""
        tolerationSeconds: 2
        value: value
        key: key
        operator: ""
    v1.TolerationOperator:
      type: string
      enum:
      - Exists
      - Equal
      x-enum-varnames:
      - TolerationOpExists
      - TolerationOpEqual
    v1.TypedLocalObjectReference:
      type: object
      properties:
        apiGroup:
          type: string
          description: |-
            APIGroup is the group for the resource being referenced.
            If APIGroup is not specified, the specified Kind must be in the core API group.
            For any other third-party types, APIGroup is required.
            +optional
        kind:
          type: string
          description: Kind is the type of resource being referenced
        name:
          type: string
          description: Name is the name of resource being referenced
    v1.Volume:
      type: object
      properties:
        awsElasticBlockStore:
          type: object
          description: |-
            AWSElasticBlockStore represents an AWS Disk resource that is attached to a
            kubelet's host machine and then exposed to the pod.
            More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.AWSElasticBlockStoreVolumeSource"
        azureDisk:
          type: object
          description: |-
            AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.AzureDiskVolumeSource"
        azureFile:
          type: object
          description: |-
            AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.AzureFileVolumeSource"
        cephfs:
          type: object
          description: |-
            CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.CephFSVolumeSource"
        cinder:
          type: object
          description: |-
            Cinder represents a cinder volume attached and mounted on kubelets host machine.
            More info: https://examples.k8s.io/mysql-cinder-pd/README.md
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.CinderVolumeSource"
        configMap:
          type: object
          description: |-
            ConfigMap represents a configMap that should populate this volume
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ConfigMapVolumeSource"
        csi:
          type: object
          description: |-
            CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.CSIVolumeSource"
        downwardAPI:
          type: object
          description: |-
            DownwardAPI represents downward API about the pod that should populate this volume
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.DownwardAPIVolumeSource"
        emptyDir:
          type: object
          description: |-
            EmptyDir represents a temporary directory that shares a pod's lifetime.
            More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.EmptyDirVolumeSource"
        ephemeral:
          type: object
          description: |-
            Ephemeral represents a volume that is handled by a cluster storage driver.
            The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
            and deleted when the pod is removed.

            Use this if:
            a) the volume is only needed while the pod runs,
            b) features of normal volumes like restoring from snapshot or capacity
               tracking are needed,
            c) the storage driver is specified through a storage class, and
            d) the storage driver supports dynamic volume provisioning through
               a PersistentVolumeClaim (see EphemeralVolumeSource for more
               information on the connection between this volume type
               and PersistentVolumeClaim).

            Use PersistentVolumeClaim or one of the vendor-specific
            APIs for volumes that persist for longer than the lifecycle
            of an individual pod.

            Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
            be used that way - see the documentation of the driver for
            more information.

            A pod can use both types of ephemeral volumes and
            persistent volumes at the same time.

            This is a beta feature and only available when the GenericEphemeralVolume
            feature gate is enabled.

            +optional
          allOf:
          - $ref: "#/components/schemas/v1.EphemeralVolumeSource"
        fc:
          type: object
          description: |-
            FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.FCVolumeSource"
        flexVolume:
          type: object
          description: |-
            FlexVolume represents a generic volume resource that is
            provisioned/attached using an exec based plugin.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.FlexVolumeSource"
        flocker:
          type: object
          description: |-
            Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.FlockerVolumeSource"
        gcePersistentDisk:
          type: object
          description: |-
            GCEPersistentDisk represents a GCE Disk resource that is attached to a
            kubelet's host machine and then exposed to the pod.
            More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.GCEPersistentDiskVolumeSource"
        gitRepo:
          type: object
          description: |-
            GitRepo represents a git repository at a particular revision.
            DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
            EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
            into the Pod's container.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.GitRepoVolumeSource"
        glusterfs:
          type: object
          description: |-
            Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
            More info: https://examples.k8s.io/volumes/glusterfs/README.md
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.GlusterfsVolumeSource"
        hostPath:
          type: object
          description: |-
            HostPath represents a pre-existing file or directory on the host
            machine that is directly exposed to the container. This is generally
            used for system agents or other privileged things that are allowed
            to see the host machine. Most containers will NOT need this.
            More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
            ---
            TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
            mount host directories as read/write.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.HostPathVolumeSource"
        iscsi:
          type: object
          description: |-
            ISCSI represents an ISCSI Disk resource that is attached to a
            kubelet's host machine and then exposed to the pod.
            More info: https://examples.k8s.io/volumes/iscsi/README.md
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ISCSIVolumeSource"
        name:
          type: string
          description: |-
            Volume's name.
            Must be a DNS_LABEL and unique within the pod.
            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
        nfs:
          type: object
          description: |-
            NFS represents an NFS mount on the host that shares a pod's lifetime
            More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.NFSVolumeSource"
        persistentVolumeClaim:
          type: object
          description: |-
            PersistentVolumeClaimVolumeSource represents a reference to a
            PersistentVolumeClaim in the same namespace.
            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.PersistentVolumeClaimVolumeSource"
        photonPersistentDisk:
          type: object
          description: PhotonPersistentDisk represents a PhotonController persistent
            disk attached and mounted on kubelets host machine
          allOf:
          - $ref: "#/components/schemas/v1.PhotonPersistentDiskVolumeSource"
        portworxVolume:
          type: object
          description: |-
            PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.PortworxVolumeSource"
        projected:
          type: object
          description: "Items for all in one resources secrets, configmaps, and downward\
            \ API"
          allOf:
          - $ref: "#/components/schemas/v1.ProjectedVolumeSource"
        quobyte:
          type: object
          description: |-
            Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.QuobyteVolumeSource"
        rbd:
          type: object
          description: |-
            RBD represents a Rados Block Device mount on the host that shares a pod's lifetime.
            More info: https://examples.k8s.io/volumes/rbd/README.md
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.RBDVolumeSource"
        scaleIO:
          type: object
          description: |-
            ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ScaleIOVolumeSource"
        secret:
          type: object
          description: |-
            Secret represents a secret that should populate this volume.
            More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.SecretVolumeSource"
        storageos:
          type: object
          description: |-
            StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.StorageOSVolumeSource"
        vsphereVolume:
          type: object
          description: |-
            VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.VsphereVirtualDiskVolumeSource"
    v1.VolumeMount:
      type: object
      properties:
        mountPath:
          type: string
          description: |-
            Path within the container at which the volume should be mounted.  Must
            not contain ':'.
        mountPropagation:
          type: object
          description: |-
            mountPropagation determines how mounts are propagated from the host
            to container and the other way around.
            When not set, MountPropagationNone is used.
            This field is beta in 1.10.
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.MountPropagationMode"
        name:
          type: string
          description: This must match the Name of a Volume.
        readOnly:
          type: boolean
          description: |-
            Mounted read-only if true, read-write otherwise (false or unspecified).
            Defaults to false.
            +optional
        subPath:
          type: string
          description: |-
            Path within the volume from which the container's volume should be mounted.
            Defaults to "" (volume's root).
            +optional
        subPathExpr:
          type: string
          description: |-
            Expanded path within the volume from which the container's volume should be mounted.
            Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
            Defaults to "" (volume's root).
            SubPathExpr and SubPath are mutually exclusive.
            +optional
      example:
        mountPath: mountPath
        mountPropagation: ""
        name: name
        readOnly: true
        subPath: subPath
        subPathExpr: subPathExpr
    v1.VolumeProjection:
      type: object
      properties:
        configMap:
          type: object
          description: |-
            information about the configMap data to project
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ConfigMapProjection"
        downwardAPI:
          type: object
          description: |-
            information about the downwardAPI data to project
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.DownwardAPIProjection"
        secret:
          type: object
          description: |-
            information about the secret data to project
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.SecretProjection"
        serviceAccountToken:
          type: object
          description: |-
            information about the serviceAccountToken data to project
            +optional
          allOf:
          - $ref: "#/components/schemas/v1.ServiceAccountTokenProjection"
    v1.VsphereVirtualDiskVolumeSource:
      type: object
      properties:
        fsType:
          type: string
          description: |-
            Filesystem type to mount.
            Must be a filesystem type supported by the host operating system.
            Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
            +optional
        storagePolicyID:
          type: string
          description: |-
            Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
            +optional
        storagePolicyName:
          type: string
          description: |-
            Storage Policy Based Management (SPBM) profile name.
            +optional
        volumePath:
          type: string
          description: Path that identifies vSphere volume vmdk
    v1.WindowsSecurityContextOptions:
      type: object
      properties:
        gmsaCredentialSpec:
          type: string
          description: |-
            GMSACredentialSpec is where the GMSA admission webhook
            (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
            GMSA credential spec named by the GMSACredentialSpecName field.
            +optional
        gmsaCredentialSpecName:
          type: string
          description: |-
            GMSACredentialSpecName is the name of the GMSA credential spec to use.
            +optional
        runAsUserName:
          type: string
          description: |-
            The UserName in Windows to run the entrypoint of the container process.
            Defaults to the user specified in image metadata if unspecified.
            May also be set in PodSecurityContext. If set in both SecurityContext and
            PodSecurityContext, the value specified in SecurityContext takes precedence.
            +optional
    v1alpha1.TargetDetails:
      type: object
      properties:
        chaosStatus:
          type: string
        kind:
          type: string
        name:
          type: string
      example:
        chaosStatus: chaosStatus
        kind: kind
        name: name
    v1alpha1.Targets:
      type: object
      properties:
        ID:
          type: string
        kind:
          type: string
        name:
          type: string
        namespace:
          type: string
        subType:
          type: string
        type:
          type: string
      example:
        kind: kind
        name: name
        namespace: namespace
        subType: subType
        ID: ID
        type: type
    v2_onboarding.AgentData:
      type: object
      properties:
        clusterAgent:
          $ref: "#/components/schemas/v2_onboarding.AgentDetails"
        nodeAgent:
          type: array
          items:
            $ref: "#/components/schemas/v2_onboarding.AgentDetails"
      example:
        nodeAgent:
        - null
        - null
        clusterAgent:
          name: name
          status: Pending
    v2_onboarding.AgentDetails:
      type: object
      properties:
        name:
          type: string
        status:
          $ref: "#/components/schemas/v1.PodPhase"
      example:
        name: name
        status: Pending
    v2_onboarding.AutoCreatedNetworkMapStatus:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/v2_onboarding.V2OnboardingStatus"
        totalNetworkMaps:
          type: integer
      example:
        totalNetworkMaps: 0
        status: COMPLETED
    v2_onboarding.ChaosInfraAdvanceConfiguration:
      type: object
      properties:
        imagePullPolicy:
          $ref: "#/components/schemas/v1.PullPolicy"
        insecureSkipVerify:
          type: boolean
        mtls:
          $ref: "#/components/schemas/infra_v2.MTLSConfiguration"
        nodeSelector:
          type: object
          additionalProperties:
            type: string
        proxy:
          $ref: "#/components/schemas/infra_v2.ProxyConfiguration"
        runAsGroup:
          type: integer
        runAsUser:
          type: integer
        tolerations:
          type: array
          items:
            $ref: "#/components/schemas/v1.Toleration"
      example:
        runAsUser: 1
        imagePullPolicy: Always
        proxy:
          httpProxy: httpProxy
          httpsProxy: httpsProxy
          noProxy: noProxy
          url: url
        tolerations:
        - effect: ""
          tolerationSeconds: 2
          value: value
          key: key
          operator: ""
        - effect: ""
          tolerationSeconds: 2
          value: value
          key: key
          operator: ""
        insecureSkipVerify: true
        mtls:
          secretName: secretName
          certPath: certPath
          keyPath: keyPath
          url: url
        runAsGroup: 6
        nodeSelector:
          key: nodeSelector
    v2_onboarding.ConfirmDiscoveryResponse:
      type: object
      properties:
        agentCreated:
          type: boolean
        agentLinked:
          type: boolean
        discoveryCompleted:
          type: boolean
      example:
        discoveryCompleted: true
        agentCreated: true
        agentLinked: true
    v2_onboarding.ConfirmExperimentCreationRequest:
      type: object
      properties:
        mode:
          $ref: "#/components/schemas/targetnetworkmap.ExperimentCreationMode"
    v2_onboarding.ConfirmExperimentCreationResponse:
      type: object
      properties:
        completed:
          type: boolean
        targetNetworkMapStatus:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/targetnetworkmap.Status"
      example:
        targetNetworkMapStatus:
          key: COMPLETED
        completed: true
    v2_onboarding.ConfirmExperimentRunResponse:
      type: object
      properties:
        completed:
          type: boolean
      example:
        completed: true
    v2_onboarding.ConfirmNetworkMapRequest:
      type: object
      properties:
        mode:
          $ref: "#/components/schemas/v2_onboarding.NetworkMapCreationMode"
    v2_onboarding.ConfirmNetworkMapResponse:
      type: object
      properties:
        networkMapCount:
          type: integer
        serviceCount:
          type: integer
      example:
        serviceCount: 6
        networkMapCount: 0
    v2_onboarding.DiscoveredService:
      type: object
      properties:
        agentDetails:
          $ref: "#/components/schemas/v2_onboarding.AgentData"
        completedAgentCount:
          type: integer
        discoveredServiceCount:
          type: integer
        erroredAgentCount:
          type: integer
        isTracingEnabled:
          type: boolean
        pendingAgentCount:
          type: integer
        sDAgentID:
          type: string
        sDAgentIdentity:
          type: string
        status:
          $ref: "#/components/schemas/v2_onboarding.V2OnboardingStatus"
        totalAgentCount:
          type: integer
      example:
        discoveredServiceCount: 2
        agentDetails:
          nodeAgent:
          - null
          - null
          clusterAgent:
            name: name
            status: Pending
        sDAgentIdentity: sDAgentIdentity
        isTracingEnabled: true
        erroredAgentCount: 7
        pendingAgentCount: 9
        sDAgentID: sDAgentID
        totalAgentCount: 3
        completedAgentCount: 5
        status: null
    v2_onboarding.Experiments:
      type: object
      properties:
        category:
          type: string
        delegateTaskId:
          type: string
        description:
          type: string
        experimentID:
          type: string
        name:
          type: string
        notifyID:
          type: string
        status:
          $ref: "#/components/schemas/model.WorkflowRunStatus"
        targetNetworkMapID:
          type: string
        targetNetworkMapName:
          type: string
        targetServices:
          type: array
          items:
            $ref: "#/components/schemas/v2_onboarding.TargetServiceDetails"
      example:
        targetServices:
        - name: name
          id: id
        - name: name
          id: id
        targetNetworkMapID: targetNetworkMapID
        name: name
        delegateTaskId: delegateTaskId
        description: description
        targetNetworkMapName: targetNetworkMapName
        experimentID: experimentID
        notifyID: notifyID
        category: category
        status: All
    v2_onboarding.NetworkMapCreationMode:
      type: string
      enum:
      - Manual
      - Automatic
      x-enum-varnames:
      - NetworkMapCreationManual
      - NetworkMapCreationAutomatic
    v2_onboarding.OnboardingExperimentResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/v2_onboarding.OnboardingTargetExperiment"
        isProcessed:
          type: boolean
        pagination:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_api.Pagination"
      example:
        pagination:
          totalItems: 2
          limit: 5
          totalPages: 7
          index: 5
        data:
        - identity: identity
          totalServiceCount: 6
          isProcessed: true
          name: name
          totalChaosExperiments: 0
        - identity: identity
          totalServiceCount: 6
          isProcessed: true
          name: name
          totalChaosExperiments: 0
        isProcessed: true
    v2_onboarding.OnboardingMode:
      type: string
      enum:
      - Manual
      - Automatic
      x-enum-varnames:
      - ManualMode
      - AutomaticMode
    v2_onboarding.OnboardingTargetExperiment:
      type: object
      properties:
        identity:
          type: string
        isProcessed:
          type: boolean
        name:
          type: string
        totalChaosExperiments:
          type: integer
        totalServiceCount:
          type: integer
      example:
        identity: identity
        totalServiceCount: 6
        isProcessed: true
        name: name
        totalChaosExperiments: 0
    v2_onboarding.RunSafeExperimentStatus:
      type: object
      properties:
        experiments:
          type: array
          items:
            $ref: "#/components/schemas/v2_onboarding.Experiments"
        status:
          $ref: "#/components/schemas/v2_onboarding.V2OnboardingStatus"
        totalSafeExperiment:
          type: integer
      example:
        totalSafeExperiment: 1
        experiments:
        - targetServices:
          - name: name
            id: id
          - name: name
            id: id
          targetNetworkMapID: targetNetworkMapID
          name: name
          delegateTaskId: delegateTaskId
          description: description
          targetNetworkMapName: targetNetworkMapName
          experimentID: experimentID
          notifyID: notifyID
          category: category
          status: All
        - targetServices:
          - name: name
            id: id
          - name: name
            id: id
          targetNetworkMapID: targetNetworkMapID
          name: name
          delegateTaskId: delegateTaskId
          description: description
          targetNetworkMapName: targetNetworkMapName
          experimentID: experimentID
          notifyID: notifyID
          category: category
          status: All
        status: null
    v2_onboarding.TargetNetworkMapStatus:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/v2_onboarding.V2OnboardingStatus"
        targetNetworkMapStatus:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/targetnetworkmap.Status"
        totalTargetNetworkMaps:
          type: integer
        totalTargetNetworkMapsExperiments:
          type: integer
      example:
        targetNetworkMapStatus:
          key: COMPLETED
        totalTargetNetworkMapsExperiments: 1
        totalTargetNetworkMaps: 1
        status: null
    v2_onboarding.TargetServiceDetails:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      example:
        name: name
        id: id
    v2_onboarding.V2Onboarding:
      required:
      - accountID
      - isRemoved
      type: object
      properties:
        accountID:
          type: string
        autoCreateNetworkMapStatus:
          $ref: "#/components/schemas/v2_onboarding.AutoCreatedNetworkMapStatus"
        chaosAdvanceConfiguration:
          $ref: "#/components/schemas/v2_onboarding.ChaosInfraAdvanceConfiguration"
        createdAt:
          type: integer
        createdBy:
          type: string
        ddciID:
          type: string
        discoveredServiceStatus:
          $ref: "#/components/schemas/v2_onboarding.DiscoveredService"
        discoveryAdvanceConfiguration:
          $ref: "#/components/schemas/database.AgentConfiguration"
        environmentRef:
          type: string
        infrastructureRef:
          type: string
        isRemoved:
          type: boolean
        mode:
          $ref: "#/components/schemas/v2_onboarding.OnboardingMode"
        namespace:
          type: string
        onboardingID:
          type: string
        orgID:
          type: string
        projectID:
          type: string
        runSafeExperimentStatus:
          $ref: "#/components/schemas/v2_onboarding.RunSafeExperimentStatus"
        serviceAccount:
          type: string
        status:
          $ref: "#/components/schemas/v2_onboarding.V2OnboardingStatus"
        targetNetworkMapStatus:
          $ref: "#/components/schemas/v2_onboarding.TargetNetworkMapStatus"
        updatedAt:
          type: integer
        updatedBy:
          type: string
      example:
        environmentRef: environmentRef
        updatedBy: updatedBy
        serviceAccount: serviceAccount
        infrastructureRef: infrastructureRef
        orgID: orgID
        mode: Manual
        targetNetworkMapStatus:
          targetNetworkMapStatus:
            key: COMPLETED
          totalTargetNetworkMapsExperiments: 1
          totalTargetNetworkMaps: 1
          status: null
        accountID: accountID
        createdAt: 5
        discoveryAdvanceConfiguration:
          collectorImage: collectorImage
          kubernetes:
            runAsUser: 7
            imagePullPolicy: null
            tolerations:
            - null
            - null
            namespace: namespace
            resources:
              requests: null
              limits:
                memory: memory
                cpu: cpu
            serviceAccount: serviceAccount
            namespaced: true
            runAsGroup: 4
            nodeSelector:
              key: nodeSelector
          proxy:
            httpProxy: httpProxy
            httpsProxy: httpsProxy
            noProxy: noProxy
            url: url
          data:
            cron:
              expression: expression
            enableOrphanedPod: true
            enableNodeAgent: true
            collectionWindowInMin: 2
            namespaceSelector: namespaceSelector
            observedNamespaces:
            - observedNamespaces
            - observedNamespaces
            enableBatchResources: true
            nodeAgentSelector: nodeAgentSelector
            blacklistedNamespaces:
            - blacklistedNamespaces
            - blacklistedNamespaces
          logWatcherImage: logWatcherImage
          imagePullSecrets:
          - imagePullSecrets
          - imagePullSecrets
          skipSecureVerify: true
          mtls:
            secretName: secretName
            certPath: certPath
            keyPath: keyPath
            url: url
        isRemoved: true
        runSafeExperimentStatus:
          totalSafeExperiment: 1
          experiments:
          - targetServices:
            - name: name
              id: id
            - name: name
              id: id
            targetNetworkMapID: targetNetworkMapID
            name: name
            delegateTaskId: delegateTaskId
            description: description
            targetNetworkMapName: targetNetworkMapName
            experimentID: experimentID
            notifyID: notifyID
            category: category
            status: All
          - targetServices:
            - name: name
              id: id
            - name: name
              id: id
            targetNetworkMapID: targetNetworkMapID
            name: name
            delegateTaskId: delegateTaskId
            description: description
            targetNetworkMapName: targetNetworkMapName
            experimentID: experimentID
            notifyID: notifyID
            category: category
            status: All
          status: null
        createdBy: createdBy
        ddciID: ddciID
        namespace: namespace
        onboardingID: onboardingID
        chaosAdvanceConfiguration:
          runAsUser: 1
          imagePullPolicy: Always
          proxy:
            httpProxy: httpProxy
            httpsProxy: httpsProxy
            noProxy: noProxy
            url: url
          tolerations:
          - effect: ""
            tolerationSeconds: 2
            value: value
            key: key
            operator: ""
          - effect: ""
            tolerationSeconds: 2
            value: value
            key: key
            operator: ""
          insecureSkipVerify: true
          mtls:
            secretName: secretName
            certPath: certPath
            keyPath: keyPath
            url: url
          runAsGroup: 6
          nodeSelector:
            key: nodeSelector
        discoveredServiceStatus:
          discoveredServiceCount: 2
          agentDetails:
            nodeAgent:
            - null
            - null
            clusterAgent:
              name: name
              status: Pending
          sDAgentIdentity: sDAgentIdentity
          isTracingEnabled: true
          erroredAgentCount: 7
          pendingAgentCount: 9
          sDAgentID: sDAgentID
          totalAgentCount: 3
          completedAgentCount: 5
          status: null
        projectID: projectID
        autoCreateNetworkMapStatus:
          totalNetworkMaps: 0
          status: COMPLETED
        status: null
        updatedAt: 6
    v2_onboarding.V2OnboardingList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/v2_onboarding.V2Onboarding"
        page:
          $ref: "#/components/schemas/github_com_harness_hce-saas_graphql_server_api.Pagination"
      example:
        data:
        - environmentRef: environmentRef
          updatedBy: updatedBy
          serviceAccount: serviceAccount
          infrastructureRef: infrastructureRef
          orgID: orgID
          mode: Manual
          targetNetworkMapStatus:
            targetNetworkMapStatus:
              key: COMPLETED
            totalTargetNetworkMapsExperiments: 1
            totalTargetNetworkMaps: 1
            status: null
          accountID: accountID
          createdAt: 5
          discoveryAdvanceConfiguration:
            collectorImage: collectorImage
            kubernetes:
              runAsUser: 7
              imagePullPolicy: null
              tolerations:
              - null
              - null
              namespace: namespace
              resources:
                requests: null
                limits:
                  memory: memory
                  cpu: cpu
              serviceAccount: serviceAccount
              namespaced: true
              runAsGroup: 4
              nodeSelector:
                key: nodeSelector
            proxy:
              httpProxy: httpProxy
              httpsProxy: httpsProxy
              noProxy: noProxy
              url: url
            data:
              cron:
                expression: expression
              enableOrphanedPod: true
              enableNodeAgent: true
              collectionWindowInMin: 2
              namespaceSelector: namespaceSelector
              observedNamespaces:
              - observedNamespaces
              - observedNamespaces
              enableBatchResources: true
              nodeAgentSelector: nodeAgentSelector
              blacklistedNamespaces:
              - blacklistedNamespaces
              - blacklistedNamespaces
            logWatcherImage: logWatcherImage
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            skipSecureVerify: true
            mtls:
              secretName: secretName
              certPath: certPath
              keyPath: keyPath
              url: url
          isRemoved: true
          runSafeExperimentStatus:
            totalSafeExperiment: 1
            experiments:
            - targetServices:
              - name: name
                id: id
              - name: name
                id: id
              targetNetworkMapID: targetNetworkMapID
              name: name
              delegateTaskId: delegateTaskId
              description: description
              targetNetworkMapName: targetNetworkMapName
              experimentID: experimentID
              notifyID: notifyID
              category: category
              status: All
            - targetServices:
              - name: name
                id: id
              - name: name
                id: id
              targetNetworkMapID: targetNetworkMapID
              name: name
              delegateTaskId: delegateTaskId
              description: description
              targetNetworkMapName: targetNetworkMapName
              experimentID: experimentID
              notifyID: notifyID
              category: category
              status: All
            status: null
          createdBy: createdBy
          ddciID: ddciID
          namespace: namespace
          onboardingID: onboardingID
          chaosAdvanceConfiguration:
            runAsUser: 1
            imagePullPolicy: Always
            proxy:
              httpProxy: httpProxy
              httpsProxy: httpsProxy
              noProxy: noProxy
              url: url
            tolerations:
            - effect: ""
              tolerationSeconds: 2
              value: value
              key: key
              operator: ""
            - effect: ""
              tolerationSeconds: 2
              value: value
              key: key
              operator: ""
            insecureSkipVerify: true
            mtls:
              secretName: secretName
              certPath: certPath
              keyPath: keyPath
              url: url
            runAsGroup: 6
            nodeSelector:
              key: nodeSelector
          discoveredServiceStatus:
            discoveredServiceCount: 2
            agentDetails:
              nodeAgent:
              - null
              - null
              clusterAgent:
                name: name
                status: Pending
            sDAgentIdentity: sDAgentIdentity
            isTracingEnabled: true
            erroredAgentCount: 7
            pendingAgentCount: 9
            sDAgentID: sDAgentID
            totalAgentCount: 3
            completedAgentCount: 5
            status: null
          projectID: projectID
          autoCreateNetworkMapStatus:
            totalNetworkMaps: 0
            status: COMPLETED
          status: null
          updatedAt: 6
        - environmentRef: environmentRef
          updatedBy: updatedBy
          serviceAccount: serviceAccount
          infrastructureRef: infrastructureRef
          orgID: orgID
          mode: Manual
          targetNetworkMapStatus:
            targetNetworkMapStatus:
              key: COMPLETED
            totalTargetNetworkMapsExperiments: 1
            totalTargetNetworkMaps: 1
            status: null
          accountID: accountID
          createdAt: 5
          discoveryAdvanceConfiguration:
            collectorImage: collectorImage
            kubernetes:
              runAsUser: 7
              imagePullPolicy: null
              tolerations:
              - null
              - null
              namespace: namespace
              resources:
                requests: null
                limits:
                  memory: memory
                  cpu: cpu
              serviceAccount: serviceAccount
              namespaced: true
              runAsGroup: 4
              nodeSelector:
                key: nodeSelector
            proxy:
              httpProxy: httpProxy
              httpsProxy: httpsProxy
              noProxy: noProxy
              url: url
            data:
              cron:
                expression: expression
              enableOrphanedPod: true
              enableNodeAgent: true
              collectionWindowInMin: 2
              namespaceSelector: namespaceSelector
              observedNamespaces:
              - observedNamespaces
              - observedNamespaces
              enableBatchResources: true
              nodeAgentSelector: nodeAgentSelector
              blacklistedNamespaces:
              - blacklistedNamespaces
              - blacklistedNamespaces
            logWatcherImage: logWatcherImage
            imagePullSecrets:
            - imagePullSecrets
            - imagePullSecrets
            skipSecureVerify: true
            mtls:
              secretName: secretName
              certPath: certPath
              keyPath: keyPath
              url: url
          isRemoved: true
          runSafeExperimentStatus:
            totalSafeExperiment: 1
            experiments:
            - targetServices:
              - name: name
                id: id
              - name: name
                id: id
              targetNetworkMapID: targetNetworkMapID
              name: name
              delegateTaskId: delegateTaskId
              description: description
              targetNetworkMapName: targetNetworkMapName
              experimentID: experimentID
              notifyID: notifyID
              category: category
              status: All
            - targetServices:
              - name: name
                id: id
              - name: name
                id: id
              targetNetworkMapID: targetNetworkMapID
              name: name
              delegateTaskId: delegateTaskId
              description: description
              targetNetworkMapName: targetNetworkMapName
              experimentID: experimentID
              notifyID: notifyID
              category: category
              status: All
            status: null
          createdBy: createdBy
          ddciID: ddciID
          namespace: namespace
          onboardingID: onboardingID
          chaosAdvanceConfiguration:
            runAsUser: 1
            imagePullPolicy: Always
            proxy:
              httpProxy: httpProxy
              httpsProxy: httpsProxy
              noProxy: noProxy
              url: url
            tolerations:
            - effect: ""
              tolerationSeconds: 2
              value: value
              key: key
              operator: ""
            - effect: ""
              tolerationSeconds: 2
              value: value
              key: key
              operator: ""
            insecureSkipVerify: true
            mtls:
              secretName: secretName
              certPath: certPath
              keyPath: keyPath
              url: url
            runAsGroup: 6
            nodeSelector:
              key: nodeSelector
          discoveredServiceStatus:
            discoveredServiceCount: 2
            agentDetails:
              nodeAgent:
              - null
              - null
              clusterAgent:
                name: name
                status: Pending
            sDAgentIdentity: sDAgentIdentity
            isTracingEnabled: true
            erroredAgentCount: 7
            pendingAgentCount: 9
            sDAgentID: sDAgentID
            totalAgentCount: 3
            completedAgentCount: 5
            status: null
          projectID: projectID
          autoCreateNetworkMapStatus:
            totalNetworkMaps: 0
            status: COMPLETED
          status: null
          updatedAt: 6
        page:
          totalItems: 2
          limit: 5
          totalPages: 7
          index: 5
    v2_onboarding.V2OnboardingRequest:
      required:
      - environmentRef
      - infrastructureRef
      - mode
      type: object
      properties:
        chaosAdvanceConfiguration:
          $ref: "#/components/schemas/v2_onboarding.ChaosInfraAdvanceConfiguration"
        discoveryAdvanceConfiguration:
          $ref: "#/components/schemas/database.AgentConfiguration"
        environmentRef:
          type: string
        infrastructureRef:
          type: string
        mode:
          $ref: "#/components/schemas/v2_onboarding.OnboardingMode"
        serviceAccount:
          type: string
    v2_onboarding.V2OnboardingStatus:
      type: string
      enum:
      - COMPLETED
      - RUNNING
      - PENDING
      - QUEUED
      - NA
      - ERRORED
      x-enum-varnames:
      - COMPLETED
      - RUNNING
      - PENDING
      - QUEUED
      - NA
      - ERRORED
    pipelines.CreatePipelineResponse_data:
      type: object
      properties:
        identifier:
          type: string
      example:
        identifier: identifier
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-API-Key
      in: header
    BasicAuth:
      type: http
      scheme: basic
x-original-swagger-version: "2.0"
