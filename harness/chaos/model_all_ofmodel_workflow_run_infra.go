/*
 * Chaos Manager API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 1.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package chaos

// Target infra in which the workflow will run
type AllOfmodelWorkflowRunInfra struct {
	// Cluster type Indicates the type on infrastructure (Kubernetes/openshift)
	ClusterType *interface{} `json:"clusterType,omitempty"`
	// Timestamp when the workflow was created
	CreatedAt string `json:"createdAt,omitempty"`
	// User who created the workflow
	CreatedBy *interface{} `json:"createdBy,omitempty"`
	// Description of the workflow
	Description string `json:"description,omitempty"`
	// Environment ID where infra is installed
	EnvironmentID string `json:"environmentID,omitempty"`
	// Harness identifiers
	Identifiers *interface{} `json:"identifiers,omitempty"`
	// ID of the infra
	InfraID string `json:"infraID,omitempty"`
	// Namespace where the infra is being installed
	InfraNamespace string `json:"infraNamespace,omitempty"`
	// Scope of the infra : ns or cluster
	InfraScope *interface{} `json:"infraScope,omitempty"`
	// Type of infrastructure
	InfraType *interface{} `json:"infraType,omitempty"`
	// Bool value to check if infra is active
	IsActive bool `json:"isActive,omitempty"`
	// Bool value to check if infra is confirmed
	IsInfraConfirmed bool `json:"isInfraConfirmed,omitempty"`
	// Bool value indicating if the workflow has removed
	IsRemoved bool `json:"isRemoved,omitempty"`
	// Last received heartbeat of infrastructure
	LastHeartbeat string `json:"lastHeartbeat,omitempty"`
	// Name of the workflow
	Name string `json:"name,omitempty"`
	// Time when infra became active
	StartTime string `json:"startTime,omitempty"`
	// Tags of the workflow
	Tags []string `json:"tags,omitempty"`
	// Timestamp when the workflow was last updated
	UpdatedAt string `json:"updatedAt,omitempty"`
	// Details of the user who updated the workflow
	UpdatedBy *interface{} `json:"updatedBy,omitempty"`
	// Version of infrastructure
	Version string `json:"version,omitempty"`
}
