{
    "openapi": "3.0.0",
    "info": {
        "title": "Harness NextGen GitOps API Reference",
        "description": "This the Open Api Spec 3 for the GitoOps service. This is under active development. Beware of the breaking change with respect to the generated code stub.",
        "version": "1.0",
        "contact": {
            "email": "contact@harness.io"
        }
    },
    "paths": {
        "/api/filters": {
            "get": {
                "summary": "List filters",
                "description": "List returns a list of filters.",
                "operationId": "FilterService_List",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1FilterList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filterType",
                        "description": "Filter type. One of {APPLICATION}",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FILTER_TYPE_UNSET",
                                "APPLICATION",
                                "AGENT",
                                "CLUSTER",
                                "REPO"
                            ],
                            "default": "FILTER_TYPE_UNSET"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "tags": [
                    "Filters"
                ]
            },
            "post": {
                "summary": "Create a filter",
                "description": "CreateFilter creates a filter",
                "operationId": "FilterService_Create",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1Filter"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/v1Filter"
                },
                "tags": [
                    "Filters"
                ]
            },
            "put": {
                "summary": "Update a filter",
                "description": "Update updates a filter",
                "operationId": "FilterService_Update",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1Filter"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/v1Filter"
                },
                "tags": [
                    "Filters"
                ]
            }
        },
        "/api/filters/{identifier}": {
            "get": {
                "summary": "Get get filter details",
                "description": "Get filter details.",
                "operationId": "FilterService_Get",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1Filter"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "Identifier for the filter.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filterType",
                        "description": "Filter type. One of {APPLICATION}",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FILTER_TYPE_UNSET",
                                "APPLICATION",
                                "AGENT",
                                "CLUSTER",
                                "REPO"
                            ],
                            "default": "FILTER_TYPE_UNSET"
                        }
                    }
                ],
                "tags": [
                    "Filters"
                ]
            },
            "delete": {
                "summary": "Delete deletes a filter",
                "description": "Delete filter.",
                "operationId": "FilterService_Delete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "Identifier for the filter.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filterType",
                        "description": "Filter type. One of {APPLICATION}",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "FILTER_TYPE_UNSET",
                                "APPLICATION",
                                "AGENT",
                                "CLUSTER",
                                "REPO"
                            ],
                            "default": "FILTER_TYPE_UNSET"
                        }
                    }
                ],
                "tags": [
                    "Filters"
                ]
            }
        },
        "/api/v1/agents": {
            "get": {
                "description": "List agents.",
                "operationId": "AgentServiceForServer_List",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1AgentList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AGENT_TYPE_UNSET",
                                "CONNECTED_ARGO_PROVIDER",
                                "MANAGED_ARGO_PROVIDER",
                                "HOSTED_ARGO_PROVIDER"
                            ],
                            "default": "AGENT_TYPE_UNSET"
                        }
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AGENT_SCOPE_UNSET",
                                "ACCOUNT",
                                "ORG",
                                "PROJECT"
                            ],
                            "default": "AGENT_SCOPE_UNSET"
                        }
                    },
                    {
                        "name": "drIdentifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SORT_BY_NOT_SET",
                                "NAME",
                                "HEALTH_STATUS",
                                "CONNECTIVITY_STATUS",
                                "NAMESPACE",
                                "VERSION"
                            ],
                            "default": "SORT_BY_NOT_SET"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SORT_ORDER_NOT_SET",
                                "ASC",
                                "DESC"
                            ],
                            "default": "SORT_ORDER_NOT_SET"
                        }
                    },
                    {
                        "name": "metadataOnly",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ignoreScope",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "connectedStatus",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CONNECTED_STATUS_UNSET",
                                "CONNECTED",
                                "DISCONNECTED"
                            ],
                            "default": "CONNECTED_STATUS_UNSET"
                        }
                    },
                    {
                        "name": "healthStatus",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "HEALTH_STATUS_UNSET",
                                "HEALTHY",
                                "UNHEALTHY"
                            ],
                            "default": "HEALTH_STATUS_UNSET"
                        }
                    },
                    {
                        "name": "withCredentials",
                        "description": "Applicable when trying to retrieve an agent. Set to true to include the credentials for the agent in the response. (Private key may not be included in response if agent is already connected to harness). NOTE: Setting this to true requires the user to have edit permissions on Agent.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "includeSecondary",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Agents"
                ]
            },
            "post": {
                "description": "Create agent.",
                "operationId": "AgentServiceForServer_Create",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1Agent"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/v1Agent"
                },
                "tags": [
                    "Agents"
                ]
            }
        },
        "/api/v1/agents/ns": {
            "get": {
                "description": "Get agent namespaces.",
                "operationId": "AgentServiceForServer_ListNamespaces",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gitopsservicev1NamespaceList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AGENT_TYPE_UNSET",
                                "CONNECTED_ARGO_PROVIDER",
                                "MANAGED_ARGO_PROVIDER",
                                "HOSTED_ARGO_PROVIDER"
                            ],
                            "default": "AGENT_TYPE_UNSET"
                        }
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AGENT_SCOPE_UNSET",
                                "ACCOUNT",
                                "ORG",
                                "PROJECT"
                            ],
                            "default": "AGENT_SCOPE_UNSET"
                        }
                    },
                    {
                        "name": "drIdentifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SORT_BY_NOT_SET",
                                "NAME",
                                "HEALTH_STATUS",
                                "CONNECTIVITY_STATUS",
                                "NAMESPACE",
                                "VERSION"
                            ],
                            "default": "SORT_BY_NOT_SET"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SORT_ORDER_NOT_SET",
                                "ASC",
                                "DESC"
                            ],
                            "default": "SORT_ORDER_NOT_SET"
                        }
                    },
                    {
                        "name": "metadataOnly",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ignoreScope",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "connectedStatus",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CONNECTED_STATUS_UNSET",
                                "CONNECTED",
                                "DISCONNECTED"
                            ],
                            "default": "CONNECTED_STATUS_UNSET"
                        }
                    },
                    {
                        "name": "healthStatus",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "HEALTH_STATUS_UNSET",
                                "HEALTHY",
                                "UNHEALTHY"
                            ],
                            "default": "HEALTH_STATUS_UNSET"
                        }
                    },
                    {
                        "name": "withCredentials",
                        "description": "Applicable when trying to retrieve an agent. Set to true to include the credentials for the agent in the response. (Private key may not be included in response if agent is already connected to harness). NOTE: Setting this to true requires the user to have edit permissions on Agent.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "includeSecondary",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Agents"
                ]
            }
        },
        "/api/v1/agents/search": {
            "post": {
                "description": "Search agents.",
                "operationId": "AgentServiceForServer_Search",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1AgentList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1AgentQuery"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Agents"
                ]
            }
        },
        "/api/v1/agents/tags": {
            "get": {
                "description": "Get agent tags.",
                "operationId": "AgentServiceForServer_ListTags",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1TagMap"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AGENT_TYPE_UNSET",
                                "CONNECTED_ARGO_PROVIDER",
                                "MANAGED_ARGO_PROVIDER",
                                "HOSTED_ARGO_PROVIDER"
                            ],
                            "default": "AGENT_TYPE_UNSET"
                        }
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AGENT_SCOPE_UNSET",
                                "ACCOUNT",
                                "ORG",
                                "PROJECT"
                            ],
                            "default": "AGENT_SCOPE_UNSET"
                        }
                    },
                    {
                        "name": "drIdentifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SORT_BY_NOT_SET",
                                "NAME",
                                "HEALTH_STATUS",
                                "CONNECTIVITY_STATUS",
                                "NAMESPACE",
                                "VERSION"
                            ],
                            "default": "SORT_BY_NOT_SET"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SORT_ORDER_NOT_SET",
                                "ASC",
                                "DESC"
                            ],
                            "default": "SORT_ORDER_NOT_SET"
                        }
                    },
                    {
                        "name": "metadataOnly",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ignoreScope",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "connectedStatus",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CONNECTED_STATUS_UNSET",
                                "CONNECTED",
                                "DISCONNECTED"
                            ],
                            "default": "CONNECTED_STATUS_UNSET"
                        }
                    },
                    {
                        "name": "healthStatus",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "HEALTH_STATUS_UNSET",
                                "HEALTHY",
                                "UNHEALTHY"
                            ],
                            "default": "HEALTH_STATUS_UNSET"
                        }
                    },
                    {
                        "name": "withCredentials",
                        "description": "Applicable when trying to retrieve an agent. Set to true to include the credentials for the agent in the response. (Private key may not be included in response if agent is already connected to harness). NOTE: Setting this to true requires the user to have edit permissions on Agent.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "includeSecondary",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Agents"
                ]
            }
        },
        "/api/v1/agents/versions": {
            "get": {
                "description": "Get agent versions.",
                "operationId": "AgentServiceForServer_ListVersions",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1VersionList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AGENT_TYPE_UNSET",
                                "CONNECTED_ARGO_PROVIDER",
                                "MANAGED_ARGO_PROVIDER",
                                "HOSTED_ARGO_PROVIDER"
                            ],
                            "default": "AGENT_TYPE_UNSET"
                        }
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AGENT_SCOPE_UNSET",
                                "ACCOUNT",
                                "ORG",
                                "PROJECT"
                            ],
                            "default": "AGENT_SCOPE_UNSET"
                        }
                    },
                    {
                        "name": "drIdentifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SORT_BY_NOT_SET",
                                "NAME",
                                "HEALTH_STATUS",
                                "CONNECTIVITY_STATUS",
                                "NAMESPACE",
                                "VERSION"
                            ],
                            "default": "SORT_BY_NOT_SET"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SORT_ORDER_NOT_SET",
                                "ASC",
                                "DESC"
                            ],
                            "default": "SORT_ORDER_NOT_SET"
                        }
                    },
                    {
                        "name": "metadataOnly",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ignoreScope",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "connectedStatus",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CONNECTED_STATUS_UNSET",
                                "CONNECTED",
                                "DISCONNECTED"
                            ],
                            "default": "CONNECTED_STATUS_UNSET"
                        }
                    },
                    {
                        "name": "healthStatus",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "HEALTH_STATUS_UNSET",
                                "HEALTHY",
                                "UNHEALTHY"
                            ],
                            "default": "HEALTH_STATUS_UNSET"
                        }
                    },
                    {
                        "name": "withCredentials",
                        "description": "Applicable when trying to retrieve an agent. Set to true to include the credentials for the agent in the response. (Private key may not be included in response if agent is already connected to harness). NOTE: Setting this to true requires the user to have edit permissions on Agent.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "includeSecondary",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Agents"
                ]
            }
        },
        "/api/v1/agents/{agent.identifier}": {
            "put": {
                "summary": "Update agents.",
                "description": "This API can be used to update an agent's details in Harness. The following fields will be updated to the new values in the body - \"tags\", \"metadata\"(all nested fields in metadata will be replaced with new provided values including empty/nil values if they're sent), \"description\", \"type\".",
                "operationId": "AgentServiceForServer_Update",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1Agent"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agent.identifier",
                        "description": "The gitops-server generated ID for this gitops-agent",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/v1Agent"
                },
                "tags": [
                    "Agents"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications": {
            "get": {
                "summary": "List applications for a specific agent",
                "description": "List returns a list of applications for a specific agent.",
                "operationId": "AgentApplicationService_List",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/applicationsApplicationList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "description": "the application's name.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.refresh",
                        "description": "set to \"normal\" OR \"hard\" if an application refresh is required before fetching.\n\nnormal refresh only if source has changed(commit, helm chart version, etc.)\n\nhard refresh will invalidate all generated manifest caches and force regeneration.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.project",
                        "description": "the project names to restrict returned list applications.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "query.resourceVersion",
                        "description": "when specified with a watch call, shows changes that occur after that particular version of a resource.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.selector",
                        "description": "the selector to to restrict returned list to applications only with matched labels.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.repo",
                        "description": "the repoURL to restrict returned list applications.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fetchFromHarness",
                        "description": "fetchFromHarness is used in Get Application API to fetch application directly from mongodb instead of from agent. Use in Get Application API to fetch application directly from harness. This is already the fallback if the task times out on Gitops Agent. Use with caution as this may not return the latest state of application.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            },
            "post": {
                "summary": "Create an application",
                "description": "Create creates a new application in the specified project.",
                "operationId": "AgentApplicationService_Create",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1Application"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "clusterIdentifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repoIdentifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skipRepoValidation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "repoIdentifiers",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/applicationsApplicationCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/parent/{query.name}": {
            "get": {
                "summary": "Get parent application",
                "description": "Parent returns a parent application (app of apps or appset) by child name",
                "operationId": "AgentApplicationService_Parent",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1Application"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "description": "the application's name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.refresh",
                        "description": "set to \"normal\" OR \"hard\" if an application refresh is required before fetching.\n\nnormal refresh only if source has changed(commit, helm chart version, etc.)\n\nhard refresh will invalidate all generated manifest caches and force regeneration.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.project",
                        "description": "the project names to restrict returned list applications.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "query.resourceVersion",
                        "description": "when specified with a watch call, shows changes that occur after that particular version of a resource.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.selector",
                        "description": "the selector to to restrict returned list to applications only with matched labels.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.repo",
                        "description": "the repoURL to restrict returned list applications.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fetchFromHarness",
                        "description": "fetchFromHarness is used in Get Application API to fetch application directly from mongodb instead of from agent. Use in Get Application API to fetch application directly from harness. This is already the fallback if the task times out on Gitops Agent. Use with caution as this may not return the latest state of application.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{query.applicationName}/managed-resources": {
            "get": {
                "summary": "Get ManagedResources",
                "description": "ManagedResources returns list of managed resources.",
                "operationId": "AgentApplicationService_ManagedResources",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/applicationsManagedResourcesResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.applicationName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.namespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.version",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.kind",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{query.applicationName}/resource-tree": {
            "get": {
                "summary": "Get resource tree",
                "description": "ResourceTree returns resource tree.",
                "operationId": "AgentApplicationService_ResourceTree",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/applicationsApplicationTree"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.applicationName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.namespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.version",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.kind",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{query.name}": {
            "get": {
                "summary": "Get application",
                "description": "Get returns an application by name.",
                "operationId": "AgentApplicationService_Get",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1Application"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "description": "the application's name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.refresh",
                        "description": "set to \"normal\" OR \"hard\" if an application refresh is required before fetching.\n\nnormal refresh only if source has changed(commit, helm chart version, etc.)\n\nhard refresh will invalidate all generated manifest caches and force regeneration.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.project",
                        "description": "the project names to restrict returned list applications.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "query.resourceVersion",
                        "description": "when specified with a watch call, shows changes that occur after that particular version of a resource.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.selector",
                        "description": "the selector to to restrict returned list to applications only with matched labels.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.repo",
                        "description": "the repoURL to restrict returned list applications.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fetchFromHarness",
                        "description": "fetchFromHarness is used in Get Application API to fetch application directly from mongodb instead of from agent. Use in Get Application API to fetch application directly from harness. This is already the fallback if the task times out on Gitops Agent. Use with caution as this may not return the latest state of application.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{query.name}/events": {
            "get": {
                "summary": "List resource events",
                "description": "ListResourceEvents returns a list of event resources.",
                "operationId": "AgentApplicationService_ListResourceEvents",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/applicationsEventList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.resourceNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.resourceName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.resourceUID",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{query.name}/logs": {
            "get": {
                "summary": "PodLogs returns stream of log entries for the specified pod(s).",
                "description": "PodLogs returns stream of log entries for the specified pod(s).",
                "operationId": "AgentApplicationService_PodLogs2",
                "responses": {
                    "200": {
                        "description": "A successful response.(streaming responses)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/applicationsLogEntry"
                                        },
                                        "error": {
                                            "$ref": "#/components/schemas/runtimeStreamError"
                                        }
                                    },
                                    "title": "Stream result of applicationsLogEntry"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.namespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.podName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.container",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.sinceSeconds",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "query.sinceTime.seconds",
                        "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "query.sinceTime.nanos",
                        "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "query.tailLines",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "query.follow",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.untilTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.kind",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.resourceName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.previous",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{query.name}/logs/batch": {
            "get": {
                "description": "PodLogsBatch returns stream of log entry in batches of upto 1000 entries for the specified pod(s).",
                "operationId": "AgentApplicationService_PodLogsBatch2",
                "responses": {
                    "200": {
                        "description": "A successful response.(streaming responses)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/applicationsLogEntriesBatch"
                                        },
                                        "error": {
                                            "$ref": "#/components/schemas/runtimeStreamError"
                                        }
                                    },
                                    "title": "Stream result of applicationsLogEntriesBatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.namespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.podName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.container",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.sinceSeconds",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "query.sinceTime.seconds",
                        "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "query.sinceTime.nanos",
                        "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "query.tailLines",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "query.follow",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.untilTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.kind",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.resourceName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.previous",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{query.name}/manifests": {
            "get": {
                "summary": "Get application manifest",
                "description": "GetManifests returns an application manifests.",
                "operationId": "AgentApplicationService_GetManifests",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/repositoriesManifestResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.revision",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.sourcePositions",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "format": "int64"
                            }
                        }
                    },
                    {
                        "name": "query.revisions",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{query.name}/pods/{query.podName}/logs": {
            "get": {
                "summary": "PodLogs returns stream of log entries for the specified pod(s).",
                "description": "PodLogs returns stream of log entries for the specified pod(s).",
                "operationId": "AgentApplicationService_PodLogs",
                "responses": {
                    "200": {
                        "description": "A successful response.(streaming responses)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/applicationsLogEntry"
                                        },
                                        "error": {
                                            "$ref": "#/components/schemas/runtimeStreamError"
                                        }
                                    },
                                    "title": "Stream result of applicationsLogEntry"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.podName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.namespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.container",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.sinceSeconds",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "query.sinceTime.seconds",
                        "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "query.sinceTime.nanos",
                        "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "query.tailLines",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "query.follow",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.untilTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.kind",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.resourceName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.previous",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{query.name}/pods/{query.podName}/logs/batch": {
            "get": {
                "description": "PodLogsBatch returns stream of log entry in batches of upto 1000 entries for the specified pod(s).",
                "operationId": "AgentApplicationService_PodLogsBatch",
                "responses": {
                    "200": {
                        "description": "A successful response.(streaming responses)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/applicationsLogEntriesBatch"
                                        },
                                        "error": {
                                            "$ref": "#/components/schemas/runtimeStreamError"
                                        }
                                    },
                                    "title": "Stream result of applicationsLogEntriesBatch"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.podName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.namespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.container",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.sinceSeconds",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "query.sinceTime.seconds",
                        "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "query.sinceTime.nanos",
                        "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "query.tailLines",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "query.follow",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.untilTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.filter",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.kind",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.resourceName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.previous",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{query.name}/revisions/{query.revision}/metadata": {
            "get": {
                "summary": "Get revision metadata",
                "description": "RevisionMetadata returns metadata for a specific revision of the application.",
                "operationId": "AgentApplicationService_RevisionMetadata",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/repositoriesRevisionMetadata"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "description": "the application's name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.revision",
                        "description": "the revision of the app",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appNamespace",
                        "description": "the application's namespace.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.sourceIndex",
                        "description": "source index (for multi source apps).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "query.versionId",
                        "description": "versionId from historical data (for multi source apps).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{query.name}/syncwindows": {
            "get": {
                "summary": "Get sync windows of the application",
                "description": "GetApplicationSyncWindows returns sync windows of the application.",
                "operationId": "AgentApplicationService_GetApplicationSyncWindows",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/applicationsApplicationSyncWindowsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{request.application.metadata.name}": {
            "put": {
                "summary": "Update an application",
                "description": "Update updates an application.",
                "operationId": "AgentApplicationService_Update",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1Application"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.application.metadata.name",
                        "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n+optional",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "clusterIdentifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repoIdentifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skipRepoValidation",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "repoIdentifiers",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/applicationsApplicationUpdateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{request.name}": {
            "delete": {
                "summary": "Delete an application",
                "description": "Delete deletes an application.",
                "operationId": "AgentApplicationService_Delete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/applicationsApplicationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.cascade",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "request.propagationPolicy",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "options.removeExistingFinalizers",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            },
            "patch": {
                "summary": "Patch an application",
                "description": "Patch applies a patch to an application.",
                "operationId": "AgentApplicationService_Patch",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1Application"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/servicev1ApplicationPatchRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{request.name}/operation": {
            "delete": {
                "summary": "Terminate operation",
                "description": "TerminateOperation terminates the currently running operation.",
                "operationId": "AgentApplicationService_TerminateOperation",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/applicationsOperationTerminateResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{request.name}/resource": {
            "get": {
                "summary": "Get an application resource",
                "description": "GetResource returns single application resource.",
                "operationId": "AgentApplicationService_GetResource",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/applicationsApplicationResourceResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.namespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.resourceName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.version",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.kind",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            },
            "delete": {
                "summary": "Delete resource",
                "description": "DeleteResource deletes a single application resource.",
                "operationId": "AgentApplicationService_DeleteResource",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/applicationsApplicationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.namespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.resourceName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.version",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.kind",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.force",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "request.orphan",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "request.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            },
            "post": {
                "summary": "Patch an application resource",
                "description": "PatchResource patch single application resource.",
                "operationId": "AgentApplicationService_PatchResource",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/applicationsApplicationResourceResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/applicationsApplicationResourcePatchRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{request.name}/resource/actions": {
            "get": {
                "summary": "List resource actions",
                "description": "ListResourceActions returns a list of resource actions.",
                "operationId": "AgentApplicationService_ListResourceActions",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/applicationsResourceActionsListResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.namespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.resourceName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.version",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.kind",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            },
            "post": {
                "summary": "Run resource action",
                "description": "RunResourceAction runs a resource action.",
                "operationId": "AgentApplicationService_RunResourceAction",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/applicationsApplicationResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/applicationsResourceActionRunRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{request.name}/rollback": {
            "post": {
                "summary": "Rollback syncs an application to its target state",
                "description": "Rollback syncs an application to its target state. Harness Event type (rollback).",
                "operationId": "AgentApplicationService_Rollback",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1Application"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/applicationsApplicationRollbackRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{request.name}/rollouts/status": {
            "get": {
                "description": "Get current status for the given Rollout resource",
                "operationId": "RolloutsService_GetRolloutStatus",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1RolloutInfo"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.namespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.resourceName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.version",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.kind",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Rollouts"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{request.name}/spec": {
            "put": {
                "summary": "Update application spec",
                "description": "UpdateSpec updates an application spec.",
                "operationId": "AgentApplicationService_UpdateSpec",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/applicationsApplicationSpec"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/applicationsApplicationUpdateSpecRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/applications/{request.name}/sync": {
            "post": {
                "summary": "Sync an application",
                "description": "Sync syncs an application to its target state. Harness Event type (deploy)",
                "operationId": "AgentApplicationService_Sync",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1Application"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/applicationsApplicationSyncRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/appprojectsmapping": {
            "get": {
                "summary": "Get Harness-Argo project mapping by agent",
                "description": "GetAppProjectMappingListByAgent retrieves Harness-Argo project mappings list by agent.",
                "operationId": "AppProjectMappingService_GetAppProjectMappingListByAgent",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1AppProjectMapping"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Project mappings"
                ]
            },
            "post": {
                "summary": "Create Harness-Argo project mapping",
                "description": "Create creates Harness-Argo project mappings.",
                "operationId": "AppProjectMappingService_Create",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1Empty"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/servicev1AppProjectMapping"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Project mappings"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/appprojectsmapping/{name}": {
            "delete": {
                "summary": "Delete Harness-Arog project mapping",
                "description": "Delete deletes Harness-Argo project mapping.",
                "operationId": "AppProjectMappingService_Delete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1Empty"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Project mappings"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/certificates": {
            "get": {
                "summary": "List all available repository certificates",
                "description": "List repository certificates.",
                "operationId": "AgentCertificateService_List",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/certificatesRepositoryCertificateList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.hostNamePattern",
                        "description": "A file-glob pattern (not regular expression) the host name has to match.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.certType",
                        "description": "The type of the certificate to match (ssh or https).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.certSubType",
                        "description": "The sub type of the certificate to match (protocol dependent, usually only used for ssh certs).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repository Certificates"
                ]
            },
            "delete": {
                "summary": "Delete the certificates that match the RepositoryCertificateQuery",
                "description": "Delete repository certificates.",
                "operationId": "AgentCertificateService_Delete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/certificatesRepositoryCertificateList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.hostNamePattern",
                        "description": "A file-glob pattern (not regular expression) the host name has to match.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.certType",
                        "description": "The type of the certificate to match (ssh or https).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.certSubType",
                        "description": "The sub type of the certificate to match (protocol dependent, usually only used for ssh certs).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repository Certificates"
                ]
            },
            "post": {
                "summary": "Creates repository certificates on the server",
                "description": "Create repository certificates.",
                "operationId": "AgentCertificateService_Create",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/certificatesRepositoryCertificateList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/certificatesRepositoryCertificateCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Repository Certificates"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/cluster_byname": {
            "get": {
                "summary": "Get a cluster managed by an agent by name",
                "description": "Get a cluster managed by agent using name",
                "operationId": "AgentClusterService_GetByName",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1Cluster"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fetchScopePrefixedIdentifier",
                        "description": "Indicates whether the identifier of cluster fetched must contain harness scope prefix (account./org.)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/cluster_byurl": {
            "get": {
                "summary": "Get a cluster managed by an agent by URL",
                "description": "Get a cluster managed by agent using URL",
                "operationId": "AgentClusterService_GetByUrl",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1Cluster"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fetchScopePrefixedIdentifier",
                        "description": "Indicates whether the identifier of cluster fetched must contain harness scope prefix (account./org.)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/clusters": {
            "get": {
                "summary": "List returns list of clusters",
                "description": "List clusters.",
                "operationId": "AgentClusterService_List",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clustersClusterList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.server",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.id.type",
                        "description": "type is the type of the specified cluster identifier ( \"server\" - default, \"name\" ).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.id.value",
                        "description": "value holds the cluster server URL or cluster name.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Clusters"
                ]
            },
            "post": {
                "summary": "Create creates a cluster",
                "description": "Create cluster.",
                "operationId": "AgentClusterService_Create",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1Cluster"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/clustersClusterCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/clusters/{identifier}": {
            "get": {
                "summary": "Get returns a cluster by identifier",
                "description": "Get cluster.",
                "operationId": "AgentClusterService_Get",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1Cluster"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.server",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.id.type",
                        "description": "type is the type of the specified cluster identifier ( \"server\" - default, \"name\" ).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.id.value",
                        "description": "value holds the cluster server URL or cluster name.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Clusters"
                ]
            },
            "delete": {
                "summary": "Delete deletes a cluster",
                "description": "Delete cluster.",
                "operationId": "AgentClusterService_Delete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/clustersClusterResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.server",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.id.type",
                        "description": "type is the type of the specified cluster identifier ( \"server\" - default, \"name\" ).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.id.value",
                        "description": "value holds the cluster server URL or cluster name.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "forceDelete",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Clusters"
                ]
            },
            "put": {
                "summary": "Update updates a cluster",
                "description": "Update cluster.",
                "operationId": "AgentClusterService_Update",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1Cluster"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "forceUpdate",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/clustersClusterUpdateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/deploy.yaml": {
            "get": {
                "description": "GetDeployYaml returns deployment yamls for agents.",
                "operationId": "AgentServiceForServer_GetDeployYaml",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/yaml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "namespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "disasterRecoveryIdentifier",
                        "description": "Disaster Recovery Identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skipCrds",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "caData",
                        "description": "Certificate chain for the agent, must be base64 encoded.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.http",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.https",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.username",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.password",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.skipSSLVerify",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "privateKey",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "argocdSettings.enableHelmPathTraversal",
                        "description": "Controls the Environment variable HELM_SECRETS_VALUES_ALLOW_PATH_TRAVERSAL to allow or deny dot-dot-slash values file paths. Disabled by default for security reasons. This config is pushed as an env variable to the repo-server.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "argocdSettings.forceEnableInCluster",
                        "description": "For a Namespaced gitops agent, incluster is disabled by default. (controlled through variable `cluster.inclusterEnabled` in argocd-cm configmap. NOTE that you will have to manually restrict your namespaced agent's scope to its own cluster since this essentially makes the namespaced agent have access to incluster completely including creating clusterroles.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Agents"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/deployment-spec/helm": {
            "post": {
                "description": "PostDeployHelmChart returns the Helm Chart for deploying the agents.",
                "operationId": "AgentServiceForServer_PostDeployHelmChart",
                "responses": {
                    "200": {
                        "description": "A successful response.(streaming responses)",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/v1DownloadResponse"
                                        },
                                        "error": {
                                            "$ref": "#/components/schemas/runtimeStreamError"
                                        }
                                    },
                                    "title": "Stream result of v1DownloadResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/v1AgentYamlQuery"
                },
                "tags": [
                    "Agents"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/deployment-spec/yaml": {
            "post": {
                "description": "PostDeployYaml returns deployment yamls for agents.",
                "operationId": "AgentServiceForServer_PostDeployYaml",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/yaml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/v1AgentYamlQuery"
                },
                "tags": [
                    "Agents"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/gpgkeys": {
            "get": {
                "summary": "List all available repository certificates",
                "description": "List all available repository certificates.",
                "operationId": "AgentGPGKeyService_List",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gpgkeysGnuPGPublicKeyList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.keyID",
                        "description": "The GPG key ID to query for.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Clusters"
                ]
            },
            "post": {
                "summary": "Create one or more GPG public keys in the server's configuration",
                "description": "Create one or more GPG public keys in the server's configuration.",
                "operationId": "AgentGPGKeyService_Create",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gpgkeysGnuPGPublicKeyCreateResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/gpgkeysGnuPGPublicKeyCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "GnuPGP Keys"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/gpgkeys/{query.keyID}": {
            "get": {
                "summary": "Get information about specified GPG public key from the server",
                "description": "Get information about specified GPG public key from the server.",
                "operationId": "AgentGPGKeyService_Get",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gpgkeysGnuPGPublicKey"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.keyID",
                        "description": "The GPG key ID to query for",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "GnuPGP Keys"
                ]
            },
            "delete": {
                "summary": "Delete specified GPG public key from the server's configuration",
                "description": "Delete specified GPG public key from the server's configuration.",
                "operationId": "AgentGPGKeyService_Delete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gpgkeysGnuPGPublicKeyResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.keyID",
                        "description": "The GPG key ID to query for",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "GnuPGP Keys"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/helm-chart": {
            "get": {
                "description": "GetDeployHelmChart returns the Helm Chart for deploying the agents.",
                "operationId": "AgentServiceForServer_GetDeployHelmChart",
                "responses": {
                    "200": {
                        "description": "A successful response.(streaming responses)",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/v1DownloadResponse"
                                        },
                                        "error": {
                                            "$ref": "#/components/schemas/runtimeStreamError"
                                        }
                                    },
                                    "title": "Stream result of v1DownloadResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "namespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "disasterRecoveryIdentifier",
                        "description": "Disaster Recovery Identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skipCrds",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "caData",
                        "description": "Certificate chain for the agent, must be base64 encoded.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.http",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.https",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.username",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.password",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.skipSSLVerify",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "privateKey",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "argocdSettings.enableHelmPathTraversal",
                        "description": "Controls the Environment variable HELM_SECRETS_VALUES_ALLOW_PATH_TRAVERSAL to allow or deny dot-dot-slash values file paths. Disabled by default for security reasons. This config is pushed as an env variable to the repo-server.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "argocdSettings.forceEnableInCluster",
                        "description": "For a Namespaced gitops agent, incluster is disabled by default. (controlled through variable `cluster.inclusterEnabled` in argocd-cm configmap. NOTE that you will have to manually restrict your namespaced agent's scope to its own cluster since this essentially makes the namespaced agent have access to incluster completely including creating clusterroles.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Agents"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/helm-overrides": {
            "get": {
                "description": "GetDeployOverrides returns the Helm Chart overrides for the agents.",
                "operationId": "AgentServiceForServer_GetDeployOverrides",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/yaml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "namespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "disasterRecoveryIdentifier",
                        "description": "Disaster Recovery Identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skipCrds",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "caData",
                        "description": "Certificate chain for the agent, must be base64 encoded.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.http",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.https",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.username",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.password",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.skipSSLVerify",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "privateKey",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "argocdSettings.enableHelmPathTraversal",
                        "description": "Controls the Environment variable HELM_SECRETS_VALUES_ALLOW_PATH_TRAVERSAL to allow or deny dot-dot-slash values file paths. Disabled by default for security reasons. This config is pushed as an env variable to the repo-server.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "argocdSettings.forceEnableInCluster",
                        "description": "For a Namespaced gitops agent, incluster is disabled by default. (controlled through variable `cluster.inclusterEnabled` in argocd-cm configmap. NOTE that you will have to manually restrict your namespaced agent's scope to its own cluster since this essentially makes the namespaced agent have access to incluster completely including creating clusterroles.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Agents"
                ]
            },
            "post": {
                "description": "PostDeployOverrides returns the Helm Chart overrides for deploying the agents.",
                "operationId": "AgentServiceForServer_PostDeployOverrides",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/yaml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/v1AgentYamlQuery"
                },
                "tags": [
                    "Agents"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/hosted/cluster": {
            "post": {
                "summary": "CreateHosted creates a harness hosted cluster",
                "description": "Creates Harness hosted cluster.",
                "operationId": "AgentClusterService_CreateHosted",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1Cluster"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/operator/yaml": {
            "get": {
                "description": "GetOperatorYaml returns operator yaml for deploying the agents.",
                "operationId": "AgentServiceForServer_GetOperatorYaml",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/yaml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "namespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "disasterRecoveryIdentifier",
                        "description": "Disaster Recovery Identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skipCrds",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "caData",
                        "description": "Certificate chain for the agent, must be base64 encoded.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.http",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.https",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.username",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.password",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "proxy.skipSSLVerify",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "privateKey",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "argocdSettings.enableHelmPathTraversal",
                        "description": "Controls the Environment variable HELM_SECRETS_VALUES_ALLOW_PATH_TRAVERSAL to allow or deny dot-dot-slash values file paths. Disabled by default for security reasons. This config is pushed as an env variable to the repo-server.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "argocdSettings.forceEnableInCluster",
                        "description": "For a Namespaced gitops agent, incluster is disabled by default. (controlled through variable `cluster.inclusterEnabled` in argocd-cm configmap. NOTE that you will have to manually restrict your namespaced agent's scope to its own cluster since this essentially makes the namespaced agent have access to incluster completely including creating clusterroles.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Agents"
                ]
            },
            "post": {
                "description": "PostOperatorYaml returns operator yaml for deploying the agents.",
                "operationId": "AgentServiceForServer_PostOperatorYaml",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/yaml": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/yaml": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/v1AgentYamlQuery"
                },
                "tags": [
                    "Agents"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/primaryNode": {
            "patch": {
                "description": "Set primary disaster recovery node.",
                "operationId": "AgentServiceForServer_SetPrimaryNode",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1Agent"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1AgentSetPrimaryNodeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Agents"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/projects": {
            "get": {
                "summary": "List returns list of Argo projects",
                "description": "Lists lists Argo projects.",
                "operationId": "AgentProjectService_List",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/appprojectsAppProjectList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Projects"
                ]
            },
            "post": {
                "summary": "Create a new Argo project",
                "description": "Create a new Argo project",
                "operationId": "AgentProjectService_Create",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/appprojectsAppProject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/projectsProjectCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Projects"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/projects/{query.name}": {
            "get": {
                "summary": "Get returns an Argo project by name",
                "description": "Get returns an Argo project by name.",
                "operationId": "AgentProjectService_Get",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/appprojectsAppProject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Projects"
                ]
            },
            "delete": {
                "summary": "Delete deletes an Argo project",
                "description": "Delete deletes an Argo project.",
                "operationId": "AgentProjectService_Delete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/projectsEmptyResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Projects"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/projects/{request.project.metadata.name}": {
            "put": {
                "summary": "Update updates an Argo project",
                "description": "Update updates an Argo project.",
                "operationId": "AgentProjectService_Update",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/appprojectsAppProject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "request.project.metadata.name",
                        "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n+optional",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/projectsProjectUpdateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Projects"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/reconcile/counts": {
            "post": {
                "summary": "Collect entity counts on cluster via agent",
                "description": "Returns number of entities that exist in the cluster on the agent. \nFilter can be used to count only global entities (with empty project) and those specified by the filter.",
                "operationId": "ReconcilerService_CollectCounts",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/reconcilerReconcileCountsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/servicev1ReconcilerFilter"
                },
                "tags": [
                    "Reconciler"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/reconcile/import": {
            "post": {
                "summary": "Import data from cluster via agent",
                "description": "Imports data from cluster via agent. There must be at least one project mapping in the database.\nReturns number of entities imported.",
                "operationId": "ReconcilerService_ImportData",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/reconcilerReconcileCountsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/servicev1ReconcilerFilter"
                },
                "tags": [
                    "Reconciler"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/repocreds": {
            "post": {
                "summary": "Create a new repository credential",
                "description": "CreateRepositoryCredentials creates a new repository credential.",
                "operationId": "AgentRepositoryCredentialsService_CreateRepositoryCredentials",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1RepositoryCredentials"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/hrepocredsRepoCredsCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Repository credentials"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/repocreds/get": {
            "post": {
                "summary": "Get credentials for repository url",
                "description": "GetCredentialsForRepositoryUrl returns a repository credential given its url.",
                "operationId": "AgentRepositoryCredentialsService_GetCredentialsForRepositoryUrl",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1RepositoryCredentials"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/hrepocredsRepoCredsQuery"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Repository credentials"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/repocreds/{identifier}": {
            "get": {
                "summary": "Get repository credential by identifier",
                "description": "GetRepositoryCredentials retrieves a repository credential given its identifier.",
                "operationId": "AgentRepositoryCredentialsService_GetRepositoryCredentials",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1RepositoryCredentials"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.url",
                        "description": "Repo URL for query.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.repoCredsType",
                        "description": "RepoCreds type - git or helm.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repository credentials"
                ]
            },
            "delete": {
                "summary": "Delete a repository credential",
                "description": "DeleteRepositoryCredentials deletes a specific repository credential.",
                "operationId": "AgentRepositoryCredentialsService_DeleteRepositoryCredentials",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/hrepocredsRepoCredsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repository credentials"
                ]
            },
            "put": {
                "summary": "Update a repository credential",
                "description": "UpdateRepositoryCredentials updates a specific repository credential.",
                "operationId": "AgentRepositoryCredentialsService_UpdateRepositoryCredentials",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1RepositoryCredentials"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/hrepocredsRepoCredsUpdateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Repository credentials"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/repositories": {
            "get": {
                "summary": "ListRepositories gets a list of all configured repositories",
                "description": "ListRepositories gets a list of all configured repositories.",
                "operationId": "AgentRepositoryService_ListRepositories",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/repositoriesRepositoryList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.repo",
                        "description": "Repo URL for query.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.forceRefresh",
                        "description": "Whether to force a cache refresh on repo's connection state.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.project",
                        "description": "The associated project project.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories"
                ]
            },
            "post": {
                "summary": "CreateRepository creates a new repository configuration",
                "description": "CreateRepository creates a new repository configuration.",
                "operationId": "AgentRepositoryService_CreateRepository",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1Repository"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repoCredsId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/repositoriesRepoCreateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Repositories"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/repositories/eso/check": {
            "get": {
                "summary": "Checks whether External Secrets Operator is installed",
                "description": "CheckExternalSecretsOperator Checks whether External Secrets Operator is installed or not",
                "operationId": "AgentRepositoryService_CheckExternalSecretsOperator",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/repositoriesCheckESOResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/repositories/eso/generators": {
            "get": {
                "summary": "Returns a list of ESO generators installed in agent namespace.",
                "description": "Returns a list of ESO generators installed in agent namespace.",
                "operationId": "AgentRepositoryService_ListESOGenerators",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/repositoriesESOGeneratorResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "UNSET",
                                "AWS_ECR",
                                "GOOGLE_GCR"
                            ],
                            "default": "UNSET"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/repositories/oci/type": {
            "post": {
                "summary": "Returns the Repository type of OCI repo",
                "description": "CheckOCIRepoType Returns the Repository type of OCI repo",
                "operationId": "AgentRepositoryService_CheckOCIRepoType",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1OCIRepoTypeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1OCIRepoType"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Repositories"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/repositories/validate": {
            "post": {
                "summary": "ValidateAccess gets connection state for a repository",
                "description": "ValidateAccess gets connection state for a repository.",
                "operationId": "AgentRepositoryService_ValidateAccess",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/commonsConnectionState"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/repositoriesRepoAccessQuery"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Repositories"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/repositories/{identifier}": {
            "get": {
                "summary": "Get returns a repository or its credentials",
                "description": "Get returns a repository or its credentials.",
                "operationId": "AgentRepositoryService_Get",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1Repository"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.repo",
                        "description": "Repo URL for query.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.forceRefresh",
                        "description": "Whether to force a cache refresh on repo's connection state.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.project",
                        "description": "The associated project project.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories"
                ]
            },
            "delete": {
                "summary": "DeleteRepository deletes a repository from the configuration",
                "description": "DeleteRepository deletes a repository from the configuration.",
                "operationId": "AgentRepositoryService_DeleteRepository",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/repositoriesRepoResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.repo",
                        "description": "Repo URL for query.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.forceRefresh",
                        "description": "Whether to force a cache refresh on repo's connection state.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.project",
                        "description": "The associated project project.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "forceDelete",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Repositories"
                ]
            },
            "put": {
                "summary": "UpdateRepository updates a repository configuration",
                "description": "UpdateRepository updates a repository configuration.",
                "operationId": "AgentRepositoryService_UpdateRepository",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1Repository"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/repositoriesRepoUpdateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Repositories"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/repositories/{identifier}/appdetails": {
            "get": {
                "summary": "GetAppDetails returns application details by given path",
                "description": "GetAppDetails returns application details by given path.",
                "operationId": "AgentRepositoryService_GetAppDetails",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/repositoriesRepoAppDetailsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.repoURL",
                        "description": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.path",
                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.targetRevision",
                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.helm.valueFiles",
                        "description": "ValuesFiles is a list of Helm value files to use when generating a template.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "query.source.helm.releaseName",
                        "description": "ReleaseName is the Helm release name to use. If omitted it will use the application name.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.helm.values",
                        "description": "Values specifies Helm values to be passed to helm template, typically defined as a block.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.helm.version",
                        "description": "Version is the Helm version to use for templating (either \"2\" or \"3\").",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.helm.passCredentials",
                        "description": "PassCredentials pass credentials to all domains (Helm's --pass-credentials).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.source.helm.ignoreMissingValueFiles",
                        "description": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.source.helm.skipCrds",
                        "description": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.source.helm.namespace",
                        "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.helm.kubeVersion",
                        "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.helm.apiVersions",
                        "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "query.source.helm.skipTests",
                        "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.source.helm.skipSchemaValidation",
                        "description": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.source.kustomize.namePrefix",
                        "description": "NamePrefix is a prefix appended to resources for Kustomize apps.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.kustomize.nameSuffix",
                        "description": "NameSuffix is a suffix appended to resources for Kustomize apps.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.kustomize.images",
                        "description": "Images is a list of Kustomize image override specifications.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "query.source.kustomize.version",
                        "description": "Version controls which version of Kustomize to use for rendering manifests.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.kustomize.forceCommonLabels",
                        "description": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.source.kustomize.forceCommonAnnotations",
                        "description": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.source.kustomize.namespace",
                        "description": "Namespace sets the namespace that Kustomize adds to all resources.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.kustomize.components",
                        "description": "Components specifies a list of kustomize components to add to the kustomization before building.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "query.source.kustomize.labelWithoutSelector",
                        "description": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.source.kustomize.kubeVersion",
                        "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.kustomize.apiVersions",
                        "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "query.source.ksonnet.environment",
                        "description": "Environment is a ksonnet application environment name.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.directory.recurse",
                        "description": "Recurse specifies whether to scan a directory recursively for manifests.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.source.directory.jsonnet.libs",
                        "description": "Additional library search dirs.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "query.source.directory.exclude",
                        "description": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.directory.include",
                        "description": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.plugin.name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.chart",
                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.ref",
                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.name",
                        "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appProject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.sourceIndex",
                        "description": "source index (for multi source apps).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "query.versionId",
                        "description": "versionId from historical data (for multi source apps).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "tags": [
                    "Repositories"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/repositories/{identifier}/apps": {
            "get": {
                "summary": "ListApps returns list of apps in the repo",
                "description": "ListApps returns list of apps in the repo.",
                "operationId": "AgentRepositoryService_ListApps",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/repositoriesRepoAppsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.repo",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.revision",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appProject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/repositories/{identifier}/helmcharts": {
            "get": {
                "summary": "GetHelmCharts returns list of helm charts in the specified repository",
                "description": "GetHelmCharts returns list of helm charts in the specified repository.",
                "operationId": "AgentRepositoryService_GetHelmCharts",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/repositoriesHelmChartsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.repo",
                        "description": "Repo URL for query.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.forceRefresh",
                        "description": "Whether to force a cache refresh on repo's connection state.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.project",
                        "description": "The associated project project.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/repositories/{identifier}/refs": {
            "get": {
                "summary": "Returns a list of refs (e.g. branches and tags) in the repo",
                "description": "Returns a list of refs (e.g. branches and tags) in the repo.",
                "operationId": "AgentRepositoryService_ListRefs",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/repositoriesRefs"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.repo",
                        "description": "Repo URL for query.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.forceRefresh",
                        "description": "Whether to force a cache refresh on repo's connection state.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.project",
                        "description": "The associated project project.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/repositories_byurl/appdetails": {
            "get": {
                "summary": "GetAppDetailsByUrl returns application details by given path for repositories by URL",
                "description": "GetAppDetails returns application details by given path.",
                "operationId": "AgentRepositoryService_GetAppDetailsByUrl",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/repositoriesRepoAppDetailsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.repoURL",
                        "description": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.path",
                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.targetRevision",
                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.helm.valueFiles",
                        "description": "ValuesFiles is a list of Helm value files to use when generating a template.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "query.source.helm.releaseName",
                        "description": "ReleaseName is the Helm release name to use. If omitted it will use the application name.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.helm.values",
                        "description": "Values specifies Helm values to be passed to helm template, typically defined as a block.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.helm.version",
                        "description": "Version is the Helm version to use for templating (either \"2\" or \"3\").",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.helm.passCredentials",
                        "description": "PassCredentials pass credentials to all domains (Helm's --pass-credentials).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.source.helm.ignoreMissingValueFiles",
                        "description": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.source.helm.skipCrds",
                        "description": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.source.helm.namespace",
                        "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.helm.kubeVersion",
                        "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.helm.apiVersions",
                        "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "query.source.helm.skipTests",
                        "description": "SkipTests skips test manifest installation step (Helm's --skip-tests).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.source.helm.skipSchemaValidation",
                        "description": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.source.kustomize.namePrefix",
                        "description": "NamePrefix is a prefix appended to resources for Kustomize apps.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.kustomize.nameSuffix",
                        "description": "NameSuffix is a suffix appended to resources for Kustomize apps.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.kustomize.images",
                        "description": "Images is a list of Kustomize image override specifications.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "query.source.kustomize.version",
                        "description": "Version controls which version of Kustomize to use for rendering manifests.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.kustomize.forceCommonLabels",
                        "description": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.source.kustomize.forceCommonAnnotations",
                        "description": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.source.kustomize.namespace",
                        "description": "Namespace sets the namespace that Kustomize adds to all resources.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.kustomize.components",
                        "description": "Components specifies a list of kustomize components to add to the kustomization before building.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "query.source.kustomize.labelWithoutSelector",
                        "description": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.source.kustomize.kubeVersion",
                        "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.kustomize.apiVersions",
                        "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "query.source.ksonnet.environment",
                        "description": "Environment is a ksonnet application environment name.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.directory.recurse",
                        "description": "Recurse specifies whether to scan a directory recursively for manifests.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.source.directory.jsonnet.libs",
                        "description": "Additional library search dirs.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "query.source.directory.exclude",
                        "description": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.directory.include",
                        "description": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.plugin.name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.chart",
                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.ref",
                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.source.name",
                        "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appProject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.sourceIndex",
                        "description": "source index (for multi source apps).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "query.versionId",
                        "description": "versionId from historical data (for multi source apps).",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "tags": [
                    "Repositories"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/repositories_byurl/apps": {
            "get": {
                "summary": "ListAppsByUrl returns list of apps in the repo",
                "description": "ListApps returns list of apps in the repo.",
                "operationId": "AgentRepositoryService_ListAppsByUrl",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/repositoriesRepoAppsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.repo",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.revision",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appProject",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/repositories_byurl/helmcharts": {
            "get": {
                "summary": "GetHelmChartsByUrl returns list of helm charts in the repository by URL",
                "description": "GetHelmCharts returns list of helm charts in the specified repository.",
                "operationId": "AgentRepositoryService_GetHelmChartsByUrl",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/repositoriesHelmChartsResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.repo",
                        "description": "Repo URL for query.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.forceRefresh",
                        "description": "Whether to force a cache refresh on repo's connection state.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.project",
                        "description": "The associated project project.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/repositories_byurl/refs": {
            "get": {
                "summary": "Returns a list of refs (e.g. branches and tags) in the repo by URL",
                "description": "Returns a list of refs (e.g. branches and tags) in the repo.",
                "operationId": "AgentRepositoryService_ListRefsByUrl",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/repositoriesRefs"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.repo",
                        "description": "Repo URL for query.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.forceRefresh",
                        "description": "Whether to force a cache refresh on repo's connection state.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "query.project",
                        "description": "The associated project project.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/repository_byurl": {
            "get": {
                "summary": "Get a repository configured in gitops by URL from Harness",
                "description": "Returns a repository by URL ",
                "operationId": "AgentRepositoryService_GetByUrl",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1RepoByUrlRespList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Agent.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Agent.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Agent.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "description": "URL by which to find the repository entity managed by agent.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "fetchScopePrefixedIdentifier",
                        "description": "Indicates whether the identifier of repo fetched must contain the harness scope prefix such (account./org.)",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Repositories"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/stream/applications": {
            "get": {
                "summary": "Watch returns stream of application change events",
                "description": "Watch returns stream of application change events.",
                "operationId": "AgentApplicationService_Watch",
                "responses": {
                    "200": {
                        "description": "A successful response.(streaming responses)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/applicationsApplicationWatchEvent"
                                        },
                                        "error": {
                                            "$ref": "#/components/schemas/runtimeStreamError"
                                        }
                                    },
                                    "title": "Stream result of applicationsApplicationWatchEvent"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "description": "the application's name.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.refresh",
                        "description": "set to \"normal\" OR \"hard\" if an application refresh is required before fetching.\n\nnormal refresh only if source has changed(commit, helm chart version, etc.)\n\nhard refresh will invalidate all generated manifest caches and force regeneration.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.project",
                        "description": "the project names to restrict returned list applications.",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "query.resourceVersion",
                        "description": "when specified with a watch call, shows changes that occur after that particular version of a resource.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.selector",
                        "description": "the selector to to restrict returned list to applications only with matched labels.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.repo",
                        "description": "the repoURL to restrict returned list applications.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fetchFromHarness",
                        "description": "fetchFromHarness is used in Get Application API to fetch application directly from mongodb instead of from agent. Use in Get Application API to fetch application directly from harness. This is already the fallback if the task times out on Gitops Agent. Use with caution as this may not return the latest state of application.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{agentIdentifier}/stream/applications/{query.applicationName}/resource-tree": {
            "get": {
                "summary": "WatchResourceTree returns stream of application resource tree",
                "description": "WatchResourceTree returns stream of application resource tree.",
                "operationId": "AgentApplicationService_WatchResourceTree",
                "responses": {
                    "200": {
                        "description": "A successful response.(streaming responses)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/applicationsApplicationTree"
                                        },
                                        "error": {
                                            "$ref": "#/components/schemas/runtimeStreamError"
                                        }
                                    },
                                    "title": "Stream result of applicationsApplicationTree"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.applicationName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.namespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.version",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.kind",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appNamespace",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.project",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/agents/{identifier}": {
            "get": {
                "description": "Get agents.",
                "operationId": "AgentServiceForServer_Get",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1Agent"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AGENT_TYPE_UNSET",
                                "CONNECTED_ARGO_PROVIDER",
                                "MANAGED_ARGO_PROVIDER",
                                "HOSTED_ARGO_PROVIDER"
                            ],
                            "default": "AGENT_TYPE_UNSET"
                        }
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AGENT_SCOPE_UNSET",
                                "ACCOUNT",
                                "ORG",
                                "PROJECT"
                            ],
                            "default": "AGENT_SCOPE_UNSET"
                        }
                    },
                    {
                        "name": "drIdentifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SORT_BY_NOT_SET",
                                "NAME",
                                "HEALTH_STATUS",
                                "CONNECTIVITY_STATUS",
                                "NAMESPACE",
                                "VERSION"
                            ],
                            "default": "SORT_BY_NOT_SET"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SORT_ORDER_NOT_SET",
                                "ASC",
                                "DESC"
                            ],
                            "default": "SORT_ORDER_NOT_SET"
                        }
                    },
                    {
                        "name": "metadataOnly",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ignoreScope",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "connectedStatus",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CONNECTED_STATUS_UNSET",
                                "CONNECTED",
                                "DISCONNECTED"
                            ],
                            "default": "CONNECTED_STATUS_UNSET"
                        }
                    },
                    {
                        "name": "healthStatus",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "HEALTH_STATUS_UNSET",
                                "HEALTHY",
                                "UNHEALTHY"
                            ],
                            "default": "HEALTH_STATUS_UNSET"
                        }
                    },
                    {
                        "name": "withCredentials",
                        "description": "Applicable when trying to retrieve an agent. Set to true to include the credentials for the agent in the response. (Private key may not be included in response if agent is already connected to harness). NOTE: Setting this to true requires the user to have edit permissions on Agent.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "includeSecondary",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Agents"
                ]
            },
            "delete": {
                "description": "Delete agents.",
                "operationId": "AgentServiceForServer_Delete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1Agent"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AGENT_TYPE_UNSET",
                                "CONNECTED_ARGO_PROVIDER",
                                "MANAGED_ARGO_PROVIDER",
                                "HOSTED_ARGO_PROVIDER"
                            ],
                            "default": "AGENT_TYPE_UNSET"
                        }
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AGENT_SCOPE_UNSET",
                                "ACCOUNT",
                                "ORG",
                                "PROJECT"
                            ],
                            "default": "AGENT_SCOPE_UNSET"
                        }
                    },
                    {
                        "name": "drIdentifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SORT_BY_NOT_SET",
                                "NAME",
                                "HEALTH_STATUS",
                                "CONNECTIVITY_STATUS",
                                "NAMESPACE",
                                "VERSION"
                            ],
                            "default": "SORT_BY_NOT_SET"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SORT_ORDER_NOT_SET",
                                "ASC",
                                "DESC"
                            ],
                            "default": "SORT_ORDER_NOT_SET"
                        }
                    },
                    {
                        "name": "metadataOnly",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ignoreScope",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "connectedStatus",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CONNECTED_STATUS_UNSET",
                                "CONNECTED",
                                "DISCONNECTED"
                            ],
                            "default": "CONNECTED_STATUS_UNSET"
                        }
                    },
                    {
                        "name": "healthStatus",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "HEALTH_STATUS_UNSET",
                                "HEALTHY",
                                "UNHEALTHY"
                            ],
                            "default": "HEALTH_STATUS_UNSET"
                        }
                    },
                    {
                        "name": "withCredentials",
                        "description": "Applicable when trying to retrieve an agent. Set to true to include the credentials for the agent in the response. (Private key may not be included in response if agent is already connected to harness). NOTE: Setting this to true requires the user to have edit permissions on Agent.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "includeSecondary",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Agents"
                ]
            }
        },
        "/api/v1/agents/{identifier}/credentials": {
            "post": {
                "description": "Regenerate credentials for agents.",
                "operationId": "AgentServiceForServer_RegenerateCredentials",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1Agent"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Agents"
                ]
            }
        },
        "/api/v1/agents/{identifier}/scale": {
            "post": {
                "description": "Scale the Hosted agent.",
                "operationId": "AgentServiceForServer_Scale",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1Agent"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1AgentScaleRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Agents"
                ]
            }
        },
        "/api/v1/agents/{identifier}/unique": {
            "get": {
                "description": "Unique returns unique agents.",
                "operationId": "AgentServiceForServer_Unique",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1UniqueMessage"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AGENT_TYPE_UNSET",
                                "CONNECTED_ARGO_PROVIDER",
                                "MANAGED_ARGO_PROVIDER",
                                "HOSTED_ARGO_PROVIDER"
                            ],
                            "default": "AGENT_TYPE_UNSET"
                        }
                    },
                    {
                        "name": "tags",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "scope",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AGENT_SCOPE_UNSET",
                                "ACCOUNT",
                                "ORG",
                                "PROJECT"
                            ],
                            "default": "AGENT_SCOPE_UNSET"
                        }
                    },
                    {
                        "name": "drIdentifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SORT_BY_NOT_SET",
                                "NAME",
                                "HEALTH_STATUS",
                                "CONNECTIVITY_STATUS",
                                "NAMESPACE",
                                "VERSION"
                            ],
                            "default": "SORT_BY_NOT_SET"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SORT_ORDER_NOT_SET",
                                "ASC",
                                "DESC"
                            ],
                            "default": "SORT_ORDER_NOT_SET"
                        }
                    },
                    {
                        "name": "metadataOnly",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ignoreScope",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "connectedStatus",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "CONNECTED_STATUS_UNSET",
                                "CONNECTED",
                                "DISCONNECTED"
                            ],
                            "default": "CONNECTED_STATUS_UNSET"
                        }
                    },
                    {
                        "name": "healthStatus",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "HEALTH_STATUS_UNSET",
                                "HEALTHY",
                                "UNHEALTHY"
                            ],
                            "default": "HEALTH_STATUS_UNSET"
                        }
                    },
                    {
                        "name": "withCredentials",
                        "description": "Applicable when trying to retrieve an agent. Set to true to include the credentials for the agent in the response. (Private key may not be included in response if agent is already connected to harness). NOTE: Setting this to true requires the user to have edit permissions on Agent.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "includeSecondary",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "tags": [
                    "Agents"
                ]
            }
        },
        "/api/v1/applications": {
            "post": {
                "summary": "List applications",
                "description": "ListApps retrieves a list of applications.",
                "operationId": "ApplicationService_ListApps",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1Applicationlist"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/servicev1ApplicationQuery"
                },
                "tags": [
                    "Application"
                ]
            }
        },
        "/api/v1/applications/attributes": {
            "get": {
                "summary": "List attributes for applications",
                "description": "ListAttributes returns a list of attributes for applications",
                "operationId": "ApplicationService_ListAttributes",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ApplicationAttributesList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "applicationIdentifiers",
                        "description": "List of application identifiers",
                        "in": "query",
                        "required": false,
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/applications/bulk/refresh": {
            "post": {
                "summary": "Bulk refresh multiple applications",
                "description": "BulkRefresh refreshes the status of multiple applications at once, optionally performing a hard refresh if refresh is set to hard.",
                "operationId": "ApplicationService_BulkRefresh",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/applicationsApplicationBulkRefreshResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/applicationsApplicationBulkRefreshRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/applications/bulk/sync": {
            "post": {
                "summary": "Bulk sync multiple applications",
                "description": "BulkSync initiates sync for multiple applications to their target states.",
                "operationId": "ApplicationService_BulkSync",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/applicationsApplicationBulkSyncResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/applicationsApplicationBulkSyncRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/applications/multisource": {
            "get": {
                "summary": "Check if multisource feature is enabled",
                "description": "IsMultiSourceEnabled checks if multiple sources for an application feature is enabled",
                "operationId": "ApplicationService_IsMultiSourceEnabled",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1Enabled"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "disasterRecoveryIdentifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/applications/ns": {
            "post": {
                "summary": "List namespaces for a specific query",
                "description": "ListNs retrieves a list of namespaces for a specific query.",
                "operationId": "ApplicationService_ListNs",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gitopsservicev1NamespaceList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "$ref": "#/components/requestBodies/servicev1ApplicationQuery"
                },
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/applications/sets": {
            "get": {
                "summary": "List LegacyApplicationSets",
                "description": "ListAppSets lists LegacyApplicationSets in the specified project",
                "operationId": "ApplicationService_ListAppSets",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1LegacyApplicationSetList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/applications/sync": {
            "post": {
                "summary": "List application sync status",
                "description": "ListAppSync returns a list of application sync status",
                "operationId": "ApplicationService_ListAppSync",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ApplicationSyncStatuslist"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1ApplicationSyncStatusQuery"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/applications/{name}/exists": {
            "get": {
                "summary": "Check if an application exists",
                "description": "Exists checks whether an application with the given name exists.",
                "operationId": "ApplicationService_Exists",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/applicationset": {
            "post": {
                "summary": "Update updates an applicationset",
                "description": "Update applicationset.",
                "operationId": "ApplicationSetService_Create",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1ApplicationSet"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/applicationsApplicationSetCreateRequest"
                },
                "tags": [
                    "ApplicationSet"
                ]
            },
            "put": {
                "summary": "Update updates an applicationset",
                "description": "Update existing applicationset.",
                "operationId": "ApplicationSetService_Update",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1ApplicationSet"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/applicationsApplicationSetCreateRequest"
                },
                "tags": [
                    "ApplicationSet"
                ]
            }
        },
        "/api/v1/applicationset/generate": {
            "post": {
                "summary": "Generate child applications from application set",
                "description": "Generate child applications from application set.",
                "operationId": "ApplicationSetService_Generate",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/applicationsApplicationSetGenerateResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/applicationsApplicationSetGenerateRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "ApplicationSet"
                ]
            }
        },
        "/api/v1/applicationset/generators": {
            "get": {
                "summary": "List applicationset generators",
                "description": "List applicationset generators",
                "operationId": "ApplicationSetService_ListApplicationSetGenerators",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ApplicationSetGeneratorList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ApplicationSet"
                ]
            }
        },
        "/api/v1/applicationset/generators/{type}": {
            "get": {
                "summary": "Get applicationset generator",
                "description": "Get applicationset generator",
                "operationId": "ApplicationSetService_GetApplicationSetGenerator",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "GENERATOR_TYPE_NOT_SET",
                                "LIST",
                                "CLUSTERS",
                                "GIT",
                                "SCM_PROVIDER_GITHUB",
                                "SCM_PROVIDER_GITLAB",
                                "SCM_PROVIDER_GITEA",
                                "SCM_PROVIDER_BITBUCKET",
                                "SCM_PROVIDER_AZURE",
                                "SCM_PROVIDER_BITBUCKET_CLOUD",
                                "SCM_PROVIDER_AWS_CODE_COMMIT",
                                "DUCK_TYPE",
                                "PULL_REQUEST_GITHUB",
                                "PULL_REQUEST_GITLAB",
                                "PULL_REQUEST_GITEA",
                                "PULL_REQUEST_BITBUCKET",
                                "PULL_REQUEST_BITBUCKET_CLOUD",
                                "PULL_REQUEST_AZURE",
                                "MATRIX",
                                "MERGE",
                                "PLUGIN"
                            ]
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "ApplicationSet"
                ]
            }
        },
        "/api/v1/applicationset/templates/{type}": {
            "get": {
                "summary": "Get applicationset template",
                "description": "Get applicationset template",
                "operationId": "ApplicationSetService_GetApplicationSetTemplate",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "GENERATOR_TYPE_NOT_SET",
                                "LIST",
                                "CLUSTERS",
                                "GIT",
                                "SCM_PROVIDER_GITHUB",
                                "SCM_PROVIDER_GITLAB",
                                "SCM_PROVIDER_GITEA",
                                "SCM_PROVIDER_BITBUCKET",
                                "SCM_PROVIDER_AZURE",
                                "SCM_PROVIDER_BITBUCKET_CLOUD",
                                "SCM_PROVIDER_AWS_CODE_COMMIT",
                                "DUCK_TYPE",
                                "PULL_REQUEST_GITHUB",
                                "PULL_REQUEST_GITLAB",
                                "PULL_REQUEST_GITEA",
                                "PULL_REQUEST_BITBUCKET",
                                "PULL_REQUEST_BITBUCKET_CLOUD",
                                "PULL_REQUEST_AZURE",
                                "MATRIX",
                                "MERGE",
                                "PLUGIN"
                            ]
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "ApplicationSet"
                ]
            }
        },
        "/api/v1/applicationset/{identifier}": {
            "get": {
                "summary": "Get applicationset",
                "description": "Returns an applicationset by identifier.",
                "operationId": "ApplicationSetService_Get",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1ApplicationSet"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "UUID for the Application Set.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fetchMode",
                        "description": "Fetch mode for the entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "NOT_SET",
                                "LIVE",
                                "CACHED"
                            ],
                            "default": "NOT_SET"
                        }
                    }
                ],
                "tags": [
                    "ApplicationSet"
                ]
            },
            "delete": {
                "summary": "Delete applicationset by id",
                "description": "Delete applicationset.",
                "operationId": "ApplicationSetService_Delete",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/applicationsApplicationSetResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "UUID for the Application Set.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "ApplicationSet"
                ]
            }
        },
        "/api/v1/applicationset/{identifier}/resource-tree": {
            "get": {
                "summary": "ResourceTree returns resource tree",
                "description": "ResourceTree returns resource tree",
                "operationId": "ApplicationSetService_ResourceTree",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/applicationsApplicationSetTree"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "identifier",
                        "description": "UUID for the Application Set.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query.appsetNamespace",
                        "description": "The application set namespace. Default empty is argocd control plane namespace.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "ApplicationSet"
                ]
            }
        },
        "/api/v1/applicationsets": {
            "post": {
                "summary": "List applicationsets",
                "description": "List applicationsets",
                "operationId": "ApplicationSetService_List",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1ApplicationSetList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1ApplicationSetQuery"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "ApplicationSet"
                ]
            }
        },
        "/api/v1/appprojectsmapping": {
            "get": {
                "summary": "Get Harness-Argo project mappings",
                "description": "GetAppProjectMappingList retrieves Harness-Argo project mappings list.",
                "operationId": "AppProjectMappingService_GetAppProjectMappingList",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1AppProjectMapping"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Project mappings"
                ]
            }
        },
        "/api/v1/certificates": {
            "get": {
                "summary": "List certificates",
                "description": "ListCerts retrieves a list of certificates",
                "operationId": "CertificateService_ListCerts",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1Certificatelist"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Certificates"
                ]
            }
        },
        "/api/v1/clusters": {
            "post": {
                "summary": "List clusters",
                "description": "ListClusters returns a list of clusters.",
                "operationId": "ClusterService_ListClusters",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1Clusterlist"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/servicev1ClusterQuery"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v1/clusters/exists": {
            "get": {
                "summary": "Check if a cluster exists",
                "description": "Exists checks whether a cluster with the given identifier exists.",
                "operationId": "ClusterService_Exists",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "server",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Clusters"
                ]
            }
        },
        "/api/v1/dashboard/activity": {
            "post": {
                "summary": "Get recent deployment statistics",
                "description": "RecentDeployments returns aggregate statistics of recent deployments.",
                "operationId": "DashboardService_RecentDeployments",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1RecentDeploymentsDetailsList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1RecentDeploymentQuery"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Dashboard Aggregates"
                ]
            }
        },
        "/api/v1/dashboard/counts": {
            "get": {
                "summary": "Get recently created app, cluster, repo counts",
                "description": "RecentlyCreatedCounts lists the count of clusters, repositories, and applications created within a specified time period.",
                "operationId": "DashboardService_RecentlyCreatedCounts",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1RecentlyCreatedOverview"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "tags": [
                    "Dashboards"
                ]
            }
        },
        "/api/v1/dashboard/overview": {
            "get": {
                "summary": "Get dashboard overview",
                "description": "GetDashboardOverview provides an overview of the dashboard including key metrics.",
                "operationId": "DashboardService_GetDashboardOverview",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1DashboardOverview"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "disasterRecoveryIdentifier",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Dashboards"
                ]
            }
        },
        "/api/v1/dashboard/topapps": {
            "get": {
                "summary": "List top 5 most deployed apps",
                "description": "TopApplicationPhaseStats lists phase status counts for the top 5 most deployed applications.",
                "operationId": "DashboardService_TopApplicationPhaseStats",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1TopApplicationPhaseStatsList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "tags": [
                    "Dashboard Aggregates"
                ]
            }
        },
        "/api/v1/gpgkeys": {
            "get": {
                "summary": "List all GPG keys",
                "description": "ListGPGKeys retrieves all available GPG public keys.",
                "operationId": "GnuPGKeyService_ListGPGKeys",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1GnuPGPublicKeyList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "gnuPG",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "GPG Keys"
                ]
            }
        },
        "/api/v1/repocreds": {
            "post": {
                "summary": "List repository credentials",
                "description": "ListRepositoryCredentials retrieves a list of all repository credentials.",
                "operationId": "AgentRepositoryCredentialsService_ListRepositoryCredentials",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/servicev1RepositoryCredentialsList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1RepositoryCredentialsQuery"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Repository credentials"
                ]
            }
        },
        "/api/v1/repositories": {
            "get": {
                "summary": "List Repositories by repository credential template",
                "description": "ListRepositoriesByRepositoryCredentialTemplate lists Repositories by repositories credential template",
                "operationId": "RepositoryService_ListRepositoriesByRepositoryCredentialTemplate",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1Repositorylist"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "repositoryCredentialURL",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "tags": [
                    "Repositories"
                ]
            },
            "post": {
                "summary": "List repositories",
                "description": "ListRepositories retrieves a list of all configured repositories.",
                "operationId": "RepositoryService_ListRepositories",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1Repositorylist"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1RepoListReq"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Repositories"
                ]
            }
        },
        "/api/v1/repositories/exists": {
            "get": {
                "summary": "Check if a repository exists",
                "description": "Exists checks whether a repository with the given URL exists.",
                "operationId": "RepositoryService_Exists",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Repositories"
                ]
            }
        },
        "/api/v2/agents/{agentIdentifier}/appprojectsmapping": {
            "post": {
                "summary": "Create Harness-Argo project mapping V2",
                "description": "CreateV2 creates Harness-Argo project mappings.",
                "operationId": "AppProjectMappingService_CreateV2",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1AppProjectMappingV2"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1AppProjectMappingCreateRequestV2"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Project mappings"
                ]
            }
        },
        "/api/v2/agents/{agentIdentifier}/appprojectsmapping/{identifier}": {
            "get": {
                "summary": "Get Harness-Argo project mapping V2",
                "description": "GetAppProjectMappingV2 retrieves Harness-Argo project mapping for the given identifier.",
                "operationId": "AppProjectMappingService_GetAppProjectMappingV2",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1AppProjectMappingV2"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "app project mapping identifier.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "argoProjectName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Project mappings"
                ]
            },
            "delete": {
                "summary": "Delete Harness-Argo project mapping",
                "description": "DeleteV2 deletes Harness-Argo project mappings.",
                "operationId": "AppProjectMappingService_DeleteV2",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1Empty"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "app project mapping identifier.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "argoProjectName",
                        "description": "Argo Project name for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Project mappings"
                ]
            },
            "put": {
                "summary": "Update Harness-Argo project mappings V2",
                "description": "UpdateV2 updates Harness-Argo project mappings.",
                "operationId": "AppProjectMappingService_UpdateV2",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1AppProjectMappingV2"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "app project mapping identifier.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1AppProjectMappingQueryV2"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Project mappings"
                ]
            }
        },
        "/api/v2/agents/{agentIdentifier}/appprojectsmappings": {
            "get": {
                "summary": "Get Harness-Argo project mapping list by agent V2",
                "description": "GetAppProjectMappingsListByAgentV2 retrieves Harness-Argo project mappings list by agent.",
                "operationId": "AppProjectMappingService_GetAppProjectMappingsListByAgentV2",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1AppProjectMappingV2List"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "identifier",
                        "description": "app project mapping identifier.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "argoProjectName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Project mappings"
                ]
            }
        },
        "/api/v2/appprojectsmapping": {
            "get": {
                "summary": "Get Harness-Argo project mappings with pagination and search",
                "description": "ListAppProjectMappings retrieves Harness-Argo project mappings list with pagination and search.",
                "operationId": "AppProjectMappingService_ListAppProjectMappings",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1AppProjectMappingList"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "agentIdentifier",
                        "description": "Agent identifier for entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountIdentifier",
                        "description": "Account Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orgIdentifier",
                        "description": "Organization Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "projectIdentifier",
                        "description": "Project Identifier for the Entity.",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchTerm",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "pageIndex",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "tags": [
                    "Project mappings"
                ]
            }
        },
        "/api/v2/versions/agents/upgrade-available": {
            "get": {
                "description": "Check for version updates.",
                "operationId": "VersionUpgradeService_UpgradeAvailableV2",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1VersionUpgradeResponse"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/gatewayruntimeError"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "existingVersion",
                        "description": "Current Agent Version",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "Agents"
                ]
            }
        }
    },
    "components": {
        "requestBodies": {
            "applicationsApplicationSetCreateRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/applicationsApplicationSetCreateRequest"
                        }
                    }
                },
                "required": true
            },
            "v1Agent": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/v1Agent"
                        }
                    }
                },
                "required": true
            },
            "servicev1ReconcilerFilter": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/servicev1ReconcilerFilter"
                        }
                    }
                },
                "required": true
            },
            "servicev1ApplicationQuery": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/servicev1ApplicationQuery"
                        }
                    }
                },
                "required": true
            },
            "v1Filter": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/v1Filter"
                        }
                    }
                },
                "required": true
            },
            "v1AgentYamlQuery": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/v1AgentYamlQuery"
                        }
                    }
                },
                "required": true
            }
        },
        "schemas": {
            "AgentQueryAgentSortByOptions": {
                "type": "string",
                "enum": [
                    "SORT_BY_NOT_SET",
                    "NAME",
                    "HEALTH_STATUS",
                    "CONNECTIVITY_STATUS",
                    "NAMESPACE",
                    "VERSION"
                ],
                "default": "SORT_BY_NOT_SET"
            },
            "ApplicationQueryApplicationSortByOptions": {
                "type": "string",
                "enum": [
                    "SORT_BY_NOT_SET",
                    "NAME",
                    "GITOPS_AGENT",
                    "SOURCE",
                    "DESTINATION"
                ],
                "default": "SORT_BY_NOT_SET"
            },
            "ApplicationSetGeneratorGetQueryApplicationSetGeneratorType": {
                "type": "string",
                "enum": [
                    "GENERATOR_TYPE_NOT_SET",
                    "LIST",
                    "CLUSTERS",
                    "GIT",
                    "SCM_PROVIDER_GITHUB",
                    "SCM_PROVIDER_GITLAB",
                    "SCM_PROVIDER_GITEA",
                    "SCM_PROVIDER_BITBUCKET",
                    "SCM_PROVIDER_AZURE",
                    "SCM_PROVIDER_BITBUCKET_CLOUD",
                    "SCM_PROVIDER_AWS_CODE_COMMIT",
                    "DUCK_TYPE",
                    "PULL_REQUEST_GITHUB",
                    "PULL_REQUEST_GITLAB",
                    "PULL_REQUEST_GITEA",
                    "PULL_REQUEST_BITBUCKET",
                    "PULL_REQUEST_BITBUCKET_CLOUD",
                    "PULL_REQUEST_AZURE",
                    "MATRIX",
                    "MERGE",
                    "PLUGIN"
                ],
                "default": "GENERATOR_TYPE_NOT_SET"
            },
            "ApplicationSetGetQueryFetchMode": {
                "type": "string",
                "enum": [
                    "NOT_SET",
                    "LIVE",
                    "CACHED"
                ],
                "default": "NOT_SET"
            },
            "ApplicationSetQueryApplicationSetSortByOptions": {
                "type": "string",
                "enum": [
                    "SORT_BY_NOT_SET",
                    "NAME",
                    "GITOPS_AGENT",
                    "SOURCE",
                    "DESTINATION"
                ],
                "default": "SORT_BY_NOT_SET"
            },
            "ClusterQueryClusterSortByOptions": {
                "type": "string",
                "enum": [
                    "SORT_BY_NOT_SET",
                    "NAME",
                    "GITOPS_AGENT",
                    "URL",
                    "VERSION",
                    "CONNECTIVITY_STATUS"
                ],
                "default": "SORT_BY_NOT_SET"
            },
            "OCIRepoTypeResponseOCIRepoTypeEnum": {
                "type": "string",
                "enum": [
                    "UNSET",
                    "AWS",
                    "GOOGLE",
                    "GITHUB",
                    "DOCKERHUB"
                ],
                "default": "UNSET"
            },
            "RepoListReqRepoSortByOptions": {
                "type": "string",
                "enum": [
                    "SORT_BY_NOT_SET",
                    "NAME",
                    "CONNECTIVITY_STATUS",
                    "TYPE",
                    "REPOSITORY"
                ],
                "default": "SORT_BY_NOT_SET"
            },
            "applicationsApplication": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ObjectMeta"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/applicationsApplicationSpec"
                    },
                    "status": {
                        "$ref": "#/components/schemas/applicationsApplicationStatus"
                    },
                    "operation": {
                        "$ref": "#/components/schemas/applicationsOperation"
                    }
                },
                "title": "Application is a definition of Application resource.\n+genclient\n+genclient:noStatus\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+kubebuilder:resource:path=applications,shortName=app;apps\n+kubebuilder:printcolumn:name=\"Sync Status\",type=string,JSONPath=`.status.sync.status`\n+kubebuilder:printcolumn:name=\"Health Status\",type=string,JSONPath=`.status.health.status`\n+kubebuilder:printcolumn:name=\"Revision\",type=string,JSONPath=`.status.sync.revision`,priority=10"
            },
            "applicationsApplicationBulkRefreshRequest": {
                "type": "object",
                "properties": {
                    "applicationTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsBulkOperationAppTarget"
                        },
                        "title": "List of application targets to refresh"
                    },
                    "refresh": {
                        "type": "string",
                        "title": "forces application reconciliation if set to hard"
                    }
                },
                "title": "ApplicationBulkRefreshRequest for bulk refreshing multiple applications"
            },
            "applicationsApplicationBulkRefreshResponse": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationRefreshResponse"
                        }
                    }
                }
            },
            "applicationsApplicationBulkSyncRequest": {
                "type": "object",
                "properties": {
                    "applicationTargets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsBulkOperationAppTarget"
                        },
                        "title": "List of application targets to sync"
                    },
                    "dryRun": {
                        "type": "boolean",
                        "title": "Common sync settings for all applications"
                    },
                    "prune": {
                        "type": "boolean"
                    },
                    "strategy": {
                        "$ref": "#/components/schemas/applicationsSyncStrategy"
                    },
                    "retryStrategy": {
                        "$ref": "#/components/schemas/applicationsRetryStrategy"
                    },
                    "syncOptions": {
                        "$ref": "#/components/schemas/applicationsSyncOptions"
                    },
                    "syncTrackingIds": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "a map of applicationName to syncTrackingId for tracking syncs"
                    }
                },
                "title": "ApplicationBulkSyncRequest for bulk synchronization of multiple applications"
            },
            "applicationsApplicationBulkSyncResponse": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationSyncResponse"
                        }
                    }
                }
            },
            "applicationsApplicationCondition": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Type is an application condition type"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message contains human-readable message indicating details about condition"
                    },
                    "lastTransitionTime": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "lastTransitionTimeTs": {
                        "type": "string",
                        "format": "date-time",
                        "title": "LastTransitionTimeTs is the google timestamp variation of LastTransitionTime"
                    }
                },
                "title": "ApplicationCondition contains details about an application condition, which is usally an error or warning"
            },
            "applicationsApplicationCreateRequest": {
                "type": "object",
                "properties": {
                    "application": {
                        "$ref": "#/components/schemas/applicationsApplication"
                    },
                    "upsert": {
                        "type": "boolean"
                    },
                    "validate": {
                        "type": "boolean"
                    },
                    "project": {
                        "type": "string"
                    },
                    "isPLG": {
                        "type": "boolean"
                    }
                }
            },
            "applicationsApplicationDeleteRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "cascade": {
                        "type": "boolean"
                    },
                    "propagationPolicy": {
                        "type": "string"
                    },
                    "appNamespace": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    }
                }
            },
            "applicationsApplicationDestination": {
                "type": "object",
                "properties": {
                    "server": {
                        "type": "string",
                        "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                    },
                    "namespace": {
                        "type": "string",
                        "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                    }
                },
                "title": "ApplicationDestination holds information about the application's destination"
            },
            "applicationsApplicationList": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ListMeta"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplication"
                        }
                    }
                },
                "title": "ApplicationList is list of Application resources\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object"
            },
            "applicationsApplicationManifestQuery": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "revision": {
                        "type": "string"
                    },
                    "appNamespace": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "sourcePositions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    "revisions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "title": "ManifestQuery is a query for manifest resources"
            },
            "applicationsApplicationMatchExpression": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "operator": {
                        "type": "string"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "applicationsApplicationPatchRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "patch": {
                        "type": "string"
                    },
                    "patchType": {
                        "type": "string"
                    },
                    "appNamespace": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    }
                },
                "title": "ApplicationPatchRequest is a request to patch an application"
            },
            "applicationsApplicationPodLogsQuery": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "podName": {
                        "type": "string"
                    },
                    "container": {
                        "type": "string"
                    },
                    "sinceSeconds": {
                        "type": "string",
                        "format": "int64"
                    },
                    "sinceTime": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "tailLines": {
                        "type": "string",
                        "format": "int64"
                    },
                    "follow": {
                        "type": "boolean"
                    },
                    "untilTime": {
                        "type": "string"
                    },
                    "filter": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string"
                    },
                    "resourceName": {
                        "type": "string"
                    },
                    "previous": {
                        "type": "boolean"
                    },
                    "appNamespace": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    }
                }
            },
            "applicationsApplicationPreservedFields": {
                "type": "object",
                "properties": {
                    "annotations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "applicationsApplicationQuery": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "the application's name"
                    },
                    "refresh": {
                        "type": "string",
                        "description": "set to \"normal\" OR \"hard\" if an application refresh is required before fetching.\n\nnormal refresh only if source has changed(commit, helm chart version, etc.)\n\nhard refresh will invalidate all generated manifest caches and force regeneration."
                    },
                    "project": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "the project names to restrict returned list applications"
                    },
                    "resourceVersion": {
                        "type": "string",
                        "description": "when specified with a watch call, shows changes that occur after that particular version of a resource."
                    },
                    "selector": {
                        "type": "string",
                        "title": "the selector to to restrict returned list to applications only with matched labels"
                    },
                    "repo": {
                        "type": "string",
                        "title": "the repoURL to restrict returned list applications"
                    },
                    "appNamespace": {
                        "type": "string"
                    }
                },
                "title": "ApplicationQuery is a query for application resources"
            },
            "applicationsApplicationRefreshResponse": {
                "type": "object",
                "properties": {
                    "applicationName": {
                        "type": "string"
                    },
                    "agentIdentifier": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "error": {
                        "type": "string"
                    },
                    "applicationResponse": {
                        "$ref": "#/components/schemas/applicationsApplication"
                    }
                }
            },
            "applicationsApplicationResourceDeleteRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "resourceName": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "force": {
                        "type": "boolean"
                    },
                    "orphan": {
                        "type": "boolean"
                    },
                    "appNamespace": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    }
                }
            },
            "applicationsApplicationResourceEventsQuery": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "resourceNamespace": {
                        "type": "string"
                    },
                    "resourceName": {
                        "type": "string"
                    },
                    "resourceUID": {
                        "type": "string"
                    },
                    "appNamespace": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    }
                },
                "title": "ApplicationEventsQuery is a query for application resource events"
            },
            "applicationsApplicationResourcePatchRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "resourceName": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "patch": {
                        "type": "string"
                    },
                    "patchType": {
                        "type": "string"
                    },
                    "appNamespace": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    }
                }
            },
            "applicationsApplicationResourceRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "resourceName": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "appNamespace": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    }
                }
            },
            "applicationsApplicationResourceResponse": {
                "type": "object",
                "properties": {
                    "manifest": {
                        "type": "string"
                    }
                }
            },
            "applicationsApplicationResponse": {
                "type": "object"
            },
            "applicationsApplicationRollbackRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "format": "int64"
                    },
                    "dryRun": {
                        "type": "boolean"
                    },
                    "prune": {
                        "type": "boolean"
                    },
                    "appNamespace": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    }
                }
            },
            "applicationsApplicationSet": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ObjectMeta"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/applicationsApplicationSetSpec"
                    },
                    "status": {
                        "$ref": "#/components/schemas/applicationsApplicationSetStatus"
                    }
                }
            },
            "applicationsApplicationSetApplicationStatus": {
                "type": "object",
                "properties": {
                    "application": {
                        "type": "string",
                        "title": "Application contains the name of the Application resource"
                    },
                    "lastTransitionTime": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message contains human-readable message indicating details about the status"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status contains the AppSet's perceived status of the managed Application resource: (Waiting, Pending, Progressing, Healthy)"
                    },
                    "step": {
                        "type": "string",
                        "title": "Step tracks which step this Application should be updated in"
                    },
                    "targetrevisions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "TargetRevision tracks the desired revisions the Application should be synced to."
                    }
                },
                "title": "ApplicationSetApplicationStatus contains details about each Application managed by the ApplicationSet"
            },
            "applicationsApplicationSetCondition": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Type is an applicationset condition type"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message contains human-readable message indicating details about condition"
                    },
                    "lastTransitionTime": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "status": {
                        "type": "string",
                        "title": "True/False/Unknown"
                    },
                    "reason": {
                        "type": "string",
                        "title": "Single word camelcase representing the reason for the status eg ErrorOccurred"
                    }
                },
                "title": "ApplicationSetCondition contains details about an applicationset condition, which is usually an error or warning"
            },
            "applicationsApplicationSetCreateRequest": {
                "type": "object",
                "properties": {
                    "applicationset": {
                        "$ref": "#/components/schemas/applicationsApplicationSet"
                    },
                    "upsert": {
                        "type": "boolean"
                    },
                    "dryRun": {
                        "type": "boolean"
                    },
                    "yaml": {
                        "type": "string",
                        "format": "byte"
                    }
                }
            },
            "applicationsApplicationSetGenerateRequest": {
                "type": "object",
                "properties": {
                    "applicationset": {
                        "$ref": "#/components/schemas/applicationsApplicationSet"
                    },
                    "yaml": {
                        "type": "string",
                        "format": "byte",
                        "title": "helper field for keeping string representation of marshalled ApplicationSetq"
                    }
                },
                "title": "ApplicationSetGenerateRequest  is a query for applicationset generate resources"
            },
            "applicationsApplicationSetGenerateResponse": {
                "type": "object",
                "properties": {
                    "applications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplication"
                        }
                    }
                },
                "title": "ApplicationSetGenerateResponse is a response for applicationset generate request"
            },
            "applicationsApplicationSetGenerator": {
                "type": "object",
                "properties": {
                    "list": {
                        "$ref": "#/components/schemas/applicationsListGenerator"
                    },
                    "clusters": {
                        "$ref": "#/components/schemas/applicationsClusterGenerator"
                    },
                    "git": {
                        "$ref": "#/components/schemas/applicationsGitGenerator"
                    },
                    "scmProvider": {
                        "$ref": "#/components/schemas/applicationsSCMProviderGenerator"
                    },
                    "clusterDecisionResource": {
                        "$ref": "#/components/schemas/applicationsDuckTypeGenerator"
                    },
                    "pullRequest": {
                        "$ref": "#/components/schemas/applicationsPullRequestGenerator"
                    },
                    "matrix": {
                        "$ref": "#/components/schemas/applicationsMatrixGenerator"
                    },
                    "merge": {
                        "$ref": "#/components/schemas/applicationsMergeGenerator"
                    },
                    "selector": {
                        "$ref": "#/components/schemas/v1LabelSelector"
                    },
                    "plugin": {
                        "$ref": "#/components/schemas/applicationsPluginGenerator"
                    }
                },
                "description": "ApplicationSetGenerator represents a generator at the top level of an ApplicationSet."
            },
            "applicationsApplicationSetNestedGenerator": {
                "type": "object",
                "properties": {
                    "list": {
                        "$ref": "#/components/schemas/applicationsListGenerator"
                    },
                    "clusters": {
                        "$ref": "#/components/schemas/applicationsClusterGenerator"
                    },
                    "git": {
                        "$ref": "#/components/schemas/applicationsGitGenerator"
                    },
                    "scmProvider": {
                        "$ref": "#/components/schemas/applicationsSCMProviderGenerator"
                    },
                    "clusterDecisionResource": {
                        "$ref": "#/components/schemas/applicationsDuckTypeGenerator"
                    },
                    "pullRequest": {
                        "$ref": "#/components/schemas/applicationsPullRequestGenerator"
                    },
                    "matrix": {
                        "$ref": "#/components/schemas/v1JSON"
                    },
                    "merge": {
                        "$ref": "#/components/schemas/v1JSON"
                    },
                    "selector": {
                        "$ref": "#/components/schemas/v1LabelSelector"
                    },
                    "plugin": {
                        "$ref": "#/components/schemas/applicationsPluginGenerator"
                    }
                },
                "description": "ApplicationSetNestedGenerator represents a generator nested within a combination-type generator (MatrixGenerator or\nMergeGenerator)."
            },
            "applicationsApplicationSetResourceIgnoreDifferences": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name is the name of the application to ignore differences for. If not specified, the rule applies to all applications."
                    },
                    "jsonPointers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "JSONPointers is a list of JSON pointers to fields to ignore differences for."
                    },
                    "jqPathExpressions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "JQPathExpressions is a list of JQ path expressions to fields to ignore differences for."
                    }
                },
                "description": "ApplicationSetResourceIgnoreDifferences configures how the ApplicationSet controller will ignore differences in live\napplications when applying changes from generated applications."
            },
            "applicationsApplicationSetResponse": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "string"
                    },
                    "applicationset": {
                        "$ref": "#/components/schemas/applicationsApplicationSet"
                    }
                }
            },
            "applicationsApplicationSetRolloutStep": {
                "type": "object",
                "properties": {
                    "matchExpressions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationMatchExpression"
                        }
                    },
                    "maxUpdate": {
                        "$ref": "#/components/schemas/intstrIntOrString"
                    }
                }
            },
            "applicationsApplicationSetRolloutStrategy": {
                "type": "object",
                "properties": {
                    "steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationSetRolloutStep"
                        }
                    }
                }
            },
            "applicationsApplicationSetSpec": {
                "type": "object",
                "properties": {
                    "goTemplate": {
                        "type": "boolean"
                    },
                    "generators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationSetGenerator"
                        }
                    },
                    "template": {
                        "$ref": "#/components/schemas/applicationsApplicationSetTemplate"
                    },
                    "syncPolicy": {
                        "$ref": "#/components/schemas/applicationsApplicationSetSyncPolicy"
                    },
                    "strategy": {
                        "$ref": "#/components/schemas/applicationsApplicationSetStrategy"
                    },
                    "preservedFields": {
                        "$ref": "#/components/schemas/applicationsApplicationPreservedFields"
                    },
                    "goTemplateOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "applyNestedSelectors": {
                        "type": "boolean",
                        "title": "ApplyNestedSelectors enables selectors defined within the generators of two level-nested matrix or merge generators"
                    },
                    "ignoreApplicationDifferences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationSetResourceIgnoreDifferences"
                        }
                    },
                    "templatePatch": {
                        "type": "string"
                    }
                },
                "description": "ApplicationSetSpec represents a class of application set state."
            },
            "applicationsApplicationSetStatus": {
                "type": "object",
                "properties": {
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationSetCondition"
                        },
                        "title": "INSERT ADDITIONAL STATUS FIELD - define observed state of cluster\nImportant: Run \"make\" to regenerate code after modifying this file"
                    },
                    "applicationStatus": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationSetApplicationStatus"
                        }
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsResourceStatus"
                        },
                        "description": "Resources is a list of Applications resources managed by this application set."
                    }
                },
                "title": "ApplicationSetStatus defines the observed state of ApplicationSet"
            },
            "applicationsApplicationSetStrategy": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "rollingSync": {
                        "$ref": "#/components/schemas/applicationsApplicationSetRolloutStrategy"
                    }
                },
                "description": "ApplicationSetStrategy configures how generated Applications are updated in sequence."
            },
            "applicationsApplicationSetSyncPolicy": {
                "type": "object",
                "properties": {
                    "preserveResourcesOnDeletion": {
                        "type": "boolean",
                        "description": "PreserveResourcesOnDeletion will preserve resources on deletion. If PreserveResourcesOnDeletion is set to true, these Applications will not be deleted."
                    },
                    "applicationsSync": {
                        "type": "string",
                        "title": "ApplicationsSync represents the policy applied on the generated applications. Possible values are create-only, create-update, create-delete, sync\n+kubebuilder:validation:Optional\n+kubebuilder:validation:Enum=create-only;create-update;create-delete;sync"
                    }
                },
                "description": "ApplicationSetSyncPolicy configures how generated Applications will relate to their\nApplicationSet."
            },
            "applicationsApplicationSetTemplate": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/applicationsApplicationSetTemplateMeta"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/applicationsApplicationSpec"
                    }
                },
                "title": "ApplicationSetTemplate represents argocd ApplicationSpec"
            },
            "applicationsApplicationSetTemplateMeta": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "finalizers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "title": "ApplicationSetTemplateMeta represents the Argo CD application fields that may\nbe used for Applications generated from the ApplicationSet (based on metav1.ObjectMeta)"
            },
            "applicationsApplicationSetTree": {
                "type": "object",
                "properties": {
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsResourceNode"
                        },
                        "title": "Nodes contains list of nodes which are directly managed by the applicationset"
                    }
                },
                "title": "ApplicationSetTree holds nodes which belongs to the application\nUsed to build a tree of an ApplicationSet and its children"
            },
            "applicationsApplicationSetTreeQuery": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "appsetNamespace": {
                        "type": "string",
                        "title": "The application set namespace. Default empty is argocd control plane namespace"
                    }
                }
            },
            "applicationsApplicationSource": {
                "type": "object",
                "properties": {
                    "repoURL": {
                        "type": "string",
                        "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
                    },
                    "path": {
                        "type": "string",
                        "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git."
                    },
                    "targetRevision": {
                        "type": "string",
                        "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version."
                    },
                    "helm": {
                        "$ref": "#/components/schemas/applicationsApplicationSourceHelm"
                    },
                    "kustomize": {
                        "$ref": "#/components/schemas/applicationsApplicationSourceKustomize"
                    },
                    "ksonnet": {
                        "$ref": "#/components/schemas/applicationsApplicationSourceKsonnet"
                    },
                    "directory": {
                        "$ref": "#/components/schemas/applicationsApplicationSourceDirectory"
                    },
                    "plugin": {
                        "$ref": "#/components/schemas/applicationsApplicationSourcePlugin"
                    },
                    "chart": {
                        "type": "string",
                        "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo."
                    },
                    "ref": {
                        "type": "string",
                        "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name is used to refer to a source and is displayed in the UI. It is used in multi-source Applications."
                    }
                },
                "title": "ApplicationSource contains all information about the source of an application"
            },
            "applicationsApplicationSourceDirectory": {
                "type": "object",
                "properties": {
                    "recurse": {
                        "type": "boolean",
                        "title": "Recurse specifies whether to scan a directory recursively for manifests"
                    },
                    "jsonnet": {
                        "$ref": "#/components/schemas/applicationsApplicationSourceJsonnet"
                    },
                    "exclude": {
                        "type": "string",
                        "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
                    },
                    "include": {
                        "type": "string",
                        "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
                    }
                },
                "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet"
            },
            "applicationsApplicationSourceHelm": {
                "type": "object",
                "properties": {
                    "valueFiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "ValuesFiles is a list of Helm value files to use when generating a template"
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsHelmParameter"
                        },
                        "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation"
                    },
                    "releaseName": {
                        "type": "string",
                        "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
                    },
                    "values": {
                        "type": "string",
                        "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
                    },
                    "fileParameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsHelmFileParameter"
                        },
                        "title": "FileParameters are file parameters to the helm template"
                    },
                    "version": {
                        "type": "string",
                        "title": "Version is the Helm version to use for templating (either \"2\" or \"3\")"
                    },
                    "passCredentials": {
                        "type": "boolean",
                        "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
                    },
                    "ignoreMissingValueFiles": {
                        "type": "boolean",
                        "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
                    },
                    "skipCrds": {
                        "type": "boolean",
                        "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
                    },
                    "valuesObject": {
                        "type": "object",
                        "title": "ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.\n+kubebuilder:pruning:PreserveUnknownFields"
                    },
                    "namespace": {
                        "type": "string",
                        "description": "Namespace is an optional namespace to template with. If left empty, defaults to the app's destination namespace."
                    },
                    "kubeVersion": {
                        "type": "string",
                        "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster."
                    },
                    "apiVersions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind."
                    },
                    "skipTests": {
                        "type": "boolean",
                        "description": "SkipTests skips test manifest installation step (Helm's --skip-tests)."
                    },
                    "skipSchemaValidation": {
                        "type": "boolean",
                        "title": "SkipSchemaValidation skips JSON schema validation (Helm's --skip-schema-validation)"
                    }
                },
                "title": "ApplicationSourceHelm holds helm specific options"
            },
            "applicationsApplicationSourceJsonnet": {
                "type": "object",
                "properties": {
                    "extVars": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsJsonnetVar"
                        },
                        "title": "ExtVars is a list of Jsonnet External Variables"
                    },
                    "tlas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsJsonnetVar"
                        },
                        "title": "TLAS is a list of Jsonnet Top-level Arguments"
                    },
                    "libs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Additional library search dirs"
                    }
                },
                "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet"
            },
            "applicationsApplicationSourceKsonnet": {
                "type": "object",
                "properties": {
                    "environment": {
                        "type": "string",
                        "title": "Environment is a ksonnet application environment name"
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsKsonnetParameter"
                        },
                        "title": "Parameters are a list of ksonnet component parameter override values"
                    }
                },
                "title": "ApplicationSourceKsonnet holds ksonnet specific options"
            },
            "applicationsApplicationSourceKustomize": {
                "type": "object",
                "properties": {
                    "namePrefix": {
                        "type": "string",
                        "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
                    },
                    "nameSuffix": {
                        "type": "string",
                        "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Images is a list of Kustomize image override specifications"
                    },
                    "commonLabels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "CommonLabels is a list of additional labels to add to rendered manifests"
                    },
                    "version": {
                        "type": "string",
                        "title": "Version controls which version of Kustomize to use for rendering manifests"
                    },
                    "commonAnnotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests"
                    },
                    "forceCommonLabels": {
                        "type": "boolean",
                        "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
                    },
                    "forceCommonAnnotations": {
                        "type": "boolean",
                        "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
                    },
                    "namespace": {
                        "type": "string",
                        "title": "Namespace sets the namespace that Kustomize adds to all resources"
                    },
                    "replicas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsKustomizeReplicas"
                        },
                        "title": "Replicas is a list of Kustomize Replicas override specifications"
                    },
                    "patches": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsKustomizePatch"
                        },
                        "title": "Patches is a list of Kustomize patches"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Components specifies a list of kustomize components to add to the kustomization before building"
                    },
                    "labelWithoutSelector": {
                        "type": "boolean",
                        "title": "LabelWithoutSelector specifies whether to apply common labels to resource selectors or not"
                    },
                    "kubeVersion": {
                        "type": "string",
                        "description": "KubeVersion specifies the Kubernetes API version to pass to Helm when templating manifests. By default, Argo CD\nuses the Kubernetes version of the target cluster."
                    },
                    "apiVersions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "APIVersions specifies the Kubernetes resource API versions to pass to Helm when templating manifests. By default,\nArgo CD uses the API versions of the target cluster. The format is [group/]version/kind."
                    }
                },
                "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize"
            },
            "applicationsApplicationSourcePlugin": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "env": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsEnvEntry"
                        }
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationSourcePluginParameter"
                        }
                    }
                },
                "title": "ApplicationSourcePlugin holds options specific to config management plugins"
            },
            "applicationsApplicationSourcePluginParameter": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name is the name identifying a parameter."
                    },
                    "string": {
                        "type": "string",
                        "description": "String_ is the value of a string type parameter."
                    },
                    "map": {
                        "$ref": "#/components/schemas/applicationsOptionalMap"
                    },
                    "array": {
                        "$ref": "#/components/schemas/applicationsOptionalArray"
                    }
                }
            },
            "applicationsApplicationSpec": {
                "type": "object",
                "properties": {
                    "source": {
                        "$ref": "#/components/schemas/applicationsApplicationSource"
                    },
                    "destination": {
                        "$ref": "#/components/schemas/applicationsApplicationDestination"
                    },
                    "project": {
                        "type": "string",
                        "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project."
                    },
                    "syncPolicy": {
                        "$ref": "#/components/schemas/applicationsSyncPolicy"
                    },
                    "ignoreDifferences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsResourceIgnoreDifferences"
                        },
                        "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison"
                    },
                    "info": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsInfo"
                        },
                        "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application"
                    },
                    "revisionHistoryLimit": {
                        "type": "string",
                        "format": "int64",
                        "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10."
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationSource"
                        },
                        "title": "Sources is a reference to the location of the application's manifests or chart"
                    }
                },
                "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision."
            },
            "applicationsApplicationStatus": {
                "type": "object",
                "properties": {
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsResourceStatus"
                        },
                        "title": "Resources is a list of Kubernetes resources managed by this application"
                    },
                    "sync": {
                        "$ref": "#/components/schemas/applicationsSyncStatus"
                    },
                    "health": {
                        "$ref": "#/components/schemas/applicationsHealthStatus"
                    },
                    "history": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsRevisionHistory"
                        },
                        "title": "History contains information about the application's sync history"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationCondition"
                        },
                        "title": "Conditions is a list of currently observed application conditions"
                    },
                    "reconciledAt": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "operationState": {
                        "$ref": "#/components/schemas/applicationsOperationState"
                    },
                    "observedAt": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "sourceType": {
                        "type": "string",
                        "title": "SourceType specifies the type of this application"
                    },
                    "summary": {
                        "$ref": "#/components/schemas/applicationsApplicationSummary"
                    },
                    "resourceHealthSource": {
                        "type": "string",
                        "title": "ResourceHealthSource indicates where the resource health status is stored: inline if not set or appTree"
                    },
                    "sourceTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "SourceTypes specifies the type of the sources included in the application"
                    },
                    "controllerNamespace": {
                        "type": "string",
                        "title": "ControllerNamespace indicates the namespace in which the application controller is located"
                    }
                },
                "title": "ApplicationStatus contains status information for the application"
            },
            "applicationsApplicationSummary": {
                "type": "object",
                "properties": {
                    "externalURLs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "ExternalURLs holds all external URLs of application child resources."
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Images holds all images of application child resources."
                    }
                },
                "title": "ApplicationSummary contains information about URLs and container images used by an application"
            },
            "applicationsApplicationSyncRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "revision": {
                        "type": "string"
                    },
                    "dryRun": {
                        "type": "boolean"
                    },
                    "prune": {
                        "type": "boolean"
                    },
                    "strategy": {
                        "$ref": "#/components/schemas/applicationsSyncStrategy"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsSyncOperationResource"
                        }
                    },
                    "manifests": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "infos": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsInfo"
                        }
                    },
                    "retryStrategy": {
                        "$ref": "#/components/schemas/applicationsRetryStrategy"
                    },
                    "syncOptions": {
                        "$ref": "#/components/schemas/applicationsSyncOptions"
                    },
                    "appNamespace": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    },
                    "sourcePositions": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "int64"
                        }
                    },
                    "revisions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "title": "ApplicationSyncRequest is a request to apply the config state to live state"
            },
            "applicationsApplicationSyncResponse": {
                "type": "object",
                "properties": {
                    "applicationName": {
                        "type": "string"
                    },
                    "agentIdentifier": {
                        "type": "string"
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "error": {
                        "type": "string"
                    },
                    "applicationResponse": {
                        "$ref": "#/components/schemas/applicationsApplication"
                    }
                }
            },
            "applicationsApplicationSyncWindow": {
                "type": "object",
                "properties": {
                    "kind": {
                        "type": "string"
                    },
                    "schedule": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "string"
                    },
                    "manualSync": {
                        "type": "boolean"
                    }
                }
            },
            "applicationsApplicationSyncWindowsQuery": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "appNamespace": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    }
                }
            },
            "applicationsApplicationSyncWindowsResponse": {
                "type": "object",
                "properties": {
                    "activeWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationSyncWindow"
                        }
                    },
                    "assignedWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationSyncWindow"
                        }
                    },
                    "canSync": {
                        "type": "boolean"
                    }
                }
            },
            "applicationsApplicationTree": {
                "type": "object",
                "properties": {
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsResourceNode"
                        },
                        "description": "Nodes contains list of nodes which either directly managed by the application and children of directly managed nodes."
                    },
                    "orphanedNodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsResourceNode"
                        },
                        "description": "OrphanedNodes contains if or orphaned nodes: nodes which are not managed by the app but in the same namespace. List is populated only if orphaned resources enabled in app project."
                    },
                    "hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsHostInfo"
                        },
                        "title": "Hosts holds list of Kubernetes nodes that run application related pods"
                    }
                },
                "title": "ApplicationTree holds nodes which belongs to the application\nTODO: describe purpose of this type"
            },
            "applicationsApplicationUpdateRequest": {
                "type": "object",
                "properties": {
                    "application": {
                        "$ref": "#/components/schemas/applicationsApplication"
                    },
                    "validate": {
                        "type": "boolean"
                    },
                    "project": {
                        "type": "string"
                    }
                }
            },
            "applicationsApplicationUpdateSpecRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/applicationsApplicationSpec"
                    },
                    "validate": {
                        "type": "boolean"
                    },
                    "appNamespace": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    }
                },
                "title": "ApplicationUpdateSpecRequest is a request to update application spec"
            },
            "applicationsApplicationWatchEvent": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "application": {
                        "$ref": "#/components/schemas/applicationsApplication"
                    }
                },
                "description": "ApplicationWatchEvent contains information about application change."
            },
            "applicationsBackoff": {
                "type": "object",
                "properties": {
                    "duration": {
                        "type": "string",
                        "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
                    },
                    "factor": {
                        "type": "string",
                        "format": "int64",
                        "title": "Factor is a factor to multiply the base duration after each failed retry"
                    },
                    "maxDuration": {
                        "type": "string",
                        "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
                    }
                },
                "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs"
            },
            "applicationsBasicAuthBitbucketServer": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "title": "Username for Basic auth"
                    },
                    "passwordRef": {
                        "$ref": "#/components/schemas/applicationsSecretRef"
                    }
                },
                "description": "BasicAuthBitbucketServer defines the username/(password or personal access token) for Basic auth."
            },
            "applicationsBearerTokenBitbucket": {
                "type": "object",
                "properties": {
                    "tokenRef": {
                        "$ref": "#/components/schemas/applicationsSecretRef"
                    }
                },
                "description": "BearerTokenBitbucket defines the Bearer token for BitBucket AppToken auth."
            },
            "applicationsBearerTokenBitbucketCloud": {
                "type": "object",
                "properties": {
                    "tokenRef": {
                        "$ref": "#/components/schemas/applicationsSecretRef"
                    }
                },
                "description": "BearerTokenBitbucketCloud defines the Bearer token for BitBucket AppToken auth."
            },
            "applicationsBulkOperationAppTarget": {
                "type": "object",
                "properties": {
                    "applicationName": {
                        "type": "string"
                    },
                    "agentIdentifier": {
                        "type": "string"
                    }
                },
                "title": "BulkOperationAppTarget uniquely identifies an application by name and agent in a project"
            },
            "applicationsClusterGenerator": {
                "type": "object",
                "properties": {
                    "selector": {
                        "$ref": "#/components/schemas/v1LabelSelector"
                    },
                    "template": {
                        "$ref": "#/components/schemas/applicationsApplicationSetTemplate"
                    },
                    "values": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Values contains key/value pairs which are passed directly as parameters to the template"
                    },
                    "flatList": {
                        "type": "boolean",
                        "title": "returns the clusters a single 'clusters' value in the template"
                    }
                },
                "description": "ClusterGenerator defines a generator to match against clusters registered with ArgoCD."
            },
            "applicationsComparedTo": {
                "type": "object",
                "properties": {
                    "source": {
                        "$ref": "#/components/schemas/applicationsApplicationSource"
                    },
                    "destination": {
                        "$ref": "#/components/schemas/applicationsApplicationDestination"
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationSource"
                        },
                        "title": "Sources is a reference to the application's multiple sources used for comparison"
                    },
                    "ignoreDifferences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsResourceIgnoreDifferences"
                        },
                        "title": "IgnoreDifferences is a reference to the application's ignored differences used for comparison"
                    }
                },
                "title": "ComparedTo contains application source and target which was used for resources comparison"
            },
            "applicationsConfigMapKeyRef": {
                "type": "object",
                "properties": {
                    "configMapName": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "description": "Utility struct for a reference to a configmap key."
            },
            "applicationsDuckTypeGenerator": {
                "type": "object",
                "properties": {
                    "configMapRef": {
                        "type": "string",
                        "title": "ConfigMapRef is a ConfigMap with the duck type definitions needed to retrieve the data\n             this includes apiVersion(group/version), kind, matchKey and validation settings\nName is the resource name of the kind, group and version, defined in the ConfigMapRef\nRequeueAfterSeconds is how long before the duckType will be rechecked for a change"
                    },
                    "name": {
                        "type": "string"
                    },
                    "requeueAfterSeconds": {
                        "type": "string",
                        "format": "int64"
                    },
                    "labelSelector": {
                        "$ref": "#/components/schemas/v1LabelSelector"
                    },
                    "template": {
                        "$ref": "#/components/schemas/applicationsApplicationSetTemplate"
                    },
                    "values": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Values contains key/value pairs which are passed directly as parameters to the template"
                    }
                },
                "description": "DuckType defines a generator to match against clusters registered with ArgoCD."
            },
            "applicationsEnvEntry": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name is the name of the variable, usually expressed in uppercase"
                    },
                    "value": {
                        "type": "string",
                        "title": "Value is the value of the variable"
                    }
                },
                "title": "EnvEntry represents an entry in the application's environment"
            },
            "applicationsEvent": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ObjectMeta"
                    },
                    "involvedObject": {
                        "$ref": "#/components/schemas/applicationsObjectReference"
                    },
                    "reason": {
                        "type": "string",
                        "title": "This should be a short, machine understandable string that gives the reason\nfor the transition into the object's current status.\nTODO: provide exact specification for format.\n+"
                    },
                    "message": {
                        "type": "string",
                        "title": "A human-readable description of the status of this operation.\nTODO: decide on maximum length.\n+"
                    },
                    "source": {
                        "$ref": "#/components/schemas/applicationsEventSource"
                    },
                    "firstTimestamp": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "lastTimestamp": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The number of times this event has occurred.\n+"
                    },
                    "type": {
                        "type": "string",
                        "title": "Type of this event (Normal, Warning), new types could be added in the future\n+"
                    },
                    "eventTime": {
                        "$ref": "#/components/schemas/v1MicroTime"
                    },
                    "series": {
                        "$ref": "#/components/schemas/applicationsEventSeries"
                    },
                    "action": {
                        "type": "string",
                        "title": "What action was taken/failed regarding to the Regarding object.\n+"
                    },
                    "related": {
                        "$ref": "#/components/schemas/applicationsObjectReference"
                    },
                    "reportingComponent": {
                        "type": "string",
                        "title": "Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.\n+"
                    },
                    "reportingInstance": {
                        "type": "string",
                        "title": "ID of the controller instance, e.g. `kubelet-xyzf`.\n+"
                    },
                    "firstTimestampTs": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastTimestampTs": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "applicationsEventList": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ListMeta"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsEvent"
                        },
                        "title": "List of events"
                    }
                },
                "description": "EventList is a list of events."
            },
            "applicationsEventSeries": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Number of occurrences in this series up to the last heartbeat time"
                    },
                    "lastObservedTime": {
                        "$ref": "#/components/schemas/v1MicroTime"
                    }
                },
                "description": "EventSeries contain information on series of events, i.e. thing that was/is happening\ncontinuously for some time."
            },
            "applicationsEventSource": {
                "type": "object",
                "properties": {
                    "component": {
                        "type": "string",
                        "title": "Component from which the event is generated.\n+"
                    },
                    "host": {
                        "type": "string",
                        "title": "Node name on which the event is generated.\n+"
                    }
                }
            },
            "applicationsGitDirectoryGeneratorItem": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "exclude": {
                        "type": "boolean"
                    }
                }
            },
            "applicationsGitFileGeneratorItem": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    }
                }
            },
            "applicationsGitGenerator": {
                "type": "object",
                "properties": {
                    "repoURL": {
                        "type": "string"
                    },
                    "directories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsGitDirectoryGeneratorItem"
                        }
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsGitFileGeneratorItem"
                        }
                    },
                    "revision": {
                        "type": "string"
                    },
                    "requeueAfterSeconds": {
                        "type": "string",
                        "format": "int64"
                    },
                    "template": {
                        "$ref": "#/components/schemas/applicationsApplicationSetTemplate"
                    },
                    "pathParamPrefix": {
                        "type": "string"
                    },
                    "values": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Values contains key/value pairs which are passed directly as parameters to the template"
                    }
                }
            },
            "applicationsHealthStatus": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status holds the status code of the application or resource"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message is a human-readable informational message describing the health status"
                    },
                    "lastTransitionTime": {
                        "$ref": "#/components/schemas/v1Time"
                    }
                },
                "title": "HealthStatus contains information about the currently observed health state of an application or resource"
            },
            "applicationsHelmFileParameter": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name is the name of the Helm parameter"
                    },
                    "path": {
                        "type": "string",
                        "title": "Path is the path to the file containing the values for the Helm parameter"
                    }
                },
                "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation"
            },
            "applicationsHelmParameter": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name is the name of the Helm parameter"
                    },
                    "value": {
                        "type": "string",
                        "title": "Value is the value for the Helm parameter"
                    },
                    "forceString": {
                        "type": "boolean",
                        "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
                    }
                },
                "title": "HelmParameter is a parameter that's passed to helm template during manifest generation"
            },
            "applicationsHostInfo": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "resourcesInfo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsHostResourceInfo"
                        }
                    },
                    "systemInfo": {
                        "$ref": "#/components/schemas/v1NodeSystemInfo"
                    }
                },
                "title": "HostInfo holds host name and resources metrics\nTODO: describe purpose of this type\nTODO: describe members of this type"
            },
            "applicationsHostResourceInfo": {
                "type": "object",
                "properties": {
                    "resourceName": {
                        "type": "string"
                    },
                    "requestedByApp": {
                        "type": "string",
                        "format": "int64"
                    },
                    "requestedByNeighbors": {
                        "type": "string",
                        "format": "int64"
                    },
                    "capacity": {
                        "type": "string",
                        "format": "int64"
                    }
                },
                "title": "TODO: describe this type"
            },
            "applicationsInfo": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "applicationsInfoItem": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name is a human readable title for this piece of information."
                    },
                    "value": {
                        "type": "string",
                        "description": "Value is human readable content."
                    }
                },
                "title": "InfoItem contains arbitrary, human readable information about an application"
            },
            "applicationsJsonnetVar": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "code": {
                        "type": "boolean"
                    }
                },
                "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation"
            },
            "applicationsKsonnetParameter": {
                "type": "object",
                "properties": {
                    "component": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "title": "KsonnetParameter is a ksonnet component parameter"
            },
            "applicationsKustomizeGvk": {
                "type": "object",
                "properties": {
                    "group": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    }
                }
            },
            "applicationsKustomizePatch": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "patch": {
                        "type": "string"
                    },
                    "target": {
                        "$ref": "#/components/schemas/applicationsKustomizeSelector"
                    },
                    "options": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "boolean"
                        }
                    }
                }
            },
            "applicationsKustomizeReplicas": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "string",
                        "title": "Number of replicas"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name of Deployment or StatefulSet"
                    }
                }
            },
            "applicationsKustomizeResId": {
                "type": "object",
                "properties": {
                    "gvk": {
                        "$ref": "#/components/schemas/applicationsKustomizeGvk"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    }
                }
            },
            "applicationsKustomizeSelector": {
                "type": "object",
                "properties": {
                    "resId": {
                        "$ref": "#/components/schemas/applicationsKustomizeResId"
                    },
                    "annotationSelector": {
                        "type": "string"
                    },
                    "labelSelector": {
                        "type": "string"
                    }
                }
            },
            "applicationsListGenerator": {
                "type": "object",
                "properties": {
                    "elements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1JSON"
                        },
                        "title": "+kubebuilder:validation:Optional"
                    },
                    "template": {
                        "$ref": "#/components/schemas/applicationsApplicationSetTemplate"
                    },
                    "elementsYaml": {
                        "type": "string"
                    }
                },
                "title": "ListGenerator include items info"
            },
            "applicationsLogEntriesBatch": {
                "type": "object",
                "properties": {
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsLogEntry"
                        }
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "batchIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "last": {
                        "type": "boolean"
                    }
                }
            },
            "applicationsLogEntry": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string"
                    },
                    "timeStamp": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "last": {
                        "type": "boolean"
                    },
                    "timeStampStr": {
                        "type": "string"
                    },
                    "podName": {
                        "type": "string"
                    }
                }
            },
            "applicationsManagedNamespaceMetadata": {
                "type": "object",
                "properties": {
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "applicationsManagedResourcesResponse": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsResourceDiff"
                        }
                    }
                }
            },
            "applicationsMatrixGenerator": {
                "type": "object",
                "properties": {
                    "generators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationSetNestedGenerator"
                        }
                    },
                    "template": {
                        "$ref": "#/components/schemas/applicationsApplicationSetTemplate"
                    }
                },
                "description": "MatrixGenerator generates the cartesian product of two sets of parameters. The parameters are defined by two nested\ngenerators."
            },
            "applicationsMergeGenerator": {
                "type": "object",
                "properties": {
                    "generators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationSetNestedGenerator"
                        }
                    },
                    "mergeKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "template": {
                        "$ref": "#/components/schemas/applicationsApplicationSetTemplate"
                    }
                },
                "description": "MergeGenerator merges the output of two or more generators. Where the values for all specified merge keys are equal\nbetween two sets of generated parameters, the parameter sets will be merged with the parameters from the latter\ngenerator taking precedence. Parameter sets with merge keys not present in the base generator's params will be\nignored.\nFor example, if the first generator produced [{a: '1', b: '2'}, {c: '1', d: '1'}] and the second generator produced\n[{'a': 'override'}], the united parameters for merge keys = ['a'] would be\n[{a: 'override', b: '1'}, {c: '1', d: '1'}].\n\nMergeGenerator supports template overriding. If a MergeGenerator is one of multiple top-level generators, its\ntemplate will be merged with the top-level generator before the parameters are applied."
            },
            "applicationsObjectReference": {
                "type": "object",
                "properties": {
                    "kind": {
                        "type": "string",
                        "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+"
                    },
                    "namespace": {
                        "type": "string",
                        "title": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\n+"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n+"
                    },
                    "uid": {
                        "type": "string",
                        "title": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\n+"
                    },
                    "apiVersion": {
                        "type": "string",
                        "title": "API version of the referent.\n+"
                    },
                    "resourceVersion": {
                        "type": "string",
                        "title": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+"
                    },
                    "fieldPath": {
                        "type": "string",
                        "title": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.\n+"
                    }
                }
            },
            "applicationsOperation": {
                "type": "object",
                "properties": {
                    "sync": {
                        "$ref": "#/components/schemas/applicationsSyncOperation"
                    },
                    "initiatedBy": {
                        "$ref": "#/components/schemas/applicationsOperationInitiator"
                    },
                    "info": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsInfo"
                        },
                        "title": "Info is a list of informational items for this operation"
                    },
                    "retry": {
                        "$ref": "#/components/schemas/applicationsRetryStrategy"
                    }
                },
                "title": "Operation contains information about a requested or running operation"
            },
            "applicationsOperationInitiator": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "title": "Username contains the name of a user who started operation"
                    },
                    "automated": {
                        "type": "boolean",
                        "description": "Automated is set to true if operation was initiated automatically by the application controller."
                    }
                },
                "title": "OperationInitiator contains information about the initiator of an operation"
            },
            "applicationsOperationState": {
                "type": "object",
                "properties": {
                    "operation": {
                        "$ref": "#/components/schemas/applicationsOperation"
                    },
                    "phase": {
                        "type": "string",
                        "title": "Phase is the current phase of the operation"
                    },
                    "message": {
                        "type": "string",
                        "description": "Message holds any pertinent messages when attempting to perform operation (typically errors)."
                    },
                    "syncResult": {
                        "$ref": "#/components/schemas/applicationsSyncOperationResult"
                    },
                    "startedAt": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "finishedAt": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "retryCount": {
                        "type": "string",
                        "format": "int64",
                        "title": "RetryCount contains time of operation retries"
                    },
                    "startedAtTs": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Started at Timestamp"
                    },
                    "finishedAtTs": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Finised at Timestamp"
                    }
                },
                "title": "OperationState contains information about state of a running operation"
            },
            "applicationsOperationTerminateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "appNamespace": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    }
                }
            },
            "applicationsOperationTerminateResponse": {
                "type": "object"
            },
            "applicationsOptionalArray": {
                "type": "object",
                "properties": {
                    "array": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Array is the value of an array type parameter.\n+optional"
                    }
                }
            },
            "applicationsOptionalMap": {
                "type": "object",
                "properties": {
                    "map": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Map is the value of a map type parameter.\n+optional"
                    }
                }
            },
            "applicationsPluginConfigMapRef": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name of the ConfigMap"
                    }
                }
            },
            "applicationsPluginGenerator": {
                "type": "object",
                "properties": {
                    "configMapRef": {
                        "$ref": "#/components/schemas/applicationsPluginConfigMapRef"
                    },
                    "input": {
                        "$ref": "#/components/schemas/applicationsPluginInput"
                    },
                    "requeueAfterSeconds": {
                        "type": "string",
                        "format": "int64",
                        "description": "RequeueAfterSeconds determines how long the ApplicationSet controller will wait before reconciling the ApplicationSet again."
                    },
                    "template": {
                        "$ref": "#/components/schemas/applicationsApplicationSetTemplate"
                    },
                    "values": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Values contains key/value pairs which are passed directly as parameters to the template. These values will not be\nsent as parameters to the plugin."
                    }
                },
                "description": "PluginGenerator defines connection info specific to Plugin."
            },
            "applicationsPluginInput": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/v1JSON"
                        },
                        "description": "Parameters contains the information to pass to the plugin. It is a map. The keys must be strings, and the\nvalues can be any type."
                    }
                }
            },
            "applicationsPullRequestGenerator": {
                "type": "object",
                "properties": {
                    "github": {
                        "$ref": "#/components/schemas/applicationsPullRequestGeneratorGithub"
                    },
                    "gitlab": {
                        "$ref": "#/components/schemas/applicationsPullRequestGeneratorGitLab"
                    },
                    "gitea": {
                        "$ref": "#/components/schemas/applicationsPullRequestGeneratorGitea"
                    },
                    "bitbucketServer": {
                        "$ref": "#/components/schemas/applicationsPullRequestGeneratorBitbucketServer"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsPullRequestGeneratorFilter"
                        },
                        "description": "Filters for which pull requests should be considered."
                    },
                    "requeueAfterSeconds": {
                        "type": "string",
                        "format": "int64",
                        "description": "Standard parameters."
                    },
                    "template": {
                        "$ref": "#/components/schemas/applicationsApplicationSetTemplate"
                    },
                    "bitbucket": {
                        "$ref": "#/components/schemas/applicationsPullRequestGeneratorBitbucket"
                    },
                    "azuredevops": {
                        "$ref": "#/components/schemas/applicationsPullRequestGeneratorAzureDevOps"
                    }
                },
                "description": "PullRequestGenerator defines a generator that scrapes a PullRequest API to find candidate pull requests."
            },
            "applicationsPullRequestGeneratorAzureDevOps": {
                "type": "object",
                "properties": {
                    "organization": {
                        "type": "string",
                        "description": "Azure DevOps org to scan. Required."
                    },
                    "project": {
                        "type": "string",
                        "description": "Azure DevOps project name to scan. Required."
                    },
                    "repo": {
                        "type": "string",
                        "description": "Azure DevOps repo name to scan. Required."
                    },
                    "api": {
                        "type": "string",
                        "description": "The Azure DevOps API URL to talk to. If blank, use https://dev.azure.com/."
                    },
                    "tokenRef": {
                        "$ref": "#/components/schemas/applicationsSecretRef"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Labels is used to filter the PRs that you want to target"
                    }
                },
                "description": "PullRequestGeneratorAzureDevOps defines connection info specific to AzureDevOps."
            },
            "applicationsPullRequestGeneratorBitbucket": {
                "type": "object",
                "properties": {
                    "owner": {
                        "type": "string",
                        "description": "Workspace to scan. Required."
                    },
                    "repo": {
                        "type": "string",
                        "description": "Repo name to scan. Required."
                    },
                    "api": {
                        "type": "string",
                        "description": "The Bitbucket REST API URL to talk to. If blank, uses https://api.bitbucket.org/2.0."
                    },
                    "basicAuth": {
                        "$ref": "#/components/schemas/applicationsBasicAuthBitbucketServer"
                    },
                    "bearerToken": {
                        "$ref": "#/components/schemas/applicationsBearerTokenBitbucketCloud"
                    }
                },
                "description": "PullRequestGeneratorBitbucket defines connection info specific to Bitbucket."
            },
            "applicationsPullRequestGeneratorBitbucketServer": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Project to scan. Required."
                    },
                    "repo": {
                        "type": "string",
                        "description": "Repo name to scan. Required."
                    },
                    "api": {
                        "type": "string",
                        "description": "The Bitbucket REST API URL to talk to e.g. https://bitbucket.org/rest Required."
                    },
                    "basicAuth": {
                        "$ref": "#/components/schemas/applicationsBasicAuthBitbucketServer"
                    },
                    "bearerToken": {
                        "$ref": "#/components/schemas/applicationsBearerTokenBitbucket"
                    },
                    "insecure": {
                        "type": "boolean",
                        "title": "Allow self-signed TLS / Certificates; default: false"
                    },
                    "caRef": {
                        "$ref": "#/components/schemas/applicationsConfigMapKeyRef"
                    }
                },
                "description": "PullRequestGeneratorBitbucketServer defines connection info specific to BitbucketServer."
            },
            "applicationsPullRequestGeneratorFilter": {
                "type": "object",
                "properties": {
                    "branchMatch": {
                        "type": "string"
                    },
                    "targetBranchMatch": {
                        "type": "string"
                    }
                },
                "description": "PullRequestGeneratorFilter is a single pull request filter.\nIf multiple filter types are set on a single struct, they will be AND'd together. All filters must\npass for a pull request to be included."
            },
            "applicationsPullRequestGeneratorGitLab": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "GitLab project to scan. Required."
                    },
                    "api": {
                        "type": "string",
                        "description": "The GitLab API URL to talk to. If blank, uses https://gitlab.com/."
                    },
                    "tokenRef": {
                        "$ref": "#/components/schemas/applicationsSecretRef"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Labels is used to filter the MRs that you want to target"
                    },
                    "pullRequestState": {
                        "type": "string",
                        "title": "PullRequestState is an additional MRs filter to get only those with a certain state. Default: \"\" (all states)"
                    },
                    "insecure": {
                        "type": "boolean",
                        "title": "Skips validating the SCM provider's TLS certificate - useful for self-signed certificates.; default: false"
                    },
                    "caRef": {
                        "$ref": "#/components/schemas/applicationsConfigMapKeyRef"
                    }
                },
                "description": "PullRequestGeneratorGitLab defines connection info specific to GitLab."
            },
            "applicationsPullRequestGeneratorGitea": {
                "type": "object",
                "properties": {
                    "owner": {
                        "type": "string",
                        "description": "Gitea org or user to scan. Required."
                    },
                    "repo": {
                        "type": "string",
                        "description": "Gitea repo name to scan. Required."
                    },
                    "api": {
                        "type": "string",
                        "title": "The Gitea API URL to talk to. Required"
                    },
                    "tokenRef": {
                        "$ref": "#/components/schemas/applicationsSecretRef"
                    },
                    "insecure": {
                        "type": "boolean",
                        "description": "Allow insecure tls, for self-signed certificates; default: false."
                    }
                },
                "description": "PullRequestGeneratorGitea defines connection info specific to Gitea."
            },
            "applicationsPullRequestGeneratorGithub": {
                "type": "object",
                "properties": {
                    "owner": {
                        "type": "string",
                        "description": "GitHub org or user to scan. Required."
                    },
                    "repo": {
                        "type": "string",
                        "description": "GitHub repo name to scan. Required."
                    },
                    "api": {
                        "type": "string",
                        "description": "The GitHub API URL to talk to. If blank, use https://api.github.com/."
                    },
                    "tokenRef": {
                        "$ref": "#/components/schemas/applicationsSecretRef"
                    },
                    "appSecretName": {
                        "type": "string",
                        "description": "AppSecretName is a reference to a GitHub App repo-creds secret with permission to access pull requests."
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Labels is used to filter the PRs that you want to target"
                    }
                },
                "description": "PullRequestGenerator defines connection info specific to GitHub."
            },
            "applicationsResourceAction": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "params": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsResourceActionParam"
                        }
                    },
                    "disabled": {
                        "type": "boolean"
                    }
                },
                "title": "TODO: describe this type\nTODO: describe members of this type"
            },
            "applicationsResourceActionParam": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "default": {
                        "type": "string"
                    }
                },
                "title": "TODO: describe this type\nTODO: describe members of this type"
            },
            "applicationsResourceActionRunRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "resourceName": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "action": {
                        "type": "string"
                    },
                    "appNamespace": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    }
                }
            },
            "applicationsResourceActionsListResponse": {
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsResourceAction"
                        }
                    }
                }
            },
            "applicationsResourceDiff": {
                "type": "object",
                "properties": {
                    "group": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "targetState": {
                        "type": "string",
                        "title": "TargetState contains the JSON serialized resource manifest defined in the Git/Helm"
                    },
                    "liveState": {
                        "type": "string",
                        "title": "TargetState contains the JSON live resource manifest"
                    },
                    "diff": {
                        "type": "string",
                        "title": "Diff contains the JSON patch between target and live resource\nDeprecated: use NormalizedLiveState and PredictedLiveState to render the difference"
                    },
                    "hook": {
                        "type": "boolean"
                    },
                    "normalizedLiveState": {
                        "type": "string",
                        "title": "NormalizedLiveState contains JSON serialized live resource state with applied normalizations"
                    },
                    "predictedLiveState": {
                        "type": "string",
                        "title": "PredictedLiveState contains JSON serialized resource state that is calculated based on normalized and target resource state"
                    },
                    "resourceVersion": {
                        "type": "string"
                    },
                    "modified": {
                        "type": "boolean"
                    }
                },
                "title": "ResourceDiff holds the diff of a live and target resource object\nTODO: describe members of this type"
            },
            "applicationsResourceIgnoreDifferences": {
                "type": "object",
                "properties": {
                    "group": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "jsonPointers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "jqPathExpressions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "managedFieldsManagers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs"
                    }
                },
                "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state."
            },
            "applicationsResourceNetworkingInfo": {
                "type": "object",
                "properties": {
                    "targetLabels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "targetRefs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsResourceRef"
                        }
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "ingress": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1LoadBalancerIngress"
                        }
                    },
                    "externalURLs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "ExternalURLs holds list of URLs which should be available externally. List is populated for ingress resources using rules hostnames."
                    }
                },
                "title": "ResourceNetworkingInfo holds networking resource related information\nTODO: describe members of this type"
            },
            "applicationsResourceNode": {
                "type": "object",
                "properties": {
                    "resourceRef": {
                        "$ref": "#/components/schemas/applicationsResourceRef"
                    },
                    "parentRefs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsResourceRef"
                        }
                    },
                    "info": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsInfoItem"
                        }
                    },
                    "networkingInfo": {
                        "$ref": "#/components/schemas/applicationsResourceNetworkingInfo"
                    },
                    "resourceVersion": {
                        "type": "string"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "health": {
                        "$ref": "#/components/schemas/applicationsHealthStatus"
                    },
                    "createdAt": {
                        "$ref": "#/components/schemas/v1Time"
                    }
                },
                "title": "ResourceNode contains information about live resource and its children\nTODO: describe members of this type"
            },
            "applicationsResourceRef": {
                "type": "object",
                "properties": {
                    "group": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "uid": {
                        "type": "string"
                    }
                },
                "title": "ResourceRef includes fields which uniquely identify a resource"
            },
            "applicationsResourceResult": {
                "type": "object",
                "properties": {
                    "group": {
                        "type": "string",
                        "title": "Group specifies the API group of the resource"
                    },
                    "version": {
                        "type": "string",
                        "title": "Version specifies the API version of the resource"
                    },
                    "kind": {
                        "type": "string",
                        "title": "Kind specifies the API kind of the resource"
                    },
                    "namespace": {
                        "type": "string",
                        "title": "Namespace specifies the target namespace of the resource"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name specifies the name of the resource"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status holds the final result of the sync. Will be empty if the resources is yet to be applied/pruned and is always zero-value for hooks"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message contains an informational or error message for the last sync OR operation"
                    },
                    "hookType": {
                        "type": "string",
                        "title": "HookType specifies the type of the hook. Empty for non-hook resources"
                    },
                    "hookPhase": {
                        "type": "string",
                        "description": "HookPhase contains the state of any operation associated with this resource OR hook\nThis can also contain values for non-hook resources."
                    },
                    "syncPhase": {
                        "type": "string",
                        "title": "SyncPhase indicates the particular phase of the sync that this result was acquired in"
                    }
                },
                "title": "ResourceResult holds the operation result details of a specific resource"
            },
            "applicationsResourceStatus": {
                "type": "object",
                "properties": {
                    "group": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "health": {
                        "$ref": "#/components/schemas/applicationsHealthStatus"
                    },
                    "hook": {
                        "type": "boolean"
                    },
                    "requiresPruning": {
                        "type": "boolean"
                    },
                    "syncWave": {
                        "type": "string",
                        "format": "int64"
                    },
                    "requiresDeletionConfirmation": {
                        "type": "boolean"
                    }
                },
                "title": "ResourceStatus holds the current sync and health status of a resource\nTODO: describe members of this type"
            },
            "applicationsResourcesQuery": {
                "type": "object",
                "properties": {
                    "applicationName": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "group": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "appNamespace": {
                        "type": "string"
                    },
                    "project": {
                        "type": "string"
                    }
                }
            },
            "applicationsRetryStrategy": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "string",
                        "format": "int64",
                        "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed."
                    },
                    "backoff": {
                        "$ref": "#/components/schemas/applicationsBackoff"
                    }
                },
                "title": "RetryStrategy contains information about the strategy to apply when a sync failed"
            },
            "applicationsRevisionHistory": {
                "type": "object",
                "properties": {
                    "revision": {
                        "type": "string",
                        "title": "Revision holds the revision the sync was performed against"
                    },
                    "deployedAt": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "id": {
                        "type": "string",
                        "format": "int64",
                        "title": "ID is an auto incrementing identifier of the RevisionHistory"
                    },
                    "source": {
                        "$ref": "#/components/schemas/applicationsApplicationSource"
                    },
                    "deployStartedAt": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "deployedAtTs": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deployStartedAtTs": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationSource"
                        },
                        "title": "Sources is a reference to the application sources used for the sync operation"
                    },
                    "revisions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Revisions holds the revision of each source in sources field the sync was performed against"
                    },
                    "initiatedBy": {
                        "$ref": "#/components/schemas/applicationsOperationInitiator"
                    }
                },
                "title": "RevisionHistory contains history information about a previous sync"
            },
            "applicationsRevisionMetadataQuery": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "the application's name"
                    },
                    "revision": {
                        "type": "string",
                        "title": "the revision of the app"
                    },
                    "appNamespace": {
                        "type": "string",
                        "title": "the application's namespace"
                    },
                    "project": {
                        "type": "string"
                    },
                    "sourceIndex": {
                        "type": "integer",
                        "format": "int32",
                        "title": "source index (for multi source apps)"
                    },
                    "versionId": {
                        "type": "integer",
                        "format": "int32",
                        "title": "versionId from historical data (for multi source apps)"
                    }
                }
            },
            "applicationsSCMProviderGenerator": {
                "type": "object",
                "properties": {
                    "github": {
                        "$ref": "#/components/schemas/applicationsSCMProviderGeneratorGithub"
                    },
                    "gitlab": {
                        "$ref": "#/components/schemas/applicationsSCMProviderGeneratorGitlab"
                    },
                    "bitbucket": {
                        "$ref": "#/components/schemas/applicationsSCMProviderGeneratorBitbucket"
                    },
                    "bitbucketServer": {
                        "$ref": "#/components/schemas/applicationsSCMProviderGeneratorBitbucketServer"
                    },
                    "gitea": {
                        "$ref": "#/components/schemas/applicationsSCMProviderGeneratorGitea"
                    },
                    "azureDevOps": {
                        "$ref": "#/components/schemas/applicationsSCMProviderGeneratorAzureDevOps"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsSCMProviderGeneratorFilter"
                        },
                        "description": "Filters for which repos should be considered."
                    },
                    "cloneProtocol": {
                        "type": "string",
                        "description": "Which protocol to use for the SCM URL. Default is provider-specific but ssh if possible. Not all providers\nnecessarily support all protocols."
                    },
                    "requeueAfterSeconds": {
                        "type": "string",
                        "format": "int64",
                        "description": "Standard parameters."
                    },
                    "template": {
                        "$ref": "#/components/schemas/applicationsApplicationSetTemplate"
                    },
                    "values": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Values contains key/value pairs which are passed directly as parameters to the template"
                    },
                    "awsCodeCommit": {
                        "$ref": "#/components/schemas/applicationsSCMProviderGeneratorAWSCodeCommit"
                    }
                },
                "description": "SCMProviderGenerator defines a generator that scrapes a SCMaaS API to find candidate repos."
            },
            "applicationsSCMProviderGeneratorAWSCodeCommit": {
                "type": "object",
                "properties": {
                    "tagFilters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsTagFilter"
                        },
                        "title": "TagFilters provides the tag filter(s) for repo discovery"
                    },
                    "role": {
                        "type": "string",
                        "description": "Role provides the AWS IAM role to assume, for cross-account repo discovery\nif not provided, AppSet controller will use its pod/node identity to discover."
                    },
                    "region": {
                        "type": "string",
                        "description": "Region provides the AWS region to discover repos.\nif not provided, AppSet controller will infer the current region from environment."
                    },
                    "allBranches": {
                        "type": "boolean",
                        "description": "Scan all branches instead of just the default branch."
                    }
                },
                "description": "SCMProviderGeneratorAWSCodeCommit defines connection info specific to AWS CodeCommit."
            },
            "applicationsSCMProviderGeneratorAzureDevOps": {
                "type": "object",
                "properties": {
                    "organization": {
                        "type": "string",
                        "description": "Azure Devops organization. Required. E.g. \"my-organization\"."
                    },
                    "api": {
                        "type": "string",
                        "description": "The URL to Azure DevOps. If blank, use https://dev.azure.com."
                    },
                    "teamProject": {
                        "type": "string",
                        "description": "Azure Devops team project. Required. E.g. \"my-team\"."
                    },
                    "accessTokenRef": {
                        "$ref": "#/components/schemas/applicationsSecretRef"
                    },
                    "allBranches": {
                        "type": "boolean",
                        "description": "Scan all branches instead of just the default branch."
                    }
                },
                "description": "SCMProviderGeneratorAzureDevOps defines connection info specific to Azure DevOps."
            },
            "applicationsSCMProviderGeneratorBitbucket": {
                "type": "object",
                "properties": {
                    "owner": {
                        "type": "string",
                        "description": "Bitbucket workspace to scan. Required."
                    },
                    "user": {
                        "type": "string",
                        "title": "Bitbucket user to use when authenticating.  Should have a \"member\" role to be able to read all repositories and branches.  Required"
                    },
                    "appPasswordRef": {
                        "$ref": "#/components/schemas/applicationsSecretRef"
                    },
                    "allBranches": {
                        "type": "boolean",
                        "description": "Scan all branches instead of just the main branch."
                    }
                },
                "description": "SCMProviderGeneratorBitbucket defines connection info specific to Bitbucket Cloud (API version 2)."
            },
            "applicationsSCMProviderGeneratorBitbucketServer": {
                "type": "object",
                "properties": {
                    "project": {
                        "type": "string",
                        "description": "Project to scan. Required."
                    },
                    "api": {
                        "type": "string",
                        "description": "The Bitbucket Server REST API URL to talk to. Required."
                    },
                    "basicAuth": {
                        "$ref": "#/components/schemas/applicationsBasicAuthBitbucketServer"
                    },
                    "allBranches": {
                        "type": "boolean",
                        "description": "Scan all branches instead of just the default branch."
                    },
                    "bearerToken": {
                        "$ref": "#/components/schemas/applicationsBearerTokenBitbucket"
                    },
                    "insecure": {
                        "type": "boolean",
                        "title": "Allow self-signed TLS / Certificates; default: false"
                    },
                    "caRef": {
                        "$ref": "#/components/schemas/applicationsConfigMapKeyRef"
                    }
                },
                "description": "SCMProviderGeneratorBitbucketServer defines connection info specific to Bitbucket Server."
            },
            "applicationsSCMProviderGeneratorFilter": {
                "type": "object",
                "properties": {
                    "repositoryMatch": {
                        "type": "string",
                        "description": "A regex for repo names."
                    },
                    "pathsExist": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of paths, all of which must exist."
                    },
                    "pathsDoNotExist": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "An array of paths, all of which must not exist."
                    },
                    "labelMatch": {
                        "type": "string",
                        "description": "A regex which must match at least one label."
                    },
                    "branchMatch": {
                        "type": "string",
                        "description": "A regex which must match the branch name."
                    }
                },
                "description": "SCMProviderGeneratorFilter is a single repository filter.\nIf multiple filter types are set on a single struct, they will be AND'd together. All filters must\npass for a repo to be included."
            },
            "applicationsSCMProviderGeneratorGitea": {
                "type": "object",
                "properties": {
                    "owner": {
                        "type": "string",
                        "description": "Gitea organization or user to scan. Required."
                    },
                    "api": {
                        "type": "string",
                        "description": "The Gitea URL to talk to. For example https://gitea.mydomain.com/."
                    },
                    "tokenRef": {
                        "$ref": "#/components/schemas/applicationsSecretRef"
                    },
                    "allBranches": {
                        "type": "boolean",
                        "description": "Scan all branches instead of just the default branch."
                    },
                    "insecure": {
                        "type": "boolean",
                        "title": "Allow self-signed TLS / Certificates; default: false"
                    }
                },
                "description": "SCMProviderGeneratorGitea defines a connection info specific to Gitea."
            },
            "applicationsSCMProviderGeneratorGithub": {
                "type": "object",
                "properties": {
                    "organization": {
                        "type": "string",
                        "description": "GitHub org to scan. Required."
                    },
                    "api": {
                        "type": "string",
                        "description": "The GitHub API URL to talk to. If blank, use https://api.github.com/."
                    },
                    "tokenRef": {
                        "$ref": "#/components/schemas/applicationsSecretRef"
                    },
                    "appSecretName": {
                        "type": "string",
                        "description": "AppSecretName is a reference to a GitHub App repo-creds secret."
                    },
                    "allBranches": {
                        "type": "boolean",
                        "description": "Scan all branches instead of just the default branch."
                    }
                },
                "description": "SCMProviderGeneratorGithub defines connection info specific to GitHub."
            },
            "applicationsSCMProviderGeneratorGitlab": {
                "type": "object",
                "properties": {
                    "group": {
                        "type": "string",
                        "description": "Gitlab group to scan. Required.  You can use either the project id (recommended) or the full namespaced path."
                    },
                    "includeSubgroups": {
                        "type": "boolean",
                        "title": "Recurse through subgroups (true) or scan only the base group (false).  Defaults to \"false\""
                    },
                    "api": {
                        "type": "string",
                        "description": "The Gitlab API URL to talk to."
                    },
                    "tokenRef": {
                        "$ref": "#/components/schemas/applicationsSecretRef"
                    },
                    "allBranches": {
                        "type": "boolean",
                        "description": "Scan all branches instead of just the default branch."
                    },
                    "insecure": {
                        "type": "boolean",
                        "title": "Skips validating the SCM provider's TLS certificate - useful for self-signed certificates.; default: false"
                    },
                    "includeSharedProjects": {
                        "type": "boolean",
                        "title": "When recursing through subgroups, also include shared Projects (true) or scan only the subgroups under same path (false).  Defaults to \"true\""
                    },
                    "topic": {
                        "type": "string",
                        "description": "Filter repos list based on Gitlab Topic."
                    },
                    "caRef": {
                        "$ref": "#/components/schemas/applicationsConfigMapKeyRef"
                    }
                },
                "description": "SCMProviderGeneratorGitlab defines connection info specific to Gitlab."
            },
            "applicationsSecretRef": {
                "type": "object",
                "properties": {
                    "secretName": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    }
                },
                "description": "Utility struct for a reference to a secret key."
            },
            "applicationsSyncOperation": {
                "type": "object",
                "properties": {
                    "revision": {
                        "type": "string",
                        "description": "Revision is the revision (Git) or chart version (Helm) which to sync the application to\nIf omitted, will use the revision specified in app spec."
                    },
                    "prune": {
                        "type": "boolean",
                        "title": "Prune specifies to delete resources from the cluster that are no longer tracked in git"
                    },
                    "dryRun": {
                        "type": "boolean",
                        "title": "DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync"
                    },
                    "syncStrategy": {
                        "$ref": "#/components/schemas/applicationsSyncStrategy"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsSyncOperationResource"
                        },
                        "title": "Resources describes which resources shall be part of the sync"
                    },
                    "source": {
                        "$ref": "#/components/schemas/applicationsApplicationSource"
                    },
                    "manifests": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Manifests is an field that overrides sync source with a local directory for development"
                    },
                    "syncOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "SyncOptions provide per-sync sync-options, e.g. Validate=false"
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationSource"
                        },
                        "title": "Sources overrides the source definition set in the application.\nThis is typically set in a Rollback operation and is nil during a Sync operation"
                    },
                    "revisions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Revisions is the list of revision (Git) or chart version (Helm) which to sync each source in sources field for the application to\nIf omitted, will use the revision specified in app spec."
                    },
                    "autoHealAttemptsCount": {
                        "type": "string",
                        "format": "int64",
                        "title": "SelfHealAttemptsCount contains the number of auto-heal attempts"
                    }
                },
                "description": "SyncOperation contains details about a sync operation."
            },
            "applicationsSyncOperationResource": {
                "type": "object",
                "properties": {
                    "group": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    }
                },
                "description": "SyncOperationResource contains resources to sync."
            },
            "applicationsSyncOperationResult": {
                "type": "object",
                "properties": {
                    "resources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsResourceResult"
                        },
                        "title": "Resources contains a list of sync result items for each individual resource in a sync operation"
                    },
                    "revision": {
                        "type": "string",
                        "title": "Revision holds the revision this sync operation was performed to"
                    },
                    "source": {
                        "$ref": "#/components/schemas/applicationsApplicationSource"
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationSource"
                        },
                        "title": "Source records the application source information of the sync, used for comparing auto-sync"
                    },
                    "revisions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Revisions holds the revision this sync operation was performed for respective indexed source in sources field"
                    },
                    "managedNamespaceMetadata": {
                        "$ref": "#/components/schemas/applicationsManagedNamespaceMetadata"
                    }
                },
                "title": "SyncOperationResult represent result of sync operation"
            },
            "applicationsSyncOptions": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "applicationsSyncPolicy": {
                "type": "object",
                "properties": {
                    "automated": {
                        "$ref": "#/components/schemas/applicationsSyncPolicyAutomated"
                    },
                    "syncOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Options allow you to specify whole app sync-options"
                    },
                    "retry": {
                        "$ref": "#/components/schemas/applicationsRetryStrategy"
                    },
                    "managedNamespaceMetadata": {
                        "$ref": "#/components/schemas/applicationsManagedNamespaceMetadata"
                    }
                },
                "title": "SyncPolicy controls when a sync will be performed in response to updates in git"
            },
            "applicationsSyncPolicyAutomated": {
                "type": "object",
                "properties": {
                    "prune": {
                        "type": "boolean",
                        "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
                    },
                    "selfHeal": {
                        "type": "boolean",
                        "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
                    },
                    "allowEmpty": {
                        "type": "boolean",
                        "title": "AllowEmpty allows apps have zero live resources (default: false)"
                    }
                },
                "title": "SyncPolicyAutomated controls the behavior of an automated sync"
            },
            "applicationsSyncStatus": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status is the sync state of the comparison"
                    },
                    "comparedTo": {
                        "$ref": "#/components/schemas/applicationsComparedTo"
                    },
                    "revision": {
                        "type": "string",
                        "title": "Revision contains information about the revision the comparison has been performed to"
                    },
                    "revisions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Revisions contains information about the revisions of multiple sources the comparison has been performed to"
                    }
                },
                "title": "SyncStatus contains information about the currently observed live and desired states of an application"
            },
            "applicationsSyncStrategy": {
                "type": "object",
                "properties": {
                    "apply": {
                        "$ref": "#/components/schemas/applicationsSyncStrategyApply"
                    },
                    "hook": {
                        "$ref": "#/components/schemas/applicationsSyncStrategyHook"
                    }
                },
                "title": "SyncStrategy controls the manner in which a sync is performed"
            },
            "applicationsSyncStrategyApply": {
                "type": "object",
                "properties": {
                    "force": {
                        "type": "boolean",
                        "description": "Force indicates whether or not to supply the --force flag to `kubectl apply`.\nThe --force flag deletes and re-create the resource, when PATCH encounters conflict and has\nretried for 5 times."
                    }
                },
                "title": "SyncStrategyApply uses `kubectl apply` to perform the apply"
            },
            "applicationsSyncStrategyHook": {
                "type": "object",
                "properties": {
                    "force": {
                        "type": "boolean",
                        "title": "Embed SyncStrategyApply type to inherit any `apply` options\n+"
                    }
                },
                "description": "SyncStrategyHook will perform a sync using hooks annotations.\nIf no hook annotation is specified falls back to `kubectl apply`."
            },
            "applicationsTagFilter": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "appprojectsAppProject": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ObjectMeta"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/appprojectsAppProjectSpec"
                    },
                    "status": {
                        "$ref": "#/components/schemas/appprojectsAppProjectStatus"
                    }
                },
                "title": "AppProject provides a logical grouping of applications, providing controls for:\n* where the apps may deploy to (cluster whitelist)\n* what may be deployed (repository whitelist, resource whitelist/blacklist)\n* who can access these applications (roles, OIDC group claims bindings)\n* and what they can do (RBAC policies)\n* automation access to these roles (JWT tokens)\n+genclient\n+genclient:noStatus\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+kubebuilder:resource:path=appprojects,shortName=appproj;appprojs"
            },
            "appprojectsAppProjectList": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ListMeta"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/appprojectsAppProject"
                        }
                    }
                },
                "title": "AppProjectList is list of AppProject resources\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object"
            },
            "appprojectsAppProjectSpec": {
                "type": "object",
                "properties": {
                    "sourceRepos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "SourceRepos contains list of repository URLs which can be used for deployment"
                    },
                    "destinations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/appprojectsApplicationDestination"
                        },
                        "title": "Destinations contains list of destinations available for deployment"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description contains optional project description"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/appprojectsProjectRole"
                        },
                        "title": "Roles are user defined RBAC roles associated with this project"
                    },
                    "clusterResourceWhitelist": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1GroupKind"
                        },
                        "title": "ClusterResourceWhitelist contains list of whitelisted cluster level resources"
                    },
                    "namespaceResourceBlacklist": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1GroupKind"
                        },
                        "title": "NamespaceResourceBlacklist contains list of blacklisted namespace level resources"
                    },
                    "orphanedResources": {
                        "$ref": "#/components/schemas/appprojectsOrphanedResourcesMonitorSettings"
                    },
                    "syncWindows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/appprojectsSyncWindow"
                        },
                        "title": "SyncWindows controls when syncs can be run for apps in this project"
                    },
                    "namespaceResourceWhitelist": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1GroupKind"
                        },
                        "title": "NamespaceResourceWhitelist contains list of whitelisted namespace level resources"
                    },
                    "signatureKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/appprojectsSignatureKey"
                        },
                        "title": "SignatureKeys contains a list of PGP key IDs that commits in Git must be signed with in order to be allowed for sync"
                    },
                    "clusterResourceBlacklist": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1GroupKind"
                        },
                        "title": "ClusterResourceBlacklist contains list of blacklisted cluster level resources"
                    },
                    "sourceNamespaces": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "SourceNamespaces defines the namespaces application resources are allowed to be created in"
                    },
                    "permitOnlyProjectScopedClusters": {
                        "type": "boolean",
                        "title": "PermitOnlyProjectScopedClusters determines whether destinations can only reference clusters which are project-scoped"
                    },
                    "destinationServiceAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/appprojectsApplicationDestinationServiceAccount"
                        },
                        "description": "DestinationServiceAccounts holds information about the service accounts to be impersonated for the application sync operation for each destination."
                    }
                },
                "title": "AppProjectSpec is the specification of an AppProject"
            },
            "appprojectsAppProjectStatus": {
                "type": "object",
                "properties": {
                    "jwtTokensByRole": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/appprojectsJWTTokens"
                        },
                        "title": "JWTTokensByRole contains a list of JWT tokens issued for a given role"
                    }
                },
                "title": "AppProjectStatus contains status information for AppProject CRs"
            },
            "appprojectsApplicationDestination": {
                "type": "object",
                "properties": {
                    "server": {
                        "type": "string",
                        "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
                    },
                    "namespace": {
                        "type": "string",
                        "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
                    }
                },
                "title": "ApplicationDestination holds information about the application's destination"
            },
            "appprojectsApplicationDestinationServiceAccount": {
                "type": "object",
                "properties": {
                    "server": {
                        "type": "string",
                        "description": "Server specifies the URL of the target cluster's Kubernetes control plane API."
                    },
                    "namespace": {
                        "type": "string",
                        "description": "Namespace specifies the target namespace for the application's resources."
                    },
                    "defaultServiceAccount": {
                        "type": "string",
                        "title": "DefaultServiceAccount to be used for impersonation during the sync operation"
                    }
                },
                "description": "ApplicationDestinationServiceAccount holds information about the service account to be impersonated for the application sync operation."
            },
            "appprojectsJWTToken": {
                "type": "object",
                "properties": {
                    "iat": {
                        "type": "string",
                        "format": "int64"
                    },
                    "exp": {
                        "type": "string",
                        "format": "int64"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "title": "JWTToken holds the issuedAt and expiresAt values of a token"
            },
            "appprojectsJWTTokens": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/appprojectsJWTToken"
                        }
                    }
                },
                "title": "JWTTokens represents a list of JWT tokens"
            },
            "appprojectsOrphanedResourceKey": {
                "type": "object",
                "properties": {
                    "group": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "title": "OrphanedResourceKey is a reference to a resource to be ignored from"
            },
            "appprojectsOrphanedResourcesMonitorSettings": {
                "type": "object",
                "properties": {
                    "warn": {
                        "type": "boolean",
                        "title": "Warn indicates if warning condition should be created for apps which have orphaned resources"
                    },
                    "ignore": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/appprojectsOrphanedResourceKey"
                        },
                        "title": "Ignore contains a list of resources that are to be excluded from orphaned resources monitoring"
                    }
                },
                "title": "OrphanedResourcesMonitorSettings holds settings of orphaned resources monitoring"
            },
            "appprojectsProjectRole": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name is a name for this role"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description is a description of the role"
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Policies Stores a list of casbin formatted strings that define access policies for the role in the project"
                    },
                    "jwtTokens": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/appprojectsJWTToken"
                        },
                        "title": "JWTTokens are a list of generated JWT tokens bound to this role"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Groups are a list of OIDC group claims bound to this role"
                    }
                },
                "title": "ProjectRole represents a role that has access to a project"
            },
            "appprojectsSignatureKey": {
                "type": "object",
                "properties": {
                    "keyID": {
                        "type": "string",
                        "title": "The ID of the key in hexadecimal notation"
                    }
                },
                "title": "SignatureKey is the specification of a key required to verify commit signatures with"
            },
            "appprojectsSyncWindow": {
                "type": "object",
                "properties": {
                    "kind": {
                        "type": "string",
                        "title": "Kind defines if the window allows or blocks syncs"
                    },
                    "schedule": {
                        "type": "string",
                        "title": "Schedule is the time the window will begin, specified in cron format"
                    },
                    "duration": {
                        "type": "string",
                        "title": "Duration is the amount of time the sync window will be open"
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Applications contains a list of applications that the window will apply to"
                    },
                    "namespaces": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Namespaces contains a list of namespaces that the window will apply to"
                    },
                    "clusters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Clusters contains a list of clusters that the window will apply to"
                    },
                    "manualSync": {
                        "type": "boolean",
                        "title": "ManualSync enables manual syncs when they would otherwise be blocked"
                    },
                    "timeZone": {
                        "type": "string",
                        "title": "TimeZone of the sync that will be applied to the schedule"
                    }
                },
                "title": "SyncWindow contains the kind, time, duration and attributes that are used to assign the syncWindows to apps"
            },
            "certificatesRepositoryCertificate": {
                "type": "object",
                "properties": {
                    "serverName": {
                        "type": "string",
                        "title": "ServerName specifies the DNS name of the server this certificate is intended for"
                    },
                    "certType": {
                        "type": "string",
                        "title": "CertType specifies the type of the certificate - currently one of \"https\" or \"ssh\""
                    },
                    "certSubType": {
                        "type": "string",
                        "title": "CertSubType specifies the sub type of the cert, i.e. \"ssh-rsa\""
                    },
                    "certData": {
                        "type": "string",
                        "format": "byte",
                        "title": "CertData contains the actual certificate data, dependent on the certificate type"
                    },
                    "certInfo": {
                        "type": "string",
                        "title": "CertInfo will hold additional certificate info, depdendent on the certificate type (e.g. SSH fingerprint, X509 CommonName)"
                    }
                },
                "title": "A RepositoryCertificate is either SSH known hosts entry or TLS certificate"
            },
            "certificatesRepositoryCertificateCreateRequest": {
                "type": "object",
                "properties": {
                    "certificates": {
                        "$ref": "#/components/schemas/certificatesRepositoryCertificateList"
                    },
                    "upsert": {
                        "type": "boolean",
                        "title": "Whether to upsert already existing certificates"
                    }
                },
                "title": "Request to create a set of certificates"
            },
            "certificatesRepositoryCertificateList": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ListMeta"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/certificatesRepositoryCertificate"
                        },
                        "title": "List of certificates to be processed"
                    }
                },
                "title": "RepositoryCertificateList is a collection of RepositoryCertificates"
            },
            "certificatesRepositoryCertificateQuery": {
                "type": "object",
                "properties": {
                    "hostNamePattern": {
                        "type": "string",
                        "title": "A file-glob pattern (not regular expression) the host name has to match"
                    },
                    "certType": {
                        "type": "string",
                        "title": "The type of the certificate to match (ssh or https)"
                    },
                    "certSubType": {
                        "type": "string",
                        "title": "The sub type of the certificate to match (protocol dependent, usually only used for ssh certs)"
                    }
                }
            },
            "clustersAWSAuthConfig": {
                "type": "object",
                "properties": {
                    "clusterName": {
                        "type": "string",
                        "title": "ClusterName contains AWS cluster name"
                    },
                    "roleARN": {
                        "type": "string",
                        "description": "RoleARN contains optional role ARN. If set then AWS IAM Authenticator assume a role to perform cluster operations instead of the default AWS credential provider chain."
                    }
                },
                "title": "AWSAuthConfig is an AWS IAM authentication configuration"
            },
            "clustersCluster": {
                "type": "object",
                "properties": {
                    "server": {
                        "type": "string",
                        "title": "Server is the API server URL of the Kubernetes cluster"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name of the cluster. If omitted, will use the server address"
                    },
                    "config": {
                        "$ref": "#/components/schemas/clustersClusterConfig"
                    },
                    "connectionState": {
                        "$ref": "#/components/schemas/commonsConnectionState"
                    },
                    "serverVersion": {
                        "type": "string",
                        "title": "DEPRECATED: use Info.ServerVersion field instead.\nThe server version"
                    },
                    "namespaces": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Holds list of namespaces which are accessible in that cluster. Cluster level resources will be ignored if namespace list is not empty."
                    },
                    "refreshRequestedAt": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "info": {
                        "$ref": "#/components/schemas/clustersClusterInfo"
                    },
                    "shard_deprecated": {
                        "type": "string",
                        "format": "int64",
                        "description": "DEPRECATED: use Shard field instead.\nShard contains optional shard number. Calculated on the fly by the application controller if not specified."
                    },
                    "clusterResources": {
                        "type": "boolean",
                        "description": "Indicates if cluster level resources should be managed. This setting is used only if cluster is connected in a namespaced mode."
                    },
                    "project": {
                        "type": "string",
                        "title": "Reference between project and cluster that allow you automatically to be added as item inside Destinations project entity"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Labels for cluster secret metadata"
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Annotations for cluster secret metadata"
                    },
                    "type": {
                        "$ref": "#/components/schemas/clustersClusterType"
                    },
                    "refreshRequestedAtTs": {
                        "type": "string",
                        "format": "date-time",
                        "title": "refreshRequestedAtTs is the google timestamp variation of refreshRequestedAt"
                    },
                    "shard": {
                        "type": "string",
                        "format": "int64"
                    }
                },
                "title": "Cluster is the definition of a cluster resource"
            },
            "clustersClusterCacheInfo": {
                "type": "object",
                "properties": {
                    "resourcesCount": {
                        "type": "string",
                        "format": "int64",
                        "title": "ResourcesCount holds number of observed Kubernetes resources"
                    },
                    "apisCount": {
                        "type": "string",
                        "format": "int64",
                        "title": "APIsCount holds number of observed Kubernetes API count"
                    },
                    "lastCacheSyncTime": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "lastCacheSyncTimeTs": {
                        "type": "string",
                        "format": "date-time",
                        "title": "lastCacheSyncTimeTs is the google timestamp variation of lastCacheSyncTime"
                    }
                },
                "title": "ClusterCacheInfo contains information about the cluster cache"
            },
            "clustersClusterConfig": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "title": "Server requires Basic authentication"
                    },
                    "password": {
                        "type": "string"
                    },
                    "bearerToken": {
                        "type": "string",
                        "description": "Server requires Bearer authentication. This client will not attempt to use\nrefresh tokens for an OAuth2 flow.\nTODO: demonstrate an OAuth2 compatible client."
                    },
                    "tlsClientConfig": {
                        "$ref": "#/components/schemas/clustersTLSClientConfig"
                    },
                    "awsAuthConfig": {
                        "$ref": "#/components/schemas/clustersAWSAuthConfig"
                    },
                    "execProviderConfig": {
                        "$ref": "#/components/schemas/clustersExecProviderConfig"
                    },
                    "clusterConnectionType": {
                        "type": "string",
                        "title": "Identifies the authentication method used to connect to the cluster"
                    },
                    "roleARN": {
                        "type": "string",
                        "description": "RoleARN contains optional role ARN. If set then AWS IAM Authenticator assume a role to perform cluster operations instead of the default AWS credential provider chain."
                    },
                    "awsClusterName": {
                        "type": "string",
                        "description": "AWS Cluster name. If set then AWS CLI EKS token command will be used to access cluster."
                    },
                    "disableCompression": {
                        "type": "boolean",
                        "description": "DisableCompression bypasses automatic GZip compression requests to the server."
                    },
                    "proxyUrl": {
                        "type": "string",
                        "title": "ProxyURL is the URL to the proxy to be used for all requests send to the server"
                    }
                },
                "description": "ClusterConfig is the configuration attributes. This structure is subset of the go-client\nrest.Config with annotations added for marshalling."
            },
            "clustersClusterCreateRequest": {
                "type": "object",
                "properties": {
                    "cluster": {
                        "$ref": "#/components/schemas/clustersCluster"
                    },
                    "upsert": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "clustersClusterID": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "type is the type of the specified cluster identifier ( \"server\" - default, \"name\" )"
                    },
                    "value": {
                        "type": "string",
                        "title": "value holds the cluster server URL or cluster name"
                    }
                },
                "title": "ClusterID holds a cluster server URL or cluster name"
            },
            "clustersClusterInfo": {
                "type": "object",
                "properties": {
                    "connectionState": {
                        "$ref": "#/components/schemas/commonsConnectionState"
                    },
                    "serverVersion": {
                        "type": "string",
                        "title": "ServerVersion contains information about the Kubernetes version of the cluster"
                    },
                    "cacheInfo": {
                        "$ref": "#/components/schemas/clustersClusterCacheInfo"
                    },
                    "applicationsCount": {
                        "type": "string",
                        "format": "int64",
                        "title": "ApplicationsCount is the number of applications managed by Argo CD on the cluster"
                    },
                    "apiVersions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "APIVersions contains list of API versions supported by the cluster"
                    }
                },
                "title": "ClusterInfo contains information about the cluster"
            },
            "clustersClusterList": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ListMeta"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/clustersCluster"
                        }
                    }
                },
                "description": "ClusterList is a collection of Clusters."
            },
            "clustersClusterQuery": {
                "type": "object",
                "properties": {
                    "server": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "$ref": "#/components/schemas/clustersClusterID"
                    },
                    "project": {
                        "type": "string"
                    }
                },
                "title": "ClusterQuery is a query for cluster resources"
            },
            "clustersClusterResponse": {
                "type": "object"
            },
            "clustersClusterType": {
                "type": "string",
                "enum": [
                    "CUSTOMER_PROVIDED",
                    "HARNESS_HOSTED"
                ],
                "default": "CUSTOMER_PROVIDED"
            },
            "clustersClusterUpdateRequest": {
                "type": "object",
                "properties": {
                    "cluster": {
                        "$ref": "#/components/schemas/clustersCluster"
                    },
                    "updatedFields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "updateMask": {
                        "$ref": "#/components/schemas/protobufFieldMask"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "$ref": "#/components/schemas/clustersClusterID"
                    }
                }
            },
            "clustersExecProviderConfig": {
                "type": "object",
                "properties": {
                    "command": {
                        "type": "string",
                        "title": "Command to execute"
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Arguments to pass to the command when executing it"
                    },
                    "env": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Env defines additional environment variables to expose to the process"
                    },
                    "apiVersion": {
                        "type": "string",
                        "title": "Preferred input version of the ExecInfo"
                    },
                    "installHint": {
                        "type": "string",
                        "title": "This text is shown to the user when the executable doesn't seem to be present"
                    }
                },
                "title": "ExecProviderConfig is config used to call an external command to perform cluster authentication\nSee: https://godoc.org/k8s.io/client-go/tools/clientcmd/api#ExecConfig"
            },
            "clustersTLSClientConfig": {
                "type": "object",
                "properties": {
                    "insecure": {
                        "type": "boolean",
                        "description": "Insecure specifies that the server should be accessed without verifying the TLS certificate. For testing only."
                    },
                    "serverName": {
                        "type": "string",
                        "description": "ServerName is passed to the server for SNI and is used in the client to check server\ncertificates against. If ServerName is empty, the hostname used to contact the\nserver is used."
                    },
                    "certData": {
                        "type": "string",
                        "format": "byte",
                        "title": "CertData holds PEM-encoded bytes (typically read from a client certificate file).\nCertData takes precedence over CertFile"
                    },
                    "keyData": {
                        "type": "string",
                        "format": "byte",
                        "title": "KeyData holds PEM-encoded bytes (typically read from a client certificate key file).\nKeyData takes precedence over KeyFile"
                    },
                    "caData": {
                        "type": "string",
                        "format": "byte",
                        "title": "CAData holds PEM-encoded bytes (typically read from a root certificates bundle).\nCAData takes precedence over CAFile"
                    }
                },
                "title": "TLSClientConfig contains settings to enable transport layer security"
            },
            "commonsConnectionState": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "title": "Status contains the current status indicator for the connection"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message contains human readable information about the connection status"
                    },
                    "attemptedAt": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "attemptedAtTs": {
                        "type": "string",
                        "format": "date-time",
                        "title": "attemptedAtTs is the google timestamp variation of attemptedAt"
                    }
                },
                "title": "ConnectionState contains information about remote resource connection state, currently used for clusters and repositories"
            },
            "gatewayruntimeError": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string"
                    },
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/protobufAny"
                        }
                    }
                }
            },
            "gitopsservicev1Namespace": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "gitopsservicev1NamespaceList": {
                "type": "object",
                "properties": {
                    "namespaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/gitopsservicev1Namespace"
                        }
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalItems": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageItemCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "gpgkeysGnuPGPublicKey": {
                "type": "object",
                "properties": {
                    "keyID": {
                        "type": "string",
                        "title": "KeyID specifies the key ID, in hexadecimal string format"
                    },
                    "fingerprint": {
                        "type": "string",
                        "title": "Fingerprint is the fingerprint of the key"
                    },
                    "owner": {
                        "type": "string",
                        "title": "Owner holds the owner identification, e.g. a name and e-mail address"
                    },
                    "trust": {
                        "type": "string",
                        "title": "Trust holds the level of trust assigned to this key"
                    },
                    "subType": {
                        "type": "string",
                        "title": "SubType holds the key's sub type (e.g. rsa4096)"
                    },
                    "keyData": {
                        "type": "string",
                        "title": "KeyData holds the raw key data, in base64 encoded format"
                    }
                },
                "title": "GnuPGPublicKey is a representation of a GnuPG public key"
            },
            "gpgkeysGnuPGPublicKeyCreateRequest": {
                "type": "object",
                "properties": {
                    "publickey": {
                        "$ref": "#/components/schemas/gpgkeysGnuPGPublicKey"
                    },
                    "upsert": {
                        "type": "boolean",
                        "title": "Whether to upsert already existing public keys"
                    }
                },
                "title": "Request to create one or more public keys on the server"
            },
            "gpgkeysGnuPGPublicKeyCreateResponse": {
                "type": "object",
                "properties": {
                    "created": {
                        "$ref": "#/components/schemas/gpgkeysGnuPGPublicKeyList"
                    },
                    "skipped": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "List of key IDs that haven been skipped because they already exist on the server"
                    }
                },
                "title": "Response to a public key creation request"
            },
            "gpgkeysGnuPGPublicKeyList": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ListMeta"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/gpgkeysGnuPGPublicKey"
                        }
                    }
                },
                "title": "GnuPGPublicKeyList is a collection of GnuPGPublicKey objects"
            },
            "gpgkeysGnuPGPublicKeyQuery": {
                "type": "object",
                "properties": {
                    "keyID": {
                        "type": "string",
                        "title": "The GPG key ID to query for"
                    }
                },
                "title": "Message to query the server for configured GPG public keys"
            },
            "gpgkeysGnuPGPublicKeyResponse": {
                "type": "object",
                "title": "Generic (empty) response for GPG public key CRUD requests"
            },
            "hrepocredsRepoCreds": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "URL is the URL that this credentials matches to"
                    },
                    "username": {
                        "type": "string",
                        "title": "Username for authenticating at the repo server"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password for authenticating at the repo server"
                    },
                    "sshPrivateKey": {
                        "type": "string",
                        "title": "SSHPrivateKey contains the private key data for authenticating at the repo server using SSH (only Git repos)"
                    },
                    "tlsClientCertData": {
                        "type": "string",
                        "title": "TLSClientCertData specifies the TLS client cert data for authenticating at the repo server"
                    },
                    "tlsClientCertKey": {
                        "type": "string",
                        "title": "TLSClientCertKey specifies the TLS client cert key for authenticating at the repo server"
                    },
                    "githubAppPrivateKey": {
                        "type": "string",
                        "title": "GithubAppPrivateKey specifies the private key PEM data for authentication via GitHub app"
                    },
                    "githubAppID": {
                        "type": "string",
                        "format": "int64",
                        "title": "GithubAppId specifies the Github App ID of the app used to access the repo for GitHub app authentication"
                    },
                    "githubAppInstallationID": {
                        "type": "string",
                        "format": "int64",
                        "title": "GithubAppInstallationId specifies the ID of the installed GitHub App for GitHub app authentication"
                    },
                    "githubAppEnterpriseBaseUrl": {
                        "type": "string",
                        "title": "GithubAppEnterpriseBaseURL specifies the GitHub API URL for GitHub app authentication. If empty will default to https://api.github.com"
                    },
                    "enableOCI": {
                        "type": "boolean",
                        "title": "EnableOCI specifies whether helm-oci support should be enabled for this repo"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type specifies the type of the repoCreds. Can be either \"git\" or \"helm. \"git\" is assumed if empty or absent."
                    },
                    "name": {
                        "type": "string",
                        "title": "Repository human readable name"
                    }
                },
                "title": "RepoCreds holds the definition for repository credentials"
            },
            "hrepocredsRepoCredsCreateRequest": {
                "type": "object",
                "properties": {
                    "creds": {
                        "$ref": "#/components/schemas/hrepocredsRepoCreds"
                    },
                    "upsert": {
                        "type": "boolean",
                        "title": "Whether to create in upsert mode"
                    }
                },
                "title": "RepoCreateRequest is a request for creating repository credentials config"
            },
            "hrepocredsRepoCredsQuery": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "title": "Repo URL for query"
                    },
                    "repoCredsType": {
                        "type": "string",
                        "title": "RepoCreds type - git or helm"
                    }
                },
                "title": "RepoCredsQuery is a query for RepoCreds resources"
            },
            "hrepocredsRepoCredsResponse": {
                "type": "object",
                "title": "RepoCredsResponse is a response to most repository credentials requests"
            },
            "hrepocredsRepoCredsUpdateRequest": {
                "type": "object",
                "properties": {
                    "creds": {
                        "$ref": "#/components/schemas/hrepocredsRepoCreds"
                    },
                    "updateMask": {
                        "$ref": "#/components/schemas/protobufFieldMask"
                    }
                },
                "title": "RepoCredsUpdateRequest is a request for updating existing repository credentials config"
            },
            "intstrIntOrString": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "format": "int64"
                    },
                    "intVal": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "strVal": {
                        "type": "string"
                    }
                },
                "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
                "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString"
            },
            "projectsEmptyResponse": {
                "type": "object"
            },
            "projectsProjectCreateRequest": {
                "type": "object",
                "properties": {
                    "project": {
                        "$ref": "#/components/schemas/appprojectsAppProject"
                    },
                    "upsert": {
                        "type": "boolean"
                    }
                },
                "description": "ProjectCreateRequest defines project creation parameters."
            },
            "projectsProjectQuery": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "title": "ProjectQuery is a query for Project resources"
            },
            "projectsProjectUpdateRequest": {
                "type": "object",
                "properties": {
                    "project": {
                        "$ref": "#/components/schemas/appprojectsAppProject"
                    }
                }
            },
            "protobufAny": {
                "type": "object",
                "properties": {
                    "type_url": {
                        "type": "string",
                        "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
                    },
                    "value": {
                        "type": "string",
                        "format": "byte",
                        "description": "Must be a valid serialized protocol buffer of the above specified type."
                    }
                },
                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
            },
            "protobufFieldMask": {
                "type": "object",
                "properties": {
                    "paths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The set of field mask paths."
                    }
                },
                "description": "paths: \"f.a\"\n    paths: \"f.b.d\"\n\nHere `f` represents a field in some root message, `a` and `b`\nfields in the message found in `f`, and `d` a field found in the\nmessage in `f.b`.\n\nField masks are used to specify a subset of fields that should be\nreturned by a get operation or modified by an update operation.\nField masks also have a custom JSON encoding (see below).\n\n# Field Masks in Projections\n\nWhen used in the context of a projection, a response message or\nsub-message is filtered by the API to only contain those fields as\nspecified in the mask. For example, if the mask in the previous\nexample is applied to a response message as follows:\n\n    f {\n      a : 22\n      b {\n        d : 1\n        x : 2\n      }\n      y : 13\n    }\n    z: 8\n\nThe result will not contain specific values for fields x,y and z\n(their value will be set to the default, and omitted in proto text\noutput):\n\n\n    f {\n      a : 22\n      b {\n        d : 1\n      }\n    }\n\nA repeated field is not allowed except at the last position of a\npaths string.\n\nIf a FieldMask object is not present in a get operation, the\noperation applies to all fields (as if a FieldMask of all fields\nhad been specified).\n\nNote that a field mask does not necessarily apply to the\ntop-level response message. In case of a REST get operation, the\nfield mask applies directly to the response, but in case of a REST\nlist operation, the mask instead applies to each individual message\nin the returned resource list. In case of a REST custom method,\nother definitions may be used. Where the mask applies will be\nclearly documented together with its declaration in the API.  In\nany case, the effect on the returned resource/resources is required\nbehavior for APIs.\n\n# Field Masks in Update Operations\n\nA field mask in update operations specifies which fields of the\ntargeted resource are going to be updated. The API is required\nto only change the values of the fields as specified in the mask\nand leave the others untouched. If a resource is passed in to\ndescribe the updated values, the API ignores the values of all\nfields not covered by the mask.\n\nIf a repeated field is specified for an update operation, new values will\nbe appended to the existing repeated field in the target resource. Note that\na repeated field is only allowed in the last position of a `paths` string.\n\nIf a sub-message is specified in the last position of the field mask for an\nupdate operation, then new value will be merged into the existing sub-message\nin the target resource.\n\nFor example, given the target message:\n\n    f {\n      b {\n        d: 1\n        x: 2\n      }\n      c: [1]\n    }\n\nAnd an update message:\n\n    f {\n      b {\n        d: 10\n      }\n      c: [2]\n    }\n\nthen if the field mask is:\n\n paths: [\"f.b\", \"f.c\"]\n\nthen the result will be:\n\n    f {\n      b {\n        d: 10\n        x: 2\n      }\n      c: [1, 2]\n    }\n\nAn implementation may provide options to override this default behavior for\nrepeated and message fields.\n\nIn order to reset a field's value to the default, the field must\nbe in the mask and set to the default value in the provided resource.\nHence, in order to reset all fields of a resource, provide a default\ninstance of the resource and set all fields in the mask, or do\nnot provide a mask as described below.\n\nIf a field mask is not present on update, the operation applies to\nall fields (as if a field mask of all fields has been specified).\nNote that in the presence of schema evolution, this may mean that\nfields the client does not know and has therefore not filled into\nthe request will be reset to their default. If this is unwanted\nbehavior, a specific service may require a client to always specify\na field mask, producing an error if not.\n\nAs with get operations, the location of the resource which\ndescribes the updated values in the request message depends on the\noperation kind. In any case, the effect of the field mask is\nrequired to be honored by the API.\n\n## Considerations for HTTP REST\n\nThe HTTP kind of an update operation which uses a field mask must\nbe set to PATCH instead of PUT in order to satisfy HTTP semantics\n(PUT must only be used for full updates).\n\n# JSON Encoding of Field Masks\n\nIn JSON, a field mask is encoded as a single string where paths are\nseparated by a comma. Fields name in each path are converted\nto/from lower-camel naming conventions.\n\nAs an example, consider the following message declarations:\n\n    message Profile {\n      User user = 1;\n      Photo photo = 2;\n    }\n    message User {\n      string display_name = 1;\n      string address = 2;\n    }\n\nIn proto a field mask for `Profile` may look as such:\n\n    mask {\n      paths: \"user.display_name\"\n      paths: \"photo\"\n    }\n\nIn JSON, the same mask is represented as below:\n\n    {\n      mask: \"user.displayName,photo\"\n    }\n\n# Field Masks and Oneof Fields\n\nField masks treat fields in oneofs just as regular fields. Consider the\nfollowing message:\n\n    message SampleMessage {\n      oneof test_oneof {\n        string name = 4;\n        SubMessage sub_message = 9;\n      }\n    }\n\nThe field mask can be:\n\n    mask {\n      paths: \"name\"\n    }\n\nOr:\n\n    mask {\n      paths: \"sub_message\"\n    }\n\nNote that oneof type names (\"test_oneof\" in this case) cannot be used in\npaths.\n\n## Field Mask Verification\n\nThe implementation of any API method which has a FieldMask type field in the\nrequest should verify the included field paths, and return an\n`INVALID_ARGUMENT` error if any path is unmappable.",
                "title": "`FieldMask` represents a set of symbolic field paths, for example:"
            },
            "protobufNullValue": {
                "type": "string",
                "enum": [
                    "NULL_VALUE"
                ],
                "default": "NULL_VALUE",
                "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
            },
            "reconcilerReconcileCountsResponse": {
                "type": "object",
                "properties": {
                    "applicationCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "clusterCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "repositoryCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "repositoryCertificateCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "gnuPGPublicKeyCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "repoCredsCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "applicationSetCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "applicationPerProjectCount": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "applicationSetPerProjectCount": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "clusterPerProjectCount": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    "repositoryPerProjectCount": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                }
            },
            "repositoriesAWSSecretRef": {
                "type": "object",
                "properties": {
                    "awsAccessKeyID": {
                        "type": "string"
                    },
                    "awsSecretAccessKey": {
                        "type": "string"
                    },
                    "awsSessionToken": {
                        "type": "string"
                    }
                }
            },
            "repositoriesAppInfo": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "title": "AppInfo contains application type and app file path"
            },
            "repositoriesCheckESOResponse": {
                "type": "object",
                "properties": {
                    "esoPresent": {
                        "type": "boolean"
                    }
                }
            },
            "repositoriesDirectoryAppSpec": {
                "type": "object",
                "title": "DirectoryAppSpec contains directory"
            },
            "repositoriesECRAuthorizationTokenGenerator": {
                "type": "object",
                "properties": {
                    "region": {
                        "type": "string"
                    },
                    "secretRef": {
                        "$ref": "#/components/schemas/repositoriesAWSSecretRef"
                    },
                    "jwtAuth": {
                        "$ref": "#/components/schemas/repositoriesServiceAccountSelector"
                    },
                    "role": {
                        "type": "string"
                    }
                },
                "description": "ECRAuthorizationTokenSpec represents externalSecret for ECR External Secret Operator generator."
            },
            "repositoriesESOGeneratorResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/repositoriesESOGeneratorType"
                    },
                    "ecrGen": {
                        "$ref": "#/components/schemas/repositoriesECRAuthorizationTokenGenerator"
                    },
                    "gcrGen": {
                        "$ref": "#/components/schemas/repositoriesGCRAccessTokenGenerator"
                    }
                }
            },
            "repositoriesESOGeneratorType": {
                "type": "string",
                "enum": [
                    "UNSET",
                    "AWS_ECR",
                    "GOOGLE_GCR"
                ],
                "default": "UNSET"
            },
            "repositoriesGCRAccessTokenGenerator": {
                "type": "object",
                "properties": {
                    "projectID": {
                        "type": "string"
                    },
                    "accessKey": {
                        "type": "string"
                    },
                    "workloadIdentity": {
                        "$ref": "#/components/schemas/repositoriesGCRWorkloadIdentity"
                    }
                }
            },
            "repositoriesGCRWorkloadIdentity": {
                "type": "object",
                "properties": {
                    "serviceAccountRef": {
                        "$ref": "#/components/schemas/repositoriesServiceAccountSelector"
                    },
                    "clusterLocation": {
                        "type": "string"
                    },
                    "clusterName": {
                        "type": "string"
                    },
                    "clusterProjectID": {
                        "type": "string"
                    }
                }
            },
            "repositoriesHelmAppSpec": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "valueFiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsHelmParameter"
                        },
                        "title": "the output of `helm inspect values`"
                    },
                    "values": {
                        "type": "string",
                        "title": "the contents of values.yaml"
                    },
                    "fileParameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsHelmFileParameter"
                        },
                        "title": "helm file parameters"
                    }
                },
                "title": "HelmAppSpec contains helm app name  in source repo"
            },
            "repositoriesHelmChart": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "repositoriesHelmChartsResponse": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/repositoriesHelmChart"
                        }
                    }
                }
            },
            "repositoriesKsonnetAppSpec": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "environments": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/repositoriesKsonnetEnvironment"
                        }
                    },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsKsonnetParameter"
                        }
                    }
                },
                "title": "KsonnetAppSpec contains Ksonnet app response\nThis roughly reflects: ksonnet/ksonnet/metadata/app/schema.go"
            },
            "repositoriesKsonnetEnvironment": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name is the user defined name of an environment"
                    },
                    "k8sVersion": {
                        "type": "string",
                        "description": "KubernetesVersion is the kubernetes version the targeted cluster is running on."
                    },
                    "destination": {
                        "$ref": "#/components/schemas/repositoriesKsonnetEnvironmentDestination"
                    }
                }
            },
            "repositoriesKsonnetEnvironmentDestination": {
                "type": "object",
                "properties": {
                    "server": {
                        "type": "string",
                        "description": "Server is the Kubernetes server that the cluster is running on."
                    },
                    "namespace": {
                        "type": "string",
                        "title": "Namespace is the namespace of the Kubernetes server that targets should be deployed to"
                    }
                }
            },
            "repositoriesKustomizeAppSpec": {
                "type": "object",
                "properties": {
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "images is a list of available images."
                    }
                },
                "title": "KustomizeAppSpec contains kustomize images"
            },
            "repositoriesManifestResponse": {
                "type": "object",
                "properties": {
                    "manifests": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "server": {
                        "type": "string"
                    },
                    "revision": {
                        "type": "string",
                        "title": "resolved revision"
                    },
                    "sourceType": {
                        "type": "string"
                    },
                    "verifyResult": {
                        "type": "string",
                        "title": "Raw response of git verify-commit operation (always the empty string for Helm)"
                    }
                }
            },
            "repositoriesRefs": {
                "type": "object",
                "properties": {
                    "branches": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "title": "A subset of the repository's named refs"
            },
            "repositoriesRepoAccessQuery": {
                "type": "object",
                "properties": {
                    "repo": {
                        "type": "string",
                        "title": "The URL to the repo"
                    },
                    "username": {
                        "type": "string",
                        "title": "Username for accessing repo"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password for accessing repo"
                    },
                    "sshPrivateKey": {
                        "type": "string",
                        "title": "Private key data for accessing SSH repository"
                    },
                    "insecure": {
                        "type": "boolean",
                        "title": "Whether to skip certificate or host key validation"
                    },
                    "tlsClientCertData": {
                        "type": "string",
                        "title": "TLS client cert data for accessing HTTPS repository"
                    },
                    "tlsClientCertKey": {
                        "type": "string",
                        "title": "TLS client cert key for accessing HTTPS repository"
                    },
                    "type": {
                        "type": "string",
                        "title": "The type of the repo"
                    },
                    "name": {
                        "type": "string",
                        "title": "The name of the repo"
                    },
                    "enableOci": {
                        "type": "boolean",
                        "title": "Whether helm-oci support should be enabled for this repo"
                    },
                    "githubAppPrivateKey": {
                        "type": "string",
                        "title": "Github App Private Key PEM data"
                    },
                    "githubAppID": {
                        "type": "string",
                        "format": "int64",
                        "title": "Github App ID of the app used to access the repo"
                    },
                    "githubAppInstallationID": {
                        "type": "string",
                        "format": "int64",
                        "title": "Github App Installation ID of the installed GitHub App"
                    },
                    "githubAppEnterpriseBaseUrl": {
                        "type": "string",
                        "title": "Github App Enterprise base url if empty will default to https://api.github.com"
                    },
                    "proxy": {
                        "type": "string",
                        "title": "HTTP/HTTPS proxy to access the repository"
                    },
                    "project": {
                        "type": "string",
                        "title": "Reference between project and repository that allow you automatically to be added as item inside SourceRepos project entity"
                    },
                    "connectionType": {
                        "type": "string",
                        "title": "Connection type of the repository"
                    },
                    "updateMask": {
                        "$ref": "#/components/schemas/protobufFieldMask"
                    }
                },
                "title": "RepoAccessQuery is a query for checking access to a repo"
            },
            "repositoriesRepoAppDetailsQuery": {
                "type": "object",
                "properties": {
                    "source": {
                        "$ref": "#/components/schemas/applicationsApplicationSource"
                    },
                    "appName": {
                        "type": "string"
                    },
                    "appProject": {
                        "type": "string"
                    },
                    "sourceIndex": {
                        "type": "integer",
                        "format": "int32",
                        "title": "source index (for multi source apps)"
                    },
                    "versionId": {
                        "type": "integer",
                        "format": "int32",
                        "title": "versionId from historical data (for multi source apps)"
                    }
                },
                "title": "RepoAppDetailsQuery contains query information for app details request"
            },
            "repositoriesRepoAppDetailsResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "ksonnet": {
                        "$ref": "#/components/schemas/repositoriesKsonnetAppSpec"
                    },
                    "helm": {
                        "$ref": "#/components/schemas/repositoriesHelmAppSpec"
                    },
                    "kustomize": {
                        "$ref": "#/components/schemas/repositoriesKustomizeAppSpec"
                    },
                    "directory": {
                        "$ref": "#/components/schemas/repositoriesDirectoryAppSpec"
                    }
                },
                "title": "RepoAppDetailsResponse application details"
            },
            "repositoriesRepoAppsQuery": {
                "type": "object",
                "properties": {
                    "repo": {
                        "type": "string"
                    },
                    "revision": {
                        "type": "string"
                    },
                    "appName": {
                        "type": "string"
                    },
                    "appProject": {
                        "type": "string"
                    }
                },
                "title": "RepoAppsQuery is a query for Repository apps"
            },
            "repositoriesRepoAppsResponse": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/repositoriesAppInfo"
                        }
                    }
                },
                "title": "RepoAppsResponse contains applications of specified repository"
            },
            "repositoriesRepoCreateRequest": {
                "type": "object",
                "properties": {
                    "repo": {
                        "$ref": "#/components/schemas/repositoriesRepository"
                    },
                    "upsert": {
                        "type": "boolean",
                        "title": "Whether to create in upsert mode"
                    },
                    "credsOnly": {
                        "type": "boolean",
                        "title": "Whether to operate on credential set instead of repository"
                    },
                    "genType": {
                        "$ref": "#/components/schemas/repositoriesESOGeneratorType"
                    },
                    "ecrGen": {
                        "$ref": "#/components/schemas/repositoriesECRAuthorizationTokenGenerator"
                    },
                    "gcrGen": {
                        "$ref": "#/components/schemas/repositoriesGCRAccessTokenGenerator"
                    },
                    "refreshInterval": {
                        "type": "string",
                        "description": "refreshInterval in format 1s, 1m, 1h..."
                    }
                },
                "title": "RepoCreateRequest is a request for creating repository config"
            },
            "repositoriesRepoQuery": {
                "type": "object",
                "properties": {
                    "repo": {
                        "type": "string",
                        "title": "Repo URL for query"
                    },
                    "forceRefresh": {
                        "type": "boolean",
                        "title": "Whether to force a cache refresh on repo's connection state"
                    },
                    "project": {
                        "type": "string",
                        "title": "The associated project project"
                    }
                },
                "title": "RepoQuery is a query for Repository resources"
            },
            "repositoriesRepoResponse": {
                "type": "object"
            },
            "repositoriesRepoUpdateRequest": {
                "type": "object",
                "properties": {
                    "repo": {
                        "$ref": "#/components/schemas/repositoriesRepository"
                    },
                    "updateMask": {
                        "$ref": "#/components/schemas/protobufFieldMask"
                    },
                    "genType": {
                        "$ref": "#/components/schemas/repositoriesESOGeneratorType"
                    },
                    "ecrGen": {
                        "$ref": "#/components/schemas/repositoriesECRAuthorizationTokenGenerator"
                    },
                    "gcrGen": {
                        "$ref": "#/components/schemas/repositoriesGCRAccessTokenGenerator"
                    },
                    "refreshInterval": {
                        "type": "string",
                        "description": "refreshInterval in format 1s, 1m, 1h..."
                    }
                }
            },
            "repositoriesRepository": {
                "type": "object",
                "properties": {
                    "repo": {
                        "type": "string",
                        "title": "Repo contains the URL to the remote repository"
                    },
                    "username": {
                        "type": "string",
                        "title": "Username contains the user name used for authenticating at the remote repository"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password contains the password or PAT used for authenticating at the remote repository"
                    },
                    "sshPrivateKey": {
                        "type": "string",
                        "description": "SSHPrivateKey contains the PEM data for authenticating at the repo server. Only used with Git repos."
                    },
                    "connectionState": {
                        "$ref": "#/components/schemas/commonsConnectionState"
                    },
                    "insecureIgnoreHostKey": {
                        "type": "boolean",
                        "title": "InsecureIgnoreHostKey should not be used anymore, Insecure is favoured\nUsed only for Git repos"
                    },
                    "insecure": {
                        "type": "boolean",
                        "title": "Insecure specifies whether the connection to the repository ignores any errors when verifying TLS certificates or SSH host keys"
                    },
                    "enableLfs": {
                        "type": "boolean",
                        "description": "EnableLFS specifies whether git-lfs support should be enabled for this repo. Only valid for Git repositories."
                    },
                    "tlsClientCertData": {
                        "type": "string",
                        "title": "TLSClientCertData contains a certificate in PEM format for authenticating at the repo server"
                    },
                    "tlsClientCertKey": {
                        "type": "string",
                        "title": "TLSClientCertKey contains a private key in PEM format for authenticating at the repo server"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type specifies the type of the repo. Can be either \"git\" or \"helm. \"git\" is assumed if empty or absent."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name specifies a name to be used for this repo. Only used with Helm repos"
                    },
                    "inheritedCreds": {
                        "type": "boolean",
                        "title": "Whether credentials were inherited from a credential set"
                    },
                    "enableOCI": {
                        "type": "boolean",
                        "title": "EnableOCI specifies whether helm-oci support should be enabled for this repo"
                    },
                    "githubAppPrivateKey": {
                        "type": "string",
                        "title": "Github App Private Key PEM data"
                    },
                    "githubAppID": {
                        "type": "string",
                        "format": "int64",
                        "title": "GithubAppId specifies the ID of the GitHub app used to access the repo"
                    },
                    "githubAppInstallationID": {
                        "type": "string",
                        "format": "int64",
                        "title": "GithubAppInstallationId specifies the installation ID of the GitHub App used to access the repo"
                    },
                    "githubAppEnterpriseBaseUrl": {
                        "type": "string",
                        "title": "GithubAppEnterpriseBaseURL specifies the base URL of GitHub Enterprise installation. If empty will default to https://api.github.com"
                    },
                    "proxy": {
                        "type": "string",
                        "title": "Proxy specifies the HTTP/HTTPS proxy used to access the repo"
                    },
                    "project": {
                        "type": "string",
                        "title": "Reference between project and repository that allow you automatically to be added as item inside SourceRepos project entity"
                    },
                    "connectionType": {
                        "type": "string",
                        "title": "Identifies the authentication method used to connect to the repository"
                    },
                    "forceHttpBasicAuth": {
                        "type": "boolean",
                        "title": "ForceHttpBasicAuth specifies whether Argo CD should attempt to force basic auth for HTTP connections"
                    },
                    "noProxy": {
                        "type": "string",
                        "title": "NoProxy specifies a list of targets where the proxy isn't used, applies only in cases where the proxy is applied"
                    }
                },
                "title": "Repository is a repository holding application configurations"
            },
            "repositoriesRepositoryList": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ListMeta"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/repositoriesRepository"
                        }
                    }
                },
                "description": "RepositoryList is a collection of Repositories."
            },
            "repositoriesRevisionMetadata": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "title": "who authored this revision,\ntypically their name and email, e.g. \"John Doe <john_doe@my-company.com>\",\nbut might not match this example"
                    },
                    "date": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Tags specifies any tags currently attached to the revision\nFloating tags can move from one revision to another"
                    },
                    "message": {
                        "type": "string",
                        "title": "Message contains the message associated with the revision, most likely the commit message.\nThe message is truncated to the first newline or 64 characters (which ever comes first)"
                    },
                    "signatureInfo": {
                        "type": "string",
                        "description": "SignatureInfo contains a hint on the signer if the revision was signed with GPG, and signature verification is enabled."
                    }
                },
                "title": "RevisionMetadata contains metadata for a specific revision in a Git repository"
            },
            "repositoriesServiceAccountSelector": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "audiences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "resourceQuantity": {
                "type": "object",
                "properties": {
                    "string": {
                        "type": "string"
                    }
                },
                "description": "Quantity is a fixed-point representation of a number.\nIt provides convenient marshaling/unmarshaling in JSON and YAML,\nin addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n```\n<quantity>        ::= <signedNumber><suffix>\n\n\t(Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n\n<digit>           ::= 0 | 1 | ... | 9\n<digits>          ::= <digit> | <digit><digits>\n<number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>\n<sign>            ::= \"+\" | \"-\"\n<signedNumber>    ::= <number> | <sign><number>\n<suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>\n<binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n\n\t(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n\n\t(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n```\n\nNo matter which of the three exponent forms is used, no quantity may represent\na number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal\nplaces. Numbers larger or more precise will be capped or rounded up.\n(E.g.: 0.1m will rounded up to 1m.)\nThis may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix\nit had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\".\nThis means that Exponent/suffix will be adjusted up or down (with a\ncorresponding increase or decrease in Mantissa) such that:\n\n- No precision is lost\n- No fractional digits will be emitted\n- The exponent (or suffix) is as large as possible.\n\nThe sign will be omitted unless the number is negative.\n\nExamples:\n\n- 1.5 will be serialized as \"1500m\"\n- 1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a\nfloating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed,\nbut will be re-emitted in their canonical form. (So always use canonical\nform, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without\nwriting some sort of special handling code in the hopes that that will\ncause implementors to also use a fixed point implementation.\n\n+protobuf=true\n+protobuf.embed=string\n+protobuf.options.marshal=false\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:deepcopy-gen=true\n+k8s:openapi-gen=true"
            },
            "runtimeStreamError": {
                "type": "object",
                "properties": {
                    "grpc_code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "http_code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    },
                    "http_status": {
                        "type": "string"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/protobufAny"
                        }
                    }
                }
            },
            "servicev1AppProject": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "name": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    }
                }
            },
            "servicev1AppProjectMapping": {
                "type": "object",
                "properties": {
                    "appProjMap": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/servicev1Project"
                        }
                    }
                }
            },
            "servicev1Application": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    },
                    "name": {
                        "type": "string"
                    },
                    "clusterIdentifier": {
                        "type": "string"
                    },
                    "repoIdentifier": {
                        "type": "string"
                    },
                    "app": {
                        "$ref": "#/components/schemas/applicationsApplication"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "stale": {
                        "type": "boolean"
                    },
                    "skipRepoValidation": {
                        "type": "boolean"
                    },
                    "repoIdentifiers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "parentAppRef": {
                        "type": "string",
                        "description": "Reference of owner application (Application Set)"
                    }
                }
            },
            "servicev1ApplicationDeleteRequestOptions": {
                "type": "object",
                "properties": {
                    "removeExistingFinalizers": {
                        "type": "boolean"
                    }
                }
            },
            "servicev1ApplicationPatchRequest": {
                "type": "object",
                "properties": {
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    },
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "request": {
                        "$ref": "#/components/schemas/applicationsApplicationPatchRequest"
                    }
                }
            },
            "servicev1ApplicationQuery": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "searchTerm": {
                        "type": "string"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "filter": {
                        "type": "object",
                        "description": "Filters for Application. Eg. \"app.status.sync.status\": \"Synced\" or \"app.status.sync.status\": { \"$in\": [\"Synced\", \"NotSynced\"]"
                    },
                    "sortBy": {
                        "$ref": "#/components/schemas/ApplicationQueryApplicationSortByOptions"
                    },
                    "sortOrder": {
                        "$ref": "#/components/schemas/v1SortOrderOptions"
                    },
                    "metadataOnly": {
                        "type": "boolean"
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "servicev1ApplicationSet": {
                "type": "object",
                "properties": {
                    "identifier": {
                        "type": "string",
                        "description": "UUID for the Application Set."
                    },
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "owner": {
                        "type": "string"
                    },
                    "appset": {
                        "$ref": "#/components/schemas/applicationsApplicationSet"
                    }
                }
            },
            "servicev1ApplicationSetList": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/servicev1ApplicationSet"
                        }
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalItems": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageItemCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "servicev1Applicationlist": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/servicev1Application"
                        }
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalItems": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageItemCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "servicev1Cluster": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "cluster": {
                        "$ref": "#/components/schemas/clustersCluster"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "stale": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "servicev1ClusterQuery": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "searchTerm": {
                        "type": "string"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "filter": {
                        "type": "object",
                        "description": "Filters for Clusters. Eg. \"identifier\": { \"$in\": [\"id1\", \"id2\"]"
                    },
                    "sortBy": {
                        "$ref": "#/components/schemas/ClusterQueryClusterSortByOptions"
                    },
                    "sortOrder": {
                        "$ref": "#/components/schemas/v1SortOrderOptions"
                    }
                }
            },
            "servicev1GnuPGPublicKeyList": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1Gnupg"
                        }
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalItems": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageItemCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "servicev1HealthStatus": {
                "type": "string",
                "enum": [
                    "HEALTH_STATUS_UNSET",
                    "HEALTHY",
                    "UNHEALTHY"
                ],
                "default": "HEALTH_STATUS_UNSET"
            },
            "servicev1Project": {
                "type": "object",
                "properties": {
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    }
                }
            },
            "servicev1ReconcilerFilter": {
                "type": "object",
                "properties": {
                    "projectNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "servicev1Repository": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "repository": {
                        "$ref": "#/components/schemas/repositoriesRepository"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "stale": {
                        "type": "boolean"
                    },
                    "repositoryCredentialsId": {
                        "type": "string"
                    }
                }
            },
            "servicev1RepositoryCertificate": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    },
                    "cert": {
                        "$ref": "#/components/schemas/certificatesRepositoryCertificate"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "servicev1RepositoryCredentials": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "repoCreds": {
                        "$ref": "#/components/schemas/hrepocredsRepoCreds"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "stale": {
                        "type": "boolean"
                    }
                }
            },
            "servicev1RepositoryCredentialsList": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/servicev1RepositoryCredentials"
                        }
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalItems": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageItemCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "v1AWSElasticBlockStoreVolumeSource": {
                "type": "object",
                "properties": {
                    "volumeID": {
                        "type": "string",
                        "title": "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
                    },
                    "fsType": {
                        "type": "string",
                        "title": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
                    },
                    "partition": {
                        "type": "integer",
                        "format": "int32",
                        "title": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\n+optional"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "title": "readOnly value true will force the readOnly setting in VolumeMounts.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n+optional"
                    }
                },
                "description": "Represents a Persistent Disk resource in AWS.\n\nAn AWS EBS disk must exist before mounting to a container. The disk\nmust also be in the same AWS zone as the kubelet. An AWS EBS disk\ncan only be mounted as read/write once. AWS EBS volumes support\nownership management and SELinux relabeling."
            },
            "v1Affinity": {
                "type": "object",
                "properties": {
                    "nodeAffinity": {
                        "$ref": "#/components/schemas/v1NodeAffinity"
                    },
                    "podAffinity": {
                        "$ref": "#/components/schemas/v1PodAffinity"
                    },
                    "podAntiAffinity": {
                        "$ref": "#/components/schemas/v1PodAntiAffinity"
                    }
                },
                "description": "Affinity is a group of affinity scheduling rules."
            },
            "v1Agent": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity.",
                        "title": "The ID of the Harness Account that this gitops-agent belongs to"
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity.",
                        "title": "The ID of the Harness Project that this gitops-agent belongs to"
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity.",
                        "title": "The ID of the Harness Organization that this gitops-agent belongs to"
                    },
                    "identifier": {
                        "type": "string",
                        "title": "The gitops-server generated ID for this gitops-agent"
                    },
                    "name": {
                        "type": "string",
                        "title": "A human readable name for the gitops-agent"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/v1AgentMetadata"
                    },
                    "description": {
                        "type": "string",
                        "title": "A human readable description for the gitops-agent"
                    },
                    "type": {
                        "$ref": "#/components/schemas/v1AgentType"
                    },
                    "createdAt": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "lastModifiedAt": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Tags that help organize gitops-agents"
                    },
                    "health": {
                        "$ref": "#/components/schemas/v1AgentHealth"
                    },
                    "credentials": {
                        "$ref": "#/components/schemas/v1AgentCredentials"
                    },
                    "version": {
                        "$ref": "#/components/schemas/v1SemanticVersion"
                    },
                    "upgradeAvailable": {
                        "type": "boolean",
                        "title": "Indicates whether this agent has an upgrade available (i.e. the version of this gitops-agent is not the latest released)"
                    },
                    "scope": {
                        "$ref": "#/components/schemas/v1AgentScope"
                    },
                    "disasterRecoveryNode": {
                        "$ref": "#/components/schemas/v1DisasterRecoveryNode"
                    },
                    "isPLG": {
                        "type": "boolean",
                        "description": "Indicates if the agent is for PLG."
                    },
                    "operator": {
                        "$ref": "#/components/schemas/v1AgentOperator"
                    },
                    "prefixedIdentifier": {
                        "type": "string",
                        "description": "The scoped identifier of the agent. This is a combination of the account, org, project, and agent identifiers."
                    }
                },
                "title": "A gitops-agent"
            },
            "v1AgentComponentHealth": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/servicev1HealthStatus"
                    },
                    "k8sError": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    }
                }
            },
            "v1AgentCredentials": {
                "type": "object",
                "properties": {
                    "privateKey": {
                        "type": "string"
                    },
                    "publicKey": {
                        "type": "string"
                    }
                }
            },
            "v1AgentHealth": {
                "type": "object",
                "properties": {
                    "lastHeartbeat": {
                        "type": "string",
                        "format": "date-time",
                        "title": "The last time the agent sent a HeartbeatRequest"
                    },
                    "argoRepoServer": {
                        "$ref": "#/components/schemas/v1AgentComponentHealth"
                    },
                    "argoAppController": {
                        "$ref": "#/components/schemas/v1AgentComponentHealth"
                    },
                    "argoRedisServer": {
                        "$ref": "#/components/schemas/v1AgentComponentHealth"
                    },
                    "harnessGitopsAgent": {
                        "$ref": "#/components/schemas/v1AgentComponentHealth"
                    },
                    "connectionStatus": {
                        "$ref": "#/components/schemas/v1ConnectedStatus"
                    },
                    "argoAppSetController": {
                        "$ref": "#/components/schemas/v1AgentComponentHealth"
                    }
                }
            },
            "v1AgentList": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1Agent"
                        }
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalItems": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageItemCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "v1AgentMetadata": {
                "type": "object",
                "properties": {
                    "namespace": {
                        "type": "string",
                        "title": "The k8s namespace that this agent resides in"
                    },
                    "highAvailability": {
                        "type": "boolean",
                        "title": "Whether or not this deployment should be deployed using deploy-ha.yaml"
                    },
                    "deployedApplicationCount": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Number of Deployed Applications"
                    },
                    "existingInstallation": {
                        "type": "boolean",
                        "title": "If the agent is running in an existing argo installation"
                    },
                    "mappedProjects": {
                        "$ref": "#/components/schemas/servicev1AppProjectMapping"
                    },
                    "infraType": {
                        "$ref": "#/components/schemas/v1ClusterInfraType"
                    },
                    "isNamespaced": {
                        "type": "boolean"
                    }
                }
            },
            "v1AgentOperator": {
                "type": "string",
                "enum": [
                    "UNKNOWN",
                    "ARGO",
                    "FLAMINGO"
                ],
                "default": "UNKNOWN"
            },
            "v1AgentQuery": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/v1AgentType"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "searchTerm": {
                        "type": "string"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "scope": {
                        "$ref": "#/components/schemas/v1AgentScope"
                    },
                    "filter": {
                        "type": "object",
                        "description": "Filters for Agents."
                    },
                    "drIdentifier": {
                        "type": "string"
                    },
                    "sortBy": {
                        "$ref": "#/components/schemas/AgentQueryAgentSortByOptions"
                    },
                    "sortOrder": {
                        "$ref": "#/components/schemas/v1SortOrderOptions"
                    },
                    "metadataOnly": {
                        "type": "boolean"
                    },
                    "ignoreScope": {
                        "type": "boolean"
                    },
                    "connectedStatus": {
                        "$ref": "#/components/schemas/v1ConnectedStatus"
                    },
                    "healthStatus": {
                        "$ref": "#/components/schemas/servicev1HealthStatus"
                    },
                    "withCredentials": {
                        "type": "boolean",
                        "description": "Applicable when trying to retrieve an agent. Set to true to include the credentials for the agent in the response. (Private key may not be included in response if agent is already connected to harness). NOTE: Setting this to true requires the user to have edit permissions on Agent."
                    },
                    "includeSecondary": {
                        "type": "boolean"
                    },
                    "mappedProjects": {
                        "$ref": "#/components/schemas/servicev1AppProjectMapping"
                    }
                }
            },
            "v1AgentScaleRequest": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "replicas": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "v1AgentScope": {
                "type": "string",
                "enum": [
                    "AGENT_SCOPE_UNSET",
                    "ACCOUNT",
                    "ORG",
                    "PROJECT"
                ],
                "default": "AGENT_SCOPE_UNSET"
            },
            "v1AgentSetPrimaryNodeRequest": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    },
                    "disasterRecoveryIdentifier": {
                        "type": "string",
                        "description": "Disaster Recovery Identifier for entity."
                    },
                    "disableSyncWindows": {
                        "type": "boolean",
                        "description": "Disable sync windows for the new primary agent."
                    }
                }
            },
            "v1AgentType": {
                "type": "string",
                "enum": [
                    "AGENT_TYPE_UNSET",
                    "CONNECTED_ARGO_PROVIDER",
                    "MANAGED_ARGO_PROVIDER",
                    "HOSTED_ARGO_PROVIDER"
                ],
                "default": "AGENT_TYPE_UNSET",
                "description": "AgentType is the type of agent. CONNECTED_ARGO_PROVIDER is deprecated and will be removed in a future release.\n\nPlease use type \"MANAGED_ARGO_PROVIDER\" to create your agents.\n\n\"MANAGED_ARGO_PROVIDER\" agents are user managed agents and \"HOSTED_ARGO_PROVIDER\" agents are Harness managed agents(these cannot be created by users directly)."
            },
            "v1AgentYamlQuery": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "disasterRecoveryIdentifier": {
                        "type": "string",
                        "description": "Disaster Recovery Identifier for entity."
                    },
                    "skipCrds": {
                        "type": "boolean"
                    },
                    "caData": {
                        "type": "string",
                        "description": "Certificate chain for the agent, must be base64 encoded."
                    },
                    "proxy": {
                        "$ref": "#/components/schemas/v1Proxy"
                    },
                    "privateKey": {
                        "type": "string"
                    },
                    "argocdSettings": {
                        "$ref": "#/components/schemas/v1ArgoCDSettings"
                    }
                }
            },
            "v1AnalysisRunArgument": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name argument name"
                    },
                    "value": {
                        "type": "string",
                        "title": "Value a hardcoded value for the argument. This field is a one of field with valueFrom"
                    },
                    "valueFrom": {
                        "$ref": "#/components/schemas/v1ArgumentValueFrom"
                    }
                },
                "title": "AnalysisRunArgument argument to add to analysisRun"
            },
            "v1AnalysisRunMetadata": {
                "type": "object",
                "properties": {
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Labels Additional labels to add to the AnalysisRun\n+optional"
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Annotations additional annotations to add to the AnalysisRun\n+optional"
                    }
                },
                "title": "AnalysisRunMetadata extra labels to add to the AnalysisRun"
            },
            "v1AppArmorProfile": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.\n+unionDiscriminator"
                    },
                    "localhostProfile": {
                        "type": "string",
                        "title": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".\n+optional"
                    }
                },
                "title": "AppArmorProfile defines a pod or container's AppArmor settings.\n+union"
            },
            "v1AppProjectMappingCreateRequestV2": {
                "type": "object",
                "properties": {
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    },
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "argoProjectName": {
                        "type": "string"
                    }
                }
            },
            "v1AppProjectMappingList": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/servicev1AppProject"
                        }
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalItems": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageItemCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "v1AppProjectMappingQueryV2": {
                "type": "object",
                "properties": {
                    "identifier": {
                        "type": "string",
                        "description": "app project mapping identifier."
                    },
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    },
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "argoProjectName": {
                        "type": "string"
                    }
                }
            },
            "v1AppProjectMappingV2": {
                "type": "object",
                "properties": {
                    "identifier": {
                        "type": "string"
                    },
                    "ArgoProjectName": {
                        "type": "string"
                    },
                    "projectIdentifier": {
                        "type": "string"
                    },
                    "orgIdentifier": {
                        "type": "string"
                    },
                    "accountIdentifier": {
                        "type": "string"
                    },
                    "agentIdentifier": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "v1AppProjectMappingV2List": {
                "type": "object",
                "properties": {
                    "appProjectMappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1AppProjectMappingV2"
                        }
                    }
                }
            },
            "v1ApplicationAttributes": {
                "type": "object",
                "properties": {
                    "applicationIdentifier": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "v1ApplicationAttributesList": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ApplicationAttributes"
                        }
                    }
                }
            },
            "v1ApplicationSetGeneratorList": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/applicationsApplicationSetGenerator"
                        }
                    }
                }
            },
            "v1ApplicationSetQuery": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    },
                    "searchTerm": {
                        "type": "string"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "filter": {
                        "type": "object",
                        "description": "Filters for ApplicationSet. Eg. \"app.status.sync.status\": \"Synced\" or \"app.status.sync.status\": { \"$in\": [\"Synced\", \"NotSynced\"]"
                    },
                    "sortBy": {
                        "$ref": "#/components/schemas/ApplicationSetQueryApplicationSetSortByOptions"
                    },
                    "sortOrder": {
                        "$ref": "#/components/schemas/v1SortOrderOptions"
                    },
                    "metadataOnly": {
                        "type": "boolean"
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v1ApplicationStatusCounts": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "healthStatusCounts": {
                        "$ref": "#/components/schemas/v1HealthStatusCounts"
                    },
                    "syncStatusCounts": {
                        "$ref": "#/components/schemas/v1SyncStatusCounts"
                    }
                }
            },
            "v1ApplicationSyncStatus": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    },
                    "applicationName": {
                        "type": "string"
                    },
                    "syncStatus": {
                        "$ref": "#/components/schemas/applicationsSyncStatus"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "int64"
                    },
                    "lastModifiedAt": {
                        "type": "string",
                        "format": "int64"
                    },
                    "operationState": {
                        "$ref": "#/components/schemas/applicationsOperationState"
                    },
                    "reqIdentifier": {
                        "type": "string"
                    },
                    "lastKnownRevisionId": {
                        "type": "string",
                        "format": "int64"
                    },
                    "syncedBy": {
                        "$ref": "#/components/schemas/v1User"
                    },
                    "autoSyncCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "serviceRef": {
                        "type": "string"
                    },
                    "envRef": {
                        "type": "string"
                    }
                }
            },
            "v1ApplicationSyncStatusQuery": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    },
                    "applicationName": {
                        "type": "string"
                    },
                    "searchTerm": {
                        "type": "string"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "endTime": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "startTime": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "operationPhase": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1OperationPhase"
                        }
                    },
                    "serviceRef": {
                        "type": "string"
                    },
                    "envRef": {
                        "type": "string"
                    }
                }
            },
            "v1ApplicationSyncStatuslist": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ApplicationSyncStatus"
                        }
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalItems": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageItemCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "v1ArgoCDSettings": {
                "type": "object",
                "properties": {
                    "enableHelmPathTraversal": {
                        "type": "boolean",
                        "description": "Controls the Environment variable HELM_SECRETS_VALUES_ALLOW_PATH_TRAVERSAL to allow or deny dot-dot-slash values file paths. Disabled by default for security reasons. This config is pushed as an env variable to the repo-server."
                    },
                    "forceEnableInCluster": {
                        "type": "boolean",
                        "description": "For a Namespaced gitops agent, incluster is disabled by default. (controlled through variable `cluster.inclusterEnabled` in argocd-cm configmap. NOTE that you will have to manually restrict your namespaced agent's scope to its own cluster since this essentially makes the namespaced agent have access to incluster completely including creating clusterroles."
                    }
                }
            },
            "v1ArgumentValueFrom": {
                "type": "object",
                "properties": {
                    "podTemplateHashValue": {
                        "type": "string",
                        "title": "PodTemplateHashValue gets the value from one of the children ReplicaSet's Pod Template Hash"
                    },
                    "fieldRef": {
                        "$ref": "#/components/schemas/v1FieldRef"
                    }
                },
                "title": "ArgumentValueFrom defines references to fields within resources to grab for the value (i.e. Pod Template Hash)"
            },
            "v1AzureDiskVolumeSource": {
                "type": "object",
                "properties": {
                    "diskName": {
                        "type": "string",
                        "title": "diskName is the Name of the data disk in the blob storage"
                    },
                    "diskURI": {
                        "type": "string",
                        "title": "diskURI is the URI of data disk in the blob storage"
                    },
                    "cachingMode": {
                        "type": "string",
                        "title": "cachingMode is the Host Caching mode: None, Read Only, Read Write.\n+optional\n+default=ref(AzureDataDiskCachingReadWrite)"
                    },
                    "fsType": {
                        "type": "string",
                        "title": "fsType is Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional\n+default=\"ext4\""
                    },
                    "readOnly": {
                        "type": "boolean",
                        "title": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional\n+default=false"
                    },
                    "kind": {
                        "type": "string",
                        "title": "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared\n+default=ref(AzureSharedBlobDisk)"
                    }
                },
                "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
            },
            "v1AzureFileVolumeSource": {
                "type": "object",
                "properties": {
                    "secretName": {
                        "type": "string",
                        "title": "secretName is the  name of secret that contains Azure Storage Account Name and Key"
                    },
                    "shareName": {
                        "type": "string",
                        "title": "shareName is the azure share Name"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "title": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
                    }
                },
                "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod."
            },
            "v1CSIVolumeSource": {
                "type": "object",
                "properties": {
                    "driver": {
                        "type": "string",
                        "description": "driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster."
                    },
                    "readOnly": {
                        "type": "boolean",
                        "title": "readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write).\n+optional"
                    },
                    "fsType": {
                        "type": "string",
                        "title": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply.\n+optional"
                    },
                    "volumeAttributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values.\n+optional"
                    },
                    "nodePublishSecretRef": {
                        "$ref": "#/components/schemas/v1LocalObjectReference"
                    }
                },
                "title": "Represents a source location of a volume to mount, managed by an external CSI driver"
            },
            "v1CanaryStep": {
                "type": "object",
                "properties": {
                    "setWeight": {
                        "type": "integer",
                        "format": "int32",
                        "title": "SetWeight sets what percentage of the newRS should receive"
                    },
                    "pause": {
                        "$ref": "#/components/schemas/v1RolloutPause"
                    },
                    "experiment": {
                        "$ref": "#/components/schemas/v1RolloutExperimentStep"
                    },
                    "analysis": {
                        "$ref": "#/components/schemas/v1RolloutAnalysis"
                    },
                    "setCanaryScale": {
                        "$ref": "#/components/schemas/v1SetCanaryScale"
                    },
                    "setHeaderRoute": {
                        "$ref": "#/components/schemas/v1SetHeaderRoute"
                    },
                    "setMirrorRoute": {
                        "$ref": "#/components/schemas/v1SetMirrorRoute"
                    }
                },
                "description": "CanaryStep defines a step of a canary deployment."
            },
            "v1Capabilities": {
                "type": "object",
                "properties": {
                    "add": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Added capabilities\n+optional\n+listType=atomic"
                    },
                    "drop": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Removed capabilities\n+optional\n+listType=atomic"
                    }
                },
                "description": "Adds and removes POSIX capabilities from running containers."
            },
            "v1CephFSVolumeSource": {
                "type": "object",
                "properties": {
                    "monitors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "monitors is Required: Monitors is a collection of Ceph monitors\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+listType=atomic"
                    },
                    "path": {
                        "type": "string",
                        "title": "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /\n+optional"
                    },
                    "user": {
                        "type": "string",
                        "title": "user is optional: User is the rados user name, default is admin\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional"
                    },
                    "secretFile": {
                        "type": "string",
                        "title": "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional"
                    },
                    "secretRef": {
                        "$ref": "#/components/schemas/v1LocalObjectReference"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "title": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional"
                    }
                },
                "description": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod\nCephfs volumes do not support ownership management or SELinux relabeling."
            },
            "v1Certificatelist": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/servicev1RepositoryCertificate"
                        }
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalItems": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageItemCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "v1CinderVolumeSource": {
                "type": "object",
                "properties": {
                    "volumeID": {
                        "type": "string",
                        "title": "volumeID used to identify the volume in cinder.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
                    },
                    "fsType": {
                        "type": "string",
                        "title": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md\n+optional"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "title": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md\n+optional"
                    },
                    "secretRef": {
                        "$ref": "#/components/schemas/v1LocalObjectReference"
                    }
                },
                "description": "Represents a cinder volume resource in Openstack.\nA Cinder volume must exist before mounting to a container.\nThe volume must also be in the same region as the kubelet.\nCinder volumes support ownership management and SELinux relabeling."
            },
            "v1CloudWatchMetric": {
                "type": "object",
                "properties": {
                    "interval": {
                        "type": "string"
                    },
                    "metricDataQueries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1CloudWatchMetricDataQuery"
                        }
                    }
                },
                "title": "CloudWatchMetric defines the cloudwatch query to perform canary analysis"
            },
            "v1CloudWatchMetricDataQuery": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "expression": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "metricStat": {
                        "$ref": "#/components/schemas/v1CloudWatchMetricStat"
                    },
                    "period": {
                        "$ref": "#/components/schemas/intstrIntOrString"
                    },
                    "returnData": {
                        "type": "boolean"
                    }
                },
                "title": "CloudWatchMetricDataQuery defines the cloudwatch query"
            },
            "v1CloudWatchMetricStat": {
                "type": "object",
                "properties": {
                    "metric": {
                        "$ref": "#/components/schemas/v1CloudWatchMetricStatMetric"
                    },
                    "period": {
                        "$ref": "#/components/schemas/intstrIntOrString"
                    },
                    "stat": {
                        "type": "string"
                    },
                    "unit": {
                        "type": "string"
                    }
                }
            },
            "v1CloudWatchMetricStatMetric": {
                "type": "object",
                "properties": {
                    "dimensions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1CloudWatchMetricStatMetricDimension"
                        }
                    },
                    "metricName": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    }
                }
            },
            "v1CloudWatchMetricStatMetricDimension": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "v1ClusterInfraType": {
                "type": "string",
                "enum": [
                    "UNSET",
                    "OPENSHIFT"
                ],
                "default": "UNSET",
                "title": "Agent destination cluster type"
            },
            "v1ClusterTrustBundleProjection": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Select a single ClusterTrustBundle by object name.  Mutually-exclusive\nwith signerName and labelSelector.\n+optional"
                    },
                    "signerName": {
                        "type": "string",
                        "title": "Select all ClusterTrustBundles that match this signer name.\nMutually-exclusive with name.  The contents of all selected\nClusterTrustBundles will be unified and deduplicated.\n+optional"
                    },
                    "labelSelector": {
                        "$ref": "#/components/schemas/v1LabelSelector"
                    },
                    "optional": {
                        "type": "boolean",
                        "title": "If true, don't block pod startup if the referenced ClusterTrustBundle(s)\naren't available.  If using name, then the named ClusterTrustBundle is\nallowed not to exist.  If using signerName, then the combination of\nsignerName and labelSelector is allowed to match zero\nClusterTrustBundles.\n+optional"
                    },
                    "path": {
                        "type": "string",
                        "description": "Relative path from the volume root to write the bundle."
                    }
                },
                "description": "ClusterTrustBundleProjection describes how to select a set of\nClusterTrustBundle objects and project their contents into the pod\nfilesystem."
            },
            "v1Clusterlist": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/servicev1Cluster"
                        }
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalItems": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageItemCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "v1ConfigMapEnvSource": {
                "type": "object",
                "properties": {
                    "localObjectReference": {
                        "$ref": "#/components/schemas/v1LocalObjectReference"
                    },
                    "optional": {
                        "type": "boolean",
                        "title": "Specify whether the ConfigMap must be defined\n+optional"
                    }
                },
                "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment\nvariables with.\n\nThe contents of the target ConfigMap's Data field will represent the\nkey-value pairs as environment variables."
            },
            "v1ConfigMapKeySelector": {
                "type": "object",
                "properties": {
                    "localObjectReference": {
                        "$ref": "#/components/schemas/v1LocalObjectReference"
                    },
                    "key": {
                        "type": "string",
                        "description": "The key to select."
                    },
                    "optional": {
                        "type": "boolean",
                        "title": "Specify whether the ConfigMap or its key must be defined\n+optional"
                    }
                },
                "title": "Selects a key from a ConfigMap.\n+structType=atomic"
            },
            "v1ConfigMapProjection": {
                "type": "object",
                "properties": {
                    "localObjectReference": {
                        "$ref": "#/components/schemas/v1LocalObjectReference"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1KeyToPath"
                        },
                        "title": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional\n+listType=atomic"
                    },
                    "optional": {
                        "type": "boolean",
                        "title": "optional specify whether the ConfigMap or its keys must be defined\n+optional"
                    }
                },
                "description": "Adapts a ConfigMap into a projected volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nprojected volume as files using the keys in the Data field as the file names,\nunless the items element is populated with specific mappings of keys to paths.\nNote that this is identical to a configmap volume source without the default\nmode."
            },
            "v1ConfigMapVolumeSource": {
                "type": "object",
                "properties": {
                    "localObjectReference": {
                        "$ref": "#/components/schemas/v1LocalObjectReference"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1KeyToPath"
                        },
                        "title": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional\n+listType=atomic"
                    },
                    "defaultMode": {
                        "type": "integer",
                        "format": "int32",
                        "title": "defaultMode is optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
                    },
                    "optional": {
                        "type": "boolean",
                        "title": "optional specify whether the ConfigMap or its keys must be defined\n+optional"
                    }
                },
                "description": "Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names, unless\nthe items element is populated with specific mappings of keys to paths.\nConfigMap volumes support ownership management and SELinux relabeling."
            },
            "v1ConnectedStatus": {
                "type": "string",
                "enum": [
                    "CONNECTED_STATUS_UNSET",
                    "CONNECTED",
                    "DISCONNECTED"
                ],
                "default": "CONNECTED_STATUS_UNSET"
            },
            "v1Container": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated."
                    },
                    "image": {
                        "type": "string",
                        "title": "Container image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets.\n+optional"
                    },
                    "command": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Entrypoint array. Not executed within a shell.\nThe container image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional\n+listType=atomic"
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Arguments to the entrypoint.\nThe container image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional\n+listType=atomic"
                    },
                    "workingDir": {
                        "type": "string",
                        "title": "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.\n+optional"
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ContainerPort"
                        },
                        "title": "List of ports to expose from the container. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nModifying this array with strategic merge patch may corrupt the data.\nFor more information See https://github.com/kubernetes/kubernetes/issues/108255.\nCannot be updated.\n+optional\n+patchMergeKey=containerPort\n+patchStrategy=merge\n+listType=map\n+listMapKey=containerPort\n+listMapKey=protocol"
                    },
                    "envFrom": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1EnvFromSource"
                        },
                        "title": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.\n+optional\n+listType=atomic"
                    },
                    "env": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1EnvVar"
                        },
                        "title": "List of environment variables to set in the container.\nCannot be updated.\n+optional\n+patchMergeKey=name\n+patchStrategy=merge\n+listType=map\n+listMapKey=name"
                    },
                    "resources": {
                        "$ref": "#/components/schemas/v1ResourceRequirements"
                    },
                    "resizePolicy": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ContainerResizePolicy"
                        },
                        "title": "Resources resize policy for the container.\n+featureGate=InPlacePodVerticalScaling\n+optional\n+listType=atomic"
                    },
                    "restartPolicy": {
                        "type": "string",
                        "title": "RestartPolicy defines the restart behavior of individual containers in a pod.\nThis field may only be set for init containers, and the only allowed value is \"Always\".\nFor non-init containers or when this field is not specified,\nthe restart behavior is defined by the Pod's restart policy and the container type.\nSetting the RestartPolicy as \"Always\" for the init container will have the following effect:\nthis init container will be continually restarted on\nexit until all regular containers have terminated. Once all regular\ncontainers have completed, all init containers with restartPolicy \"Always\"\nwill be shut down. This lifecycle differs from normal init containers and\nis often referred to as a \"sidecar\" container. Although this init\ncontainer still starts in the init container sequence, it does not wait\nfor the container to complete before proceeding to the next init\ncontainer. Instead, the next init container starts immediately after this\ninit container is started, or after any startupProbe has successfully\ncompleted.\n+featureGate=SidecarContainers\n+optional"
                    },
                    "volumeMounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1VolumeMount"
                        },
                        "title": "Pod volumes to mount into the container's filesystem.\nCannot be updated.\n+optional\n+patchMergeKey=mountPath\n+patchStrategy=merge\n+listType=map\n+listMapKey=mountPath"
                    },
                    "volumeDevices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1VolumeDevice"
                        },
                        "title": "volumeDevices is the list of block devices to be used by the container.\n+patchMergeKey=devicePath\n+patchStrategy=merge\n+listType=map\n+listMapKey=devicePath\n+optional"
                    },
                    "livenessProbe": {
                        "$ref": "#/components/schemas/v1Probe"
                    },
                    "readinessProbe": {
                        "$ref": "#/components/schemas/v1Probe"
                    },
                    "startupProbe": {
                        "$ref": "#/components/schemas/v1Probe"
                    },
                    "lifecycle": {
                        "$ref": "#/components/schemas/v1Lifecycle"
                    },
                    "terminationMessagePath": {
                        "type": "string",
                        "title": "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated.\n+optional"
                    },
                    "terminationMessagePolicy": {
                        "type": "string",
                        "title": "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated.\n+optional"
                    },
                    "imagePullPolicy": {
                        "type": "string",
                        "title": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n+optional"
                    },
                    "securityContext": {
                        "$ref": "#/components/schemas/v1SecurityContext"
                    },
                    "stdin": {
                        "type": "boolean",
                        "title": "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false.\n+optional"
                    },
                    "stdinOnce": {
                        "type": "boolean",
                        "title": "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false\n+optional"
                    },
                    "tty": {
                        "type": "boolean",
                        "title": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false.\n+optional"
                    }
                },
                "description": "A single application container that you want to run within a pod."
            },
            "v1ContainerPort": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.\n+optional"
                    },
                    "hostPort": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 < x < 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.\n+optional"
                    },
                    "containerPort": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 < x < 65536."
                    },
                    "protocol": {
                        "type": "string",
                        "title": "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".\n+optional\n+default=\"TCP\""
                    },
                    "hostIP": {
                        "type": "string",
                        "title": "What host IP to bind the external port to.\n+optional"
                    }
                },
                "description": "ContainerPort represents a network port in a single container."
            },
            "v1ContainerResizePolicy": {
                "type": "object",
                "properties": {
                    "resourceName": {
                        "type": "string",
                        "description": "Name of the resource to which this resource resize policy applies.\nSupported values: cpu, memory."
                    },
                    "restartPolicy": {
                        "type": "string",
                        "description": "Restart policy to apply when specified resource is resized.\nIf not specified, it defaults to NotRequired."
                    }
                },
                "description": "ContainerResizePolicy represents resource resize policy for the container."
            },
            "v1DashboardOverview": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    },
                    "applicationStatusCounts": {
                        "$ref": "#/components/schemas/v1ApplicationStatusCounts"
                    },
                    "repositoryCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "applicationCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "clusterCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "v1DatadogMetric": {
                "type": "object",
                "properties": {
                    "interval": {
                        "type": "string"
                    },
                    "query": {
                        "type": "string"
                    },
                    "apiVersion": {
                        "type": "string",
                        "description": "ApiVersion refers to the Datadog API version being used (default: v1). v1 will eventually be deprecated."
                    }
                }
            },
            "v1DeploymentsDetails": {
                "type": "object",
                "properties": {
                    "startedAt": {
                        "type": "string"
                    },
                    "rollback": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "deploy": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "redeploy": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "succeeded": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "error": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "terminating": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "failed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "running": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalDeployments": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "failureRate": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "v1DisasterRecoveryNode": {
                "type": "object",
                "properties": {
                    "identifier": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/v1DisasterRecoveryType"
                    }
                }
            },
            "v1DisasterRecoveryType": {
                "type": "string",
                "enum": [
                    "UNKNOWN_TYPE",
                    "PRIMARY",
                    "SECONDARY"
                ],
                "default": "UNKNOWN_TYPE"
            },
            "v1DownloadResponse": {
                "type": "object",
                "properties": {
                    "chunk": {
                        "type": "string",
                        "format": "byte"
                    }
                }
            },
            "v1DownwardAPIProjection": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1DownwardAPIVolumeFile"
                        },
                        "title": "Items is a list of DownwardAPIVolume file\n+optional\n+listType=atomic"
                    }
                },
                "description": "Represents downward API info for projecting into a projected volume.\nNote that this is identical to a downwardAPI volume source without the default\nmode."
            },
            "v1DownwardAPIVolumeFile": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "title": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                    },
                    "fieldRef": {
                        "$ref": "#/components/schemas/v1ObjectFieldSelector"
                    },
                    "resourceFieldRef": {
                        "$ref": "#/components/schemas/v1ResourceFieldSelector"
                    },
                    "mode": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
                    }
                },
                "title": "DownwardAPIVolumeFile represents information to create the file containing the pod field"
            },
            "v1DownwardAPIVolumeSource": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1DownwardAPIVolumeFile"
                        },
                        "title": "Items is a list of downward API volume file\n+optional\n+listType=atomic"
                    },
                    "defaultMode": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
                    }
                },
                "description": "DownwardAPIVolumeSource represents a volume containing downward API info.\nDownward API volumes support ownership management and SELinux relabeling."
            },
            "v1DryRun": {
                "type": "object",
                "properties": {
                    "metricName": {
                        "type": "string",
                        "description": "Name of the metric which needs to be evaluated in the Dry-Run mode. Wildcard '*' is supported and denotes all\nthe available metrics."
                    }
                },
                "description": "DryRun defines the settings for running the analysis in Dry-Run mode."
            },
            "v1Empty": {
                "type": "object"
            },
            "v1EmptyDirVolumeSource": {
                "type": "object",
                "properties": {
                    "medium": {
                        "type": "string",
                        "title": "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\n+optional"
                    },
                    "sizeLimit": {
                        "$ref": "#/components/schemas/resourceQuantity"
                    }
                },
                "description": "Represents an empty directory for a pod.\nEmpty directory volumes support ownership management and SELinux relabeling."
            },
            "v1Enabled": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    }
                }
            },
            "v1EnvFromSource": {
                "type": "object",
                "properties": {
                    "prefix": {
                        "type": "string",
                        "title": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.\n+optional"
                    },
                    "configMapRef": {
                        "$ref": "#/components/schemas/v1ConfigMapEnvSource"
                    },
                    "secretRef": {
                        "$ref": "#/components/schemas/v1SecretEnvSource"
                    }
                },
                "title": "EnvFromSource represents the source of a set of ConfigMaps"
            },
            "v1EnvVar": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the environment variable. Must be a C_IDENTIFIER."
                    },
                    "value": {
                        "type": "string",
                        "title": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".\n+optional"
                    },
                    "valueFrom": {
                        "$ref": "#/components/schemas/v1EnvVarSource"
                    }
                },
                "description": "EnvVar represents an environment variable present in a Container."
            },
            "v1EnvVarSource": {
                "type": "object",
                "properties": {
                    "fieldRef": {
                        "$ref": "#/components/schemas/v1ObjectFieldSelector"
                    },
                    "resourceFieldRef": {
                        "$ref": "#/components/schemas/v1ResourceFieldSelector"
                    },
                    "configMapKeyRef": {
                        "$ref": "#/components/schemas/v1ConfigMapKeySelector"
                    },
                    "secretKeyRef": {
                        "$ref": "#/components/schemas/v1SecretKeySelector"
                    }
                },
                "description": "EnvVarSource represents a source for the value of an EnvVar."
            },
            "v1EphemeralContainer": {
                "type": "object",
                "properties": {
                    "ephemeralContainerCommon": {
                        "$ref": "#/components/schemas/v1EphemeralContainerCommon"
                    },
                    "targetContainerName": {
                        "type": "string",
                        "description": "If set, the name of the container from PodSpec that this ephemeral container targets.\nThe ephemeral container will be run in the namespaces (IPC, PID, etc) of this container.\nIf not set then the ephemeral container uses the namespaces configured in the Pod spec.\n\nThe container runtime must implement support for this feature. If the runtime does not\nsupport namespace targeting then the result of setting this field is undefined.\n+optional"
                    }
                },
                "description": "An EphemeralContainer is a temporary container that you may add to an existing Pod for\nuser-initiated activities such as debugging. Ephemeral containers have no resource or\nscheduling guarantees, and they will not be restarted when they exit or when a Pod is\nremoved or restarted. The kubelet may evict a Pod if an ephemeral container causes the\nPod to exceed its resource allocation.\n\nTo add an ephemeral container, use the ephemeralcontainers subresource of an existing\nPod. Ephemeral containers may not be removed or restarted."
            },
            "v1EphemeralContainerCommon": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the ephemeral container specified as a DNS_LABEL.\nThis name must be unique among all containers, init containers and ephemeral containers."
                    },
                    "image": {
                        "type": "string",
                        "title": "Container image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images"
                    },
                    "command": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Entrypoint array. Not executed within a shell.\nThe image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional\n+listType=atomic"
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Arguments to the entrypoint.\nThe image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell\n+optional\n+listType=atomic"
                    },
                    "workingDir": {
                        "type": "string",
                        "title": "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.\n+optional"
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ContainerPort"
                        },
                        "title": "Ports are not allowed for ephemeral containers.\n+optional\n+patchMergeKey=containerPort\n+patchStrategy=merge\n+listType=map\n+listMapKey=containerPort\n+listMapKey=protocol"
                    },
                    "envFrom": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1EnvFromSource"
                        },
                        "title": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.\n+optional\n+listType=atomic"
                    },
                    "env": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1EnvVar"
                        },
                        "title": "List of environment variables to set in the container.\nCannot be updated.\n+optional\n+patchMergeKey=name\n+patchStrategy=merge\n+listType=map\n+listMapKey=name"
                    },
                    "resources": {
                        "$ref": "#/components/schemas/v1ResourceRequirements"
                    },
                    "resizePolicy": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ContainerResizePolicy"
                        },
                        "title": "Resources resize policy for the container.\n+featureGate=InPlacePodVerticalScaling\n+optional\n+listType=atomic"
                    },
                    "restartPolicy": {
                        "type": "string",
                        "title": "Restart policy for the container to manage the restart behavior of each\ncontainer within a pod.\nThis may only be set for init containers. You cannot set this field on\nephemeral containers.\n+featureGate=SidecarContainers\n+optional"
                    },
                    "volumeMounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1VolumeMount"
                        },
                        "title": "Pod volumes to mount into the container's filesystem. Subpath mounts are not allowed for ephemeral containers.\nCannot be updated.\n+optional\n+patchMergeKey=mountPath\n+patchStrategy=merge\n+listType=map\n+listMapKey=mountPath"
                    },
                    "volumeDevices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1VolumeDevice"
                        },
                        "title": "volumeDevices is the list of block devices to be used by the container.\n+patchMergeKey=devicePath\n+patchStrategy=merge\n+listType=map\n+listMapKey=devicePath\n+optional"
                    },
                    "livenessProbe": {
                        "$ref": "#/components/schemas/v1Probe"
                    },
                    "readinessProbe": {
                        "$ref": "#/components/schemas/v1Probe"
                    },
                    "startupProbe": {
                        "$ref": "#/components/schemas/v1Probe"
                    },
                    "lifecycle": {
                        "$ref": "#/components/schemas/v1Lifecycle"
                    },
                    "terminationMessagePath": {
                        "type": "string",
                        "title": "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated.\n+optional"
                    },
                    "terminationMessagePolicy": {
                        "type": "string",
                        "title": "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated.\n+optional"
                    },
                    "imagePullPolicy": {
                        "type": "string",
                        "title": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images\n+optional"
                    },
                    "securityContext": {
                        "$ref": "#/components/schemas/v1SecurityContext"
                    },
                    "stdin": {
                        "type": "boolean",
                        "title": "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false.\n+optional"
                    },
                    "stdinOnce": {
                        "type": "boolean",
                        "title": "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false\n+optional"
                    },
                    "tty": {
                        "type": "boolean",
                        "title": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false.\n+optional"
                    }
                },
                "description": "EphemeralContainerCommon is a copy of all fields in Container to be inlined in\nEphemeralContainer. This separate type allows easy conversion from EphemeralContainer\nto Container and allows separate documentation for the fields of EphemeralContainer.\nWhen a new field is added to Container it must be added here as well."
            },
            "v1EphemeralVolumeSource": {
                "type": "object",
                "properties": {
                    "volumeClaimTemplate": {
                        "$ref": "#/components/schemas/v1PersistentVolumeClaimTemplate"
                    }
                },
                "description": "Represents an ephemeral volume that is handled by a normal storage driver."
            },
            "v1ExecAction": {
                "type": "object",
                "properties": {
                    "command": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.\n+optional\n+listType=atomic"
                    }
                },
                "description": "ExecAction describes a \"run in container\" action."
            },
            "v1FCVolumeSource": {
                "type": "object",
                "properties": {
                    "targetWWNs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "targetWWNs is Optional: FC target worldwide names (WWNs)\n+optional\n+listType=atomic"
                    },
                    "lun": {
                        "type": "integer",
                        "format": "int32",
                        "title": "lun is Optional: FC target lun number\n+optional"
                    },
                    "fsType": {
                        "type": "string",
                        "title": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "title": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
                    },
                    "wwids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "wwids Optional: FC volume world wide identifiers (wwids)\nEither wwids or combination of targetWWNs and lun must be set, but not both simultaneously.\n+optional\n+listType=atomic"
                    }
                },
                "description": "Represents a Fibre Channel volume.\nFibre Channel volumes can only be mounted as read/write once.\nFibre Channel volumes support ownership management and SELinux relabeling."
            },
            "v1FieldRef": {
                "type": "object",
                "properties": {
                    "fieldPath": {
                        "type": "string",
                        "title": "Required: Path of the field to select in the specified API version"
                    }
                }
            },
            "v1FieldsV1": {
                "type": "object",
                "properties": {
                    "Raw": {
                        "type": "string",
                        "format": "byte",
                        "description": "Raw is the underlying serialization of this object."
                    }
                },
                "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set,\nor a string representing a sub-field or item. The string will follow one of these four formats:\n'f:<name>', where <name> is the name of a field in a struct, or key in a map\n'v:<value>', where <value> is the exact json formatted value of a list item\n'i:<index>', where <index> is position of a item in a list\n'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values\nIf a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff\n+protobuf.options.(gogoproto.goproto_stringer)=false"
            },
            "v1Filter": {
                "type": "object",
                "properties": {
                    "identifier": {
                        "type": "string",
                        "description": "Identifier for the filter."
                    },
                    "name": {
                        "type": "string",
                        "description": "Name for the filter."
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the filter."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the filter."
                    },
                    "filterVisibility": {
                        "$ref": "#/components/schemas/v1FilterVisibility"
                    },
                    "filterProperties": {
                        "type": "object",
                        "description": "Filter properties"
                    },
                    "filterType": {
                        "$ref": "#/components/schemas/v1FilterType"
                    }
                }
            },
            "v1FilterList": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1Filter"
                        }
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalItems": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageItemCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "v1FilterType": {
                "type": "string",
                "enum": [
                    "FILTER_TYPE_UNSET",
                    "APPLICATION",
                    "AGENT",
                    "CLUSTER",
                    "REPO"
                ],
                "default": "FILTER_TYPE_UNSET"
            },
            "v1FilterVisibility": {
                "type": "string",
                "enum": [
                    "FilterVisibilityUnset",
                    "EveryOne",
                    "OnlyCreator"
                ],
                "default": "FilterVisibilityUnset"
            },
            "v1FlexVolumeSource": {
                "type": "object",
                "properties": {
                    "driver": {
                        "type": "string",
                        "description": "driver is the name of the driver to use for this volume."
                    },
                    "fsType": {
                        "type": "string",
                        "title": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.\n+optional"
                    },
                    "secretRef": {
                        "$ref": "#/components/schemas/v1LocalObjectReference"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "title": "readOnly is Optional: defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
                    },
                    "options": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "options is Optional: this field holds extra command options if any.\n+optional"
                    }
                },
                "description": "FlexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin."
            },
            "v1FlockerVolumeSource": {
                "type": "object",
                "properties": {
                    "datasetName": {
                        "type": "string",
                        "title": "datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker\nshould be considered as deprecated\n+optional"
                    },
                    "datasetUUID": {
                        "type": "string",
                        "title": "datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset\n+optional"
                    }
                },
                "description": "Represents a Flocker volume mounted by the Flocker agent.\nOne and only one of datasetName and datasetUUID should be set.\nFlocker volumes do not support ownership management or SELinux relabeling."
            },
            "v1GCEPersistentDiskVolumeSource": {
                "type": "object",
                "properties": {
                    "pdName": {
                        "type": "string",
                        "title": "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
                    },
                    "fsType": {
                        "type": "string",
                        "title": "fsType is filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
                    },
                    "partition": {
                        "type": "integer",
                        "format": "int32",
                        "title": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "title": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional"
                    }
                },
                "description": "Represents a Persistent Disk resource in Google Compute Engine.\n\nA GCE PD must exist before mounting to a container. The disk must\nalso be in the same GCE project and zone as the kubelet. A GCE PD\ncan only be mounted as read/write once or read-only many times. GCE\nPDs support ownership management and SELinux relabeling."
            },
            "v1GRPCAction": {
                "type": "object",
                "properties": {
                    "port": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Port number of the gRPC service. Number must be in the range 1 to 65535."
                    },
                    "service": {
                        "type": "string",
                        "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.\n+optional\n+default=\"\""
                    }
                },
                "description": "GRPCAction specifies an action involving a GRPC service."
            },
            "v1GitRepoVolumeSource": {
                "type": "object",
                "properties": {
                    "repository": {
                        "type": "string",
                        "title": "repository is the URL"
                    },
                    "revision": {
                        "type": "string",
                        "title": "revision is the commit hash for the specified revision.\n+optional"
                    },
                    "directory": {
                        "type": "string",
                        "title": "directory is the target directory name.\nMust not contain or start with '..'.  If '.' is supplied, the volume directory will be the\ngit repository.  Otherwise, if specified, the volume will contain the git repository in\nthe subdirectory with the given name.\n+optional"
                    }
                },
                "description": "Represents a volume that is populated with the contents of a git repository.\nGit repo volumes do not support ownership management.\nGit repo volumes support SELinux relabeling.\n\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container."
            },
            "v1GlusterfsVolumeSource": {
                "type": "object",
                "properties": {
                    "endpoints": {
                        "type": "string",
                        "title": "endpoints is the endpoint name that details Glusterfs topology.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                    },
                    "path": {
                        "type": "string",
                        "title": "path is the Glusterfs volume path.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "title": "readOnly here will force the Glusterfs volume to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod\n+optional"
                    }
                },
                "description": "Represents a Glusterfs mount that lasts the lifetime of a pod.\nGlusterfs volumes do not support ownership management or SELinux relabeling."
            },
            "v1Gnupg": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    },
                    "gnuPGPublicKey": {
                        "$ref": "#/components/schemas/gpgkeysGnuPGPublicKey"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "v1GraphiteMetric": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "title": "Address is the HTTP address and port of the Graphite server"
                    },
                    "query": {
                        "type": "string",
                        "title": "Query is a raw Graphite query to perform"
                    }
                },
                "title": "GraphiteMetric defines the Graphite query to perform canary analysis"
            },
            "v1GroupKind": {
                "type": "object",
                "properties": {
                    "group": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    }
                },
                "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
                "title": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types"
            },
            "v1HTTPGetAction": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "title": "Path to access on the HTTP server.\n+optional"
                    },
                    "port": {
                        "$ref": "#/components/schemas/intstrIntOrString"
                    },
                    "host": {
                        "type": "string",
                        "title": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.\n+optional"
                    },
                    "scheme": {
                        "type": "string",
                        "title": "Scheme to use for connecting to the host.\nDefaults to HTTP.\n+optional"
                    },
                    "httpHeaders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1HTTPHeader"
                        },
                        "title": "Custom headers to set in the request. HTTP allows repeated headers.\n+optional\n+listType=atomic"
                    }
                },
                "description": "HTTPGetAction describes an action based on HTTP Get requests."
            },
            "v1HTTPHeader": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                    },
                    "value": {
                        "type": "string",
                        "title": "The header field value"
                    }
                },
                "title": "HTTPHeader describes a custom header to be used in HTTP probes"
            },
            "v1HeaderRoutingMatch": {
                "type": "object",
                "properties": {
                    "headerName": {
                        "type": "string",
                        "title": "HeaderName the name of the request header"
                    },
                    "headerValue": {
                        "$ref": "#/components/schemas/v1StringMatch"
                    }
                }
            },
            "v1HealthStatusCounts": {
                "type": "object",
                "properties": {
                    "healthy": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "degraded": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "progressing": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "suspended": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "missing": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unknown": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "v1HostAlias": {
                "type": "object",
                "properties": {
                    "ip": {
                        "type": "string",
                        "title": "IP address of the host file entry.\n+required"
                    },
                    "hostnames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Hostnames for the above IP address.\n+listType=atomic"
                    }
                },
                "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file."
            },
            "v1HostPathVolumeSource": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "title": "path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
                    },
                    "type": {
                        "type": "string",
                        "title": "type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n+optional"
                    }
                },
                "description": "Represents a host path mapped into a pod.\nHost path volumes do not support ownership management or SELinux relabeling."
            },
            "v1ISCSIVolumeSource": {
                "type": "object",
                "properties": {
                    "targetPortal": {
                        "type": "string",
                        "description": "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260)."
                    },
                    "iqn": {
                        "type": "string",
                        "description": "iqn is the target iSCSI Qualified Name."
                    },
                    "lun": {
                        "type": "integer",
                        "format": "int32",
                        "description": "lun represents iSCSI Target Lun number."
                    },
                    "iscsiInterface": {
                        "type": "string",
                        "title": "iscsiInterface is the interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp).\n+optional\n+default=\"default\""
                    },
                    "fsType": {
                        "type": "string",
                        "title": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "title": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\n+optional"
                    },
                    "portals": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).\n+optional\n+listType=atomic"
                    },
                    "chapAuthDiscovery": {
                        "type": "boolean",
                        "title": "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication\n+optional"
                    },
                    "chapAuthSession": {
                        "type": "boolean",
                        "title": "chapAuthSession defines whether support iSCSI Session CHAP authentication\n+optional"
                    },
                    "secretRef": {
                        "$ref": "#/components/schemas/v1LocalObjectReference"
                    },
                    "initiatorName": {
                        "type": "string",
                        "title": "initiatorName is the custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n<target portal>:<volume name> will be created for the connection.\n+optional"
                    }
                },
                "description": "Represents an ISCSI disk.\nISCSI volumes can only be mounted as read/write once.\nISCSI volumes support ownership management and SELinux relabeling."
            },
            "v1ImageVolumeSource": {
                "type": "object",
                "properties": {
                    "reference": {
                        "type": "string",
                        "title": "Required: Image or artifact reference to be used.\nBehaves in the same way as pod.spec.containers[*].image.\nPull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets.\n+optional"
                    },
                    "pullPolicy": {
                        "type": "string",
                        "title": "Policy for pulling OCI objects. Possible values are:\nAlways: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.\nNever: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.\nIfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\n+optional"
                    }
                },
                "description": "ImageVolumeSource represents a image volume resource."
            },
            "v1InfluxdbMetric": {
                "type": "object",
                "properties": {
                    "profile": {
                        "type": "string",
                        "title": "Profile is the name of the secret holding InfluxDB account configuration"
                    },
                    "query": {
                        "type": "string",
                        "title": "Query is a raw InfluxDB flux query to perform"
                    }
                },
                "title": "InfluxdbMetric defines the InfluxDB Flux query to perform canary analysis"
            },
            "v1JSON": {
                "type": "object",
                "properties": {
                    "raw": {
                        "type": "string",
                        "format": "byte"
                    }
                },
                "description": "JSON represents any valid JSON value.\nThese types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil."
            },
            "v1JobMetric": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ObjectMeta"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/v1JobSpec"
                    }
                },
                "title": "JobMetric defines a job to run which acts as a metric"
            },
            "v1JobSpec": {
                "type": "object",
                "properties": {
                    "parallelism": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Specifies the maximum desired number of pods the job should\nrun at any given time. The actual number of pods running in steady state will\nbe less than this number when ((.spec.completions - .status.successful) < .spec.parallelism),\ni.e. when the work left to do is less than max parallelism.\nMore info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/\n+optional"
                    },
                    "completions": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Specifies the desired number of successfully finished pods the\njob should be run with.  Setting to null means that the success of any\npod signals the success of all pods, and allows parallelism to have any positive\nvalue.  Setting to 1 means that parallelism is limited to 1 and the success of that\npod signals the success of the job.\nMore info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/\n+optional"
                    },
                    "activeDeadlineSeconds": {
                        "type": "string",
                        "format": "int64",
                        "title": "Specifies the duration in seconds relative to the startTime that the job\nmay be continuously active before the system tries to terminate it; value\nmust be positive integer. If a Job is suspended (at creation or through an\nupdate), this timer will effectively be stopped and reset when the Job is\nresumed again.\n+optional"
                    },
                    "podFailurePolicy": {
                        "$ref": "#/components/schemas/v1PodFailurePolicy"
                    },
                    "successPolicy": {
                        "$ref": "#/components/schemas/v1SuccessPolicy"
                    },
                    "backoffLimit": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Specifies the number of retries before marking this job failed.\nDefaults to 6\n+optional"
                    },
                    "backoffLimitPerIndex": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Specifies the limit for the number of retries within an\nindex before marking this index as failed. When enabled the number of\nfailures per index is kept in the pod's\nbatch.kubernetes.io/job-index-failure-count annotation. It can only\nbe set when Job's completionMode=Indexed, and the Pod's restart\npolicy is Never. The field is immutable.\nThis field is beta-level. It can be used when the `JobBackoffLimitPerIndex`\nfeature gate is enabled (enabled by default).\n+optional"
                    },
                    "maxFailedIndexes": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Specifies the maximal number of failed indexes before marking the Job as\nfailed, when backoffLimitPerIndex is set. Once the number of failed\nindexes exceeds this number the entire Job is marked as Failed and its\nexecution is terminated. When left as null the job continues execution of\nall of its indexes and is marked with the `Complete` Job condition.\nIt can only be specified when backoffLimitPerIndex is set.\nIt can be null or up to completions. It is required and must be\nless than or equal to 10^4 when is completions greater than 10^5.\nThis field is beta-level. It can be used when the `JobBackoffLimitPerIndex`\nfeature gate is enabled (enabled by default).\n+optional"
                    },
                    "selector": {
                        "$ref": "#/components/schemas/v1LabelSelector"
                    },
                    "manualSelector": {
                        "type": "boolean",
                        "title": "manualSelector controls generation of pod labels and pod selectors.\nLeave `manualSelector` unset unless you are certain what you are doing.\nWhen false or unset, the system pick labels unique to this job\nand appends those labels to the pod template.  When true,\nthe user is responsible for picking unique labels and specifying\nthe selector.  Failure to pick a unique label may cause this\nand other jobs to not function correctly.  However, You may see\n`manualSelector=true` in jobs that were created with the old `extensions/v1beta1`\nAPI.\nMore info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/#specifying-your-own-pod-selector\n+optional"
                    },
                    "template": {
                        "$ref": "#/components/schemas/v1PodTemplateSpec"
                    },
                    "ttlSecondsAfterFinished": {
                        "type": "integer",
                        "format": "int32",
                        "title": "ttlSecondsAfterFinished limits the lifetime of a Job that has finished\nexecution (either Complete or Failed). If this field is set,\nttlSecondsAfterFinished after the Job finishes, it is eligible to be\nautomatically deleted. When the Job is being deleted, its lifecycle\nguarantees (e.g. finalizers) will be honored. If this field is unset,\nthe Job won't be automatically deleted. If this field is set to zero,\nthe Job becomes eligible to be deleted immediately after it finishes.\n+optional"
                    },
                    "completionMode": {
                        "type": "string",
                        "description": "completionMode specifies how Pod completions are tracked. It can be\n`NonIndexed` (default) or `Indexed`.\n\n`NonIndexed` means that the Job is considered complete when there have\nbeen .spec.completions successfully completed Pods. Each Pod completion is\nhomologous to each other.\n\n`Indexed` means that the Pods of a\nJob get an associated completion index from 0 to (.spec.completions - 1),\navailable in the annotation batch.kubernetes.io/job-completion-index.\nThe Job is considered complete when there is one successfully completed Pod\nfor each index.\nWhen value is `Indexed`, .spec.completions must be specified and\n`.spec.parallelism` must be less than or equal to 10^5.\nIn addition, The Pod name takes the form\n`$(job-name)-$(index)-$(random-string)`,\nthe Pod hostname takes the form `$(job-name)-$(index)`.\n\nMore completion modes can be added in the future.\nIf the Job controller observes a mode that it doesn't recognize, which\nis possible during upgrades due to version skew, the controller\nskips updates for the Job.\n+optional"
                    },
                    "suspend": {
                        "type": "boolean",
                        "description": "suspend specifies whether the Job controller should create Pods or not. If\na Job is created with suspend set to true, no Pods are created by the Job\ncontroller. If a Job is suspended after creation (i.e. the flag goes from\nfalse to true), the Job controller will delete all active Pods associated\nwith this Job. Users must design their workload to gracefully handle this.\nSuspending a Job will reset the StartTime field of the Job, effectively\nresetting the ActiveDeadlineSeconds timer too. Defaults to false.\n\n+optional"
                    },
                    "podReplacementPolicy": {
                        "type": "string",
                        "description": "podReplacementPolicy specifies when to create replacement Pods.\nPossible values are:\n- TerminatingOrFailed means that we recreate pods\n  when they are terminating (has a metadata.deletionTimestamp) or failed.\n- Failed means to wait until a previously created Pod is fully terminated (has phase\n  Failed or Succeeded) before creating a replacement Pod.\n\nWhen using podFailurePolicy, Failed is the the only allowed value.\nTerminatingOrFailed and Failed are allowed values when podFailurePolicy is not in use.\nThis is an beta field. To use this, enable the JobPodReplacementPolicy feature toggle.\nThis is on by default.\n+optional"
                    },
                    "managedBy": {
                        "type": "string",
                        "description": "ManagedBy field indicates the controller that manages a Job. The k8s Job\ncontroller reconciles jobs which don't have this field at all or the field\nvalue is the reserved string `kubernetes.io/job-controller`, but skips\nreconciling Jobs with a custom value for this field.\nThe value must be a valid domain-prefixed path (e.g. acme.io/foo) -\nall characters before the first \"/\" must be a valid subdomain as defined\nby RFC 1123. All characters trailing the first \"/\" must be valid HTTP Path\ncharacters as defined by RFC 3986. The value cannot exceed 63 characters.\nThis field is immutable.\n\nThis field is beta-level. The job controller accepts setting the field\nwhen the feature gate JobManagedBy is enabled (enabled by default).\n+optional"
                    }
                },
                "description": "JobSpec describes how the job execution will look like."
            },
            "v1KayentaMetric": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "application": {
                        "type": "string"
                    },
                    "canaryConfigName": {
                        "type": "string"
                    },
                    "metricsAccountName": {
                        "type": "string"
                    },
                    "configurationAccountName": {
                        "type": "string"
                    },
                    "storageAccountName": {
                        "type": "string"
                    },
                    "threshold": {
                        "$ref": "#/components/schemas/v1KayentaThreshold"
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1KayentaScope"
                        }
                    }
                }
            },
            "v1KayentaScope": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "controlScope": {
                        "$ref": "#/components/schemas/v1ScopeDetail"
                    },
                    "experimentScope": {
                        "$ref": "#/components/schemas/v1ScopeDetail"
                    }
                }
            },
            "v1KayentaThreshold": {
                "type": "object",
                "properties": {
                    "pass": {
                        "type": "string",
                        "format": "int64"
                    },
                    "marginal": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "v1KeyToPath": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "key is the key to project."
                    },
                    "path": {
                        "type": "string",
                        "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                    },
                    "mode": {
                        "type": "integer",
                        "format": "int32",
                        "title": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
                    }
                },
                "description": "Maps a string key to a path within a volume."
            },
            "v1LabelSelector": {
                "type": "object",
                "properties": {
                    "matchLabels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional"
                    },
                    "matchExpressions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1LabelSelectorRequirement"
                        },
                        "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional\n+listType=atomic"
                    }
                },
                "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic"
            },
            "v1LabelSelectorRequirement": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "key is the label key that the selector applies to."
                    },
                    "operator": {
                        "type": "string",
                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional\n+listType=atomic"
                    }
                },
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
            },
            "v1LegacyApplicationSetList": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1LegacyApplicationSetListItem"
                        }
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalItems": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageItemCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "v1LegacyApplicationSetListItem": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "description": "Application set name, retrieved from application collection."
            },
            "v1Lifecycle": {
                "type": "object",
                "properties": {
                    "postStart": {
                        "$ref": "#/components/schemas/v1LifecycleHandler"
                    },
                    "preStop": {
                        "$ref": "#/components/schemas/v1LifecycleHandler"
                    }
                },
                "description": "Lifecycle describes actions that the management system should take in response to container lifecycle\nevents. For the PostStart and PreStop lifecycle handlers, management of the container blocks\nuntil the action is complete, unless the container process fails, in which case the handler is aborted."
            },
            "v1LifecycleHandler": {
                "type": "object",
                "properties": {
                    "exec": {
                        "$ref": "#/components/schemas/v1ExecAction"
                    },
                    "httpGet": {
                        "$ref": "#/components/schemas/v1HTTPGetAction"
                    },
                    "tcpSocket": {
                        "$ref": "#/components/schemas/v1TCPSocketAction"
                    },
                    "sleep": {
                        "$ref": "#/components/schemas/v1SleepAction"
                    }
                },
                "description": "LifecycleHandler defines a specific action that should be taken in a lifecycle\nhook. One and only one of the fields, except TCPSocket must be specified."
            },
            "v1ListMeta": {
                "type": "object",
                "properties": {
                    "selfLink": {
                        "type": "string",
                        "title": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional"
                    },
                    "resourceVersion": {
                        "type": "string",
                        "title": "String that identifies the server's internal version of this object that\ncan be used by clients to determine when objects have changed.\nValue must be treated as opaque by clients and passed unmodified back to the server.\nPopulated by the system.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
                    },
                    "continue": {
                        "type": "string",
                        "description": "continue may be set if the user set a limit on the number of items returned, and indicates that\nthe server has more data available. The value is opaque and may be used to issue another request\nto the endpoint that served this list to retrieve the next set of available objects. Continuing a\nconsistent list may not be possible if the server configuration has changed or more than a few\nminutes have passed. The resourceVersion field returned when using this continue value will be\nidentical to the value in the first response, unless you have received this token from an error\nmessage."
                    },
                    "remainingItemCount": {
                        "type": "string",
                        "format": "int64",
                        "title": "remainingItemCount is the number of subsequent items in the list which are not included in this\nlist response. If the list request contained label or field selectors, then the number of\nremaining items is unknown and the field will be left unset and omitted during serialization.\nIf the list is complete (either because it is not chunking or because this is the last chunk),\nthen there are no more remaining items and this field will be left unset and omitted during\nserialization.\nServers older than v1.15 do not set this field.\nThe intended use of the remainingItemCount is *estimating* the size of a collection. Clients\nshould not rely on the remainingItemCount to be set or to be exact.\n+optional"
                    }
                },
                "description": "ListMeta describes metadata that synthetic resources must have, including lists and\nvarious status objects. A resource may have only one of {ObjectMeta, ListMeta}."
            },
            "v1LoadBalancerIngress": {
                "type": "object",
                "properties": {
                    "ip": {
                        "type": "string",
                        "title": "IP is set for load-balancer ingress points that are IP based\n(typically GCE or OpenStack load-balancers)\n+optional"
                    },
                    "hostname": {
                        "type": "string",
                        "title": "Hostname is set for load-balancer ingress points that are DNS based\n(typically AWS load-balancers)\n+optional"
                    },
                    "ipMode": {
                        "type": "string",
                        "title": "IPMode specifies how the load-balancer IP behaves, and may only be specified when the ip field is specified.\nSetting this to \"VIP\" indicates that traffic is delivered to the node with\nthe destination set to the load-balancer's IP and port.\nSetting this to \"Proxy\" indicates that traffic is delivered to the node or pod with\nthe destination set to the node's IP and node port or the pod's IP and port.\nService implementations may use this information to adjust traffic routing.\n+optional"
                    },
                    "ports": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1PortStatus"
                        },
                        "title": "Ports is a list of records of service ports\nIf used, every port defined in the service should have an entry in it\n+listType=atomic\n+optional"
                    }
                },
                "description": "LoadBalancerIngress represents the status of a load-balancer ingress point:\ntraffic intended for the service should be sent to an ingress point."
            },
            "v1LocalObjectReference": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n+optional\n+default=\"\"\n+kubebuilder:default=\"\"\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896."
                    }
                },
                "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.\n---\nNew uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.\n 1. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular\n    restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\".\n    Those cannot be well described when embedded.\n 2. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.\n 3. We cannot easily change it.  Because this type is embedded in many locations, updates to this type\n    will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.\n\nInstead of using this type, create a locally provided and used type that is well-focused on your reference.\nFor example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .\n+structType=atomic"
            },
            "v1ManagedFieldsEntry": {
                "type": "object",
                "properties": {
                    "manager": {
                        "type": "string",
                        "description": "Manager is an identifier of the workflow managing these fields."
                    },
                    "operation": {
                        "type": "string",
                        "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'."
                    },
                    "apiVersion": {
                        "type": "string",
                        "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted."
                    },
                    "time": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "fieldsType": {
                        "type": "string",
                        "title": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\""
                    },
                    "fieldsV1": {
                        "$ref": "#/components/schemas/v1FieldsV1"
                    },
                    "subresource": {
                        "type": "string",
                        "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource."
                    }
                },
                "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource\nthat the fieldset applies to."
            },
            "v1MeasurementRetention": {
                "type": "object",
                "properties": {
                    "metricName": {
                        "type": "string",
                        "description": "MetricName is the name of the metric on which this retention policy should be applied."
                    },
                    "limit": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Limit is the maximum number of measurements to be retained for this given metric."
                    }
                },
                "description": "MeasurementRetention defines the settings for retaining the number of measurements during the analysis."
            },
            "v1Metric": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name is the name of the metric"
                    },
                    "interval": {
                        "type": "string",
                        "title": "Interval defines an interval string (e.g. 30s, 5m, 1h) between each measurement.\nIf omitted, will perform a single measurement"
                    },
                    "initialDelay": {
                        "type": "string",
                        "title": "InitialDelay how long the AnalysisRun should wait before starting this metric"
                    },
                    "count": {
                        "$ref": "#/components/schemas/intstrIntOrString"
                    },
                    "successCondition": {
                        "type": "string",
                        "title": "SuccessCondition is an expression which determines if a measurement is considered successful\nExpression is a goevaluate expression. The keyword `result` is a variable reference to the\nvalue of measurement. Results can be both structured data or primitive.\nExamples:\n  result > 10\n  (result.requests_made * result.requests_succeeded / 100) >= 90"
                    },
                    "failureCondition": {
                        "type": "string",
                        "title": "FailureCondition is an expression which determines if a measurement is considered failed\nIf both success and failure conditions are specified, and the measurement does not fall into\neither condition, the measurement is considered Inconclusive"
                    },
                    "failureLimit": {
                        "$ref": "#/components/schemas/intstrIntOrString"
                    },
                    "inconclusiveLimit": {
                        "$ref": "#/components/schemas/intstrIntOrString"
                    },
                    "consecutiveErrorLimit": {
                        "$ref": "#/components/schemas/intstrIntOrString"
                    },
                    "provider": {
                        "$ref": "#/components/schemas/v1MetricProvider"
                    }
                },
                "title": "Metric defines a metric in which to perform analysis"
            },
            "v1MetricProvider": {
                "type": "object",
                "properties": {
                    "prometheus": {
                        "$ref": "#/components/schemas/v1PrometheusMetric"
                    },
                    "kayenta": {
                        "$ref": "#/components/schemas/v1KayentaMetric"
                    },
                    "web": {
                        "$ref": "#/components/schemas/v1WebMetric"
                    },
                    "datadog": {
                        "$ref": "#/components/schemas/v1DatadogMetric"
                    },
                    "wavefront": {
                        "$ref": "#/components/schemas/v1WavefrontMetric"
                    },
                    "newRelic": {
                        "$ref": "#/components/schemas/v1NewRelicMetric"
                    },
                    "job": {
                        "$ref": "#/components/schemas/v1JobMetric"
                    },
                    "cloudWatch": {
                        "$ref": "#/components/schemas/v1CloudWatchMetric"
                    },
                    "graphite": {
                        "$ref": "#/components/schemas/v1GraphiteMetric"
                    },
                    "influxdb": {
                        "$ref": "#/components/schemas/v1InfluxdbMetric"
                    },
                    "skywalking": {
                        "$ref": "#/components/schemas/v1SkyWalkingMetric"
                    },
                    "plugin": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "format": "byte"
                        },
                        "title": "+kubebuilder:validation:Schemaless\n+kubebuilder:pruning:PreserveUnknownFields\n+kubebuilder:validation:Type=object\nPlugin specifies the hashicorp go-plugin metric to query"
                    }
                },
                "title": "MetricProvider which external system to use to verify the analysis\nOnly one of the fields in this struct should be non-nil"
            },
            "v1MicroTime": {
                "type": "object",
                "properties": {
                    "seconds": {
                        "type": "string",
                        "format": "int64",
                        "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive."
                    },
                    "nanos": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context."
                    }
                },
                "description": "MicroTime is version of Time with microsecond level precision.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false"
            },
            "v1NFSVolumeSource": {
                "type": "object",
                "properties": {
                    "server": {
                        "type": "string",
                        "title": "server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                    },
                    "path": {
                        "type": "string",
                        "title": "path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "title": "readOnly here will force the NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n+optional"
                    }
                },
                "description": "Represents an NFS mount that lasts the lifetime of a pod.\nNFS volumes do not support ownership management or SELinux relabeling."
            },
            "v1NewRelicMetric": {
                "type": "object",
                "properties": {
                    "profile": {
                        "type": "string",
                        "title": "Profile is the name of the secret holding NR account configuration"
                    },
                    "query": {
                        "type": "string",
                        "title": "Query is a raw newrelic NRQL query to perform"
                    }
                },
                "title": "NewRelicMetric defines the newrelic query to perform canary analysis"
            },
            "v1NodeAffinity": {
                "type": "object",
                "properties": {
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                        "$ref": "#/components/schemas/v1NodeSelector"
                    },
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1PreferredSchedulingTerm"
                        },
                        "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred.\n+optional\n+listType=atomic"
                    }
                },
                "description": "Node affinity is a group of node affinity scheduling rules."
            },
            "v1NodeSelector": {
                "type": "object",
                "properties": {
                    "nodeSelectorTerms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1NodeSelectorTerm"
                        },
                        "title": "Required. A list of node selector terms. The terms are ORed.\n+listType=atomic"
                    }
                },
                "title": "A node selector represents the union of the results of one or more label queries\nover a set of nodes; that is, it represents the OR of the selectors represented\nby the node selector terms.\n+structType=atomic"
            },
            "v1NodeSelectorRequirement": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "The label key that the selector applies to."
                    },
                    "operator": {
                        "type": "string",
                        "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.\n+optional\n+listType=atomic"
                    }
                },
                "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values."
            },
            "v1NodeSelectorTerm": {
                "type": "object",
                "properties": {
                    "matchExpressions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1NodeSelectorRequirement"
                        },
                        "title": "A list of node selector requirements by node's labels.\n+optional\n+listType=atomic"
                    },
                    "matchFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1NodeSelectorRequirement"
                        },
                        "title": "A list of node selector requirements by node's fields.\n+optional\n+listType=atomic"
                    }
                },
                "title": "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm.\n+structType=atomic"
            },
            "v1NodeSystemInfo": {
                "type": "object",
                "properties": {
                    "machineID": {
                        "type": "string",
                        "title": "MachineID reported by the node. For unique machine identification\nin the cluster this field is preferred. Learn more from man(5)\nmachine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html"
                    },
                    "systemUUID": {
                        "type": "string",
                        "title": "SystemUUID reported by the node. For unique machine identification\nMachineID is preferred. This field is specific to Red Hat hosts\nhttps://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid"
                    },
                    "bootID": {
                        "type": "string",
                        "description": "Boot ID reported by the node."
                    },
                    "kernelVersion": {
                        "type": "string",
                        "description": "Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64)."
                    },
                    "osImage": {
                        "type": "string",
                        "description": "OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy))."
                    },
                    "containerRuntimeVersion": {
                        "type": "string",
                        "description": "ContainerRuntime Version reported by the node through runtime remote API (e.g. containerd://1.4.2)."
                    },
                    "kubeletVersion": {
                        "type": "string",
                        "description": "Kubelet Version reported by the node."
                    },
                    "kubeProxyVersion": {
                        "type": "string",
                        "description": "Deprecated: KubeProxy Version reported by the node."
                    },
                    "operatingSystem": {
                        "type": "string",
                        "title": "The Operating System reported by the node"
                    },
                    "architecture": {
                        "type": "string",
                        "title": "The Architecture reported by the node"
                    }
                },
                "description": "NodeSystemInfo is a set of ids/uuids to uniquely identify the node."
            },
            "v1OCIRepoType": {
                "type": "object",
                "properties": {
                    "repoURL": {
                        "type": "string",
                        "description": "OCI Repository URL."
                    }
                }
            },
            "v1OCIRepoTypeResponse": {
                "type": "object",
                "properties": {
                    "ociRepoType": {
                        "$ref": "#/components/schemas/OCIRepoTypeResponseOCIRepoTypeEnum"
                    }
                }
            },
            "v1ObjectFieldSelector": {
                "type": "object",
                "properties": {
                    "apiVersion": {
                        "type": "string",
                        "title": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".\n+optional"
                    },
                    "fieldPath": {
                        "type": "string",
                        "description": "Path of the field to select in the specified API version."
                    }
                },
                "title": "ObjectFieldSelector selects an APIVersioned field of an object.\n+structType=atomic"
            },
            "v1ObjectMeta": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n+optional"
                    },
                    "generateName": {
                        "type": "string",
                        "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional"
                    },
                    "namespace": {
                        "type": "string",
                        "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n+optional"
                    },
                    "selfLink": {
                        "type": "string",
                        "title": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional"
                    },
                    "uid": {
                        "type": "string",
                        "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n+optional"
                    },
                    "resourceVersion": {
                        "type": "string",
                        "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
                    },
                    "generation": {
                        "type": "string",
                        "format": "int64",
                        "title": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
                    },
                    "creationTimestamp": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "deletionTimestamp": {
                        "$ref": "#/components/schemas/v1Time"
                    },
                    "deletionGracePeriodSeconds": {
                        "type": "string",
                        "format": "int64",
                        "title": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n+optional"
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n+optional"
                    },
                    "ownerReferences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1OwnerReference"
                        },
                        "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge\n+listType=map\n+listMapKey=uid"
                    },
                    "finalizers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge\n+listType=set"
                    },
                    "managedFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ManagedFieldsEntry"
                        },
                        "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional\n+listType=atomic"
                    }
                },
                "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create."
            },
            "v1OperationPhase": {
                "type": "string",
                "enum": [
                    "OPERATION_PHASE_UNSET",
                    "RUNNING",
                    "FAILED",
                    "SUCCEEDED"
                ],
                "default": "OPERATION_PHASE_UNSET"
            },
            "v1OwnerReference": {
                "type": "object",
                "properties": {
                    "apiVersion": {
                        "type": "string",
                        "description": "API version of the referent."
                    },
                    "kind": {
                        "type": "string",
                        "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names"
                    },
                    "uid": {
                        "type": "string",
                        "title": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids"
                    },
                    "controller": {
                        "type": "boolean",
                        "title": "If true, this reference points to the managing controller.\n+optional"
                    },
                    "blockOwnerDeletion": {
                        "type": "boolean",
                        "title": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional"
                    }
                },
                "title": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.\n+structType=atomic"
            },
            "v1PersistentVolumeClaimSpec": {
                "type": "object",
                "properties": {
                    "accessModes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1\n+optional\n+listType=atomic"
                    },
                    "selector": {
                        "$ref": "#/components/schemas/v1LabelSelector"
                    },
                    "resources": {
                        "$ref": "#/components/schemas/v1VolumeResourceRequirements"
                    },
                    "volumeName": {
                        "type": "string",
                        "title": "volumeName is the binding reference to the PersistentVolume backing this claim.\n+optional"
                    },
                    "storageClassName": {
                        "type": "string",
                        "title": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1\n+optional"
                    },
                    "volumeMode": {
                        "type": "string",
                        "title": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.\n+optional"
                    },
                    "dataSource": {
                        "$ref": "#/components/schemas/v1TypedLocalObjectReference"
                    },
                    "dataSourceRef": {
                        "$ref": "#/components/schemas/v1TypedObjectReference"
                    },
                    "volumeAttributesClassName": {
                        "type": "string",
                        "title": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string value means that no VolumeAttributesClass\nwill be applied to the claim but it's not allowed to reset this field to empty string once it is set.\nIf unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass\nwill be set by the persistentvolume controller if it exists.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/\n(Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).\n+featureGate=VolumeAttributesClass\n+optional"
                    }
                },
                "title": "PersistentVolumeClaimSpec describes the common attributes of storage devices\nand allows a Source for provider-specific attributes"
            },
            "v1PersistentVolumeClaimTemplate": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ObjectMeta"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/v1PersistentVolumeClaimSpec"
                    }
                },
                "description": "PersistentVolumeClaimTemplate is used to produce\nPersistentVolumeClaim objects as part of an EphemeralVolumeSource."
            },
            "v1PersistentVolumeClaimVolumeSource": {
                "type": "object",
                "properties": {
                    "claimName": {
                        "type": "string",
                        "title": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "title": "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false.\n+optional"
                    }
                },
                "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace.\nThis volume finds the bound PV and mounts that volume for the pod. A\nPersistentVolumeClaimVolumeSource is, essentially, a wrapper around another\ntype of volume that is owned by someone else (the system)."
            },
            "v1PhotonPersistentDiskVolumeSource": {
                "type": "object",
                "properties": {
                    "pdID": {
                        "type": "string",
                        "title": "pdID is the ID that identifies Photon Controller persistent disk"
                    },
                    "fsType": {
                        "type": "string",
                        "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
                    }
                },
                "description": "Represents a Photon Controller persistent disk resource."
            },
            "v1PodAffinity": {
                "type": "object",
                "properties": {
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1PodAffinityTerm"
                        },
                        "title": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.\n+optional\n+listType=atomic"
                    },
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1WeightedPodAffinityTerm"
                        },
                        "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.\n+optional\n+listType=atomic"
                    }
                },
                "description": "Pod affinity is a group of inter pod affinity scheduling rules."
            },
            "v1PodAffinityTerm": {
                "type": "object",
                "properties": {
                    "labelSelector": {
                        "$ref": "#/components/schemas/v1LabelSelector"
                    },
                    "namespaces": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".\n+optional\n+listType=atomic"
                    },
                    "topologyKey": {
                        "type": "string",
                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed."
                    },
                    "namespaceSelector": {
                        "$ref": "#/components/schemas/v1LabelSelector"
                    },
                    "matchLabelKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).\n\n+listType=atomic\n+optional"
                    },
                    "mismatchLabelKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).\n\n+listType=atomic\n+optional"
                    }
                },
                "title": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running"
            },
            "v1PodAntiAffinity": {
                "type": "object",
                "properties": {
                    "requiredDuringSchedulingIgnoredDuringExecution": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1PodAffinityTerm"
                        },
                        "title": "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.\n+optional\n+listType=atomic"
                    },
                    "preferredDuringSchedulingIgnoredDuringExecution": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1WeightedPodAffinityTerm"
                        },
                        "title": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.\n+optional\n+listType=atomic"
                    }
                },
                "description": "Pod anti affinity is a group of inter pod anti affinity scheduling rules."
            },
            "v1PodDNSConfig": {
                "type": "object",
                "properties": {
                    "nameservers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.\n+optional\n+listType=atomic"
                    },
                    "searches": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.\n+optional\n+listType=atomic"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1PodDNSConfigOption"
                        },
                        "title": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.\n+optional\n+listType=atomic"
                    }
                },
                "description": "PodDNSConfig defines the DNS parameters of a pod in addition to\nthose generated from DNSPolicy."
            },
            "v1PodDNSConfigOption": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name is this DNS resolver option's name.\nRequired."
                    },
                    "value": {
                        "type": "string",
                        "title": "Value is this DNS resolver option's value.\n+optional"
                    }
                },
                "description": "PodDNSConfigOption defines DNS resolver options of a pod."
            },
            "v1PodFailurePolicy": {
                "type": "object",
                "properties": {
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1PodFailurePolicyRule"
                        },
                        "title": "A list of pod failure policy rules. The rules are evaluated in order.\nOnce a rule matches a Pod failure, the remaining of the rules are ignored.\nWhen no rule matches the Pod failure, the default handling applies - the\ncounter of pod failures is incremented and it is checked against\nthe backoffLimit. At most 20 elements are allowed.\n+listType=atomic"
                    }
                },
                "description": "PodFailurePolicy describes how failed pods influence the backoffLimit."
            },
            "v1PodFailurePolicyOnExitCodesRequirement": {
                "type": "object",
                "properties": {
                    "containerName": {
                        "type": "string",
                        "title": "Restricts the check for exit codes to the container with the\nspecified name. When null, the rule applies to all containers.\nWhen specified, it should match one the container or initContainer\nnames in the pod template.\n+optional"
                    },
                    "operator": {
                        "type": "string",
                        "description": "- In: the requirement is satisfied if at least one container exit code\n  (might be multiple if there are multiple containers not restricted\n  by the 'containerName' field) is in the set of specified values.\n- NotIn: the requirement is satisfied if at least one container exit code\n  (might be multiple if there are multiple containers not restricted\n  by the 'containerName' field) is not in the set of specified values.\nAdditional values are considered to be added in the future. Clients should\nreact to an unknown operator by assuming the requirement is not satisfied.",
                        "title": "Represents the relationship between the container exit code(s) and the\nspecified values. Containers completed with success (exit code 0) are\nexcluded from the requirement check. Possible values are:"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "title": "Specifies the set of values. Each returned container exit code (might be\nmultiple in case of multiple containers) is checked against this set of\nvalues with respect to the operator. The list of values must be ordered\nand must not contain duplicates. Value '0' cannot be used for the In operator.\nAt least one element is required. At most 255 elements are allowed.\n+listType=set"
                    }
                },
                "description": "PodFailurePolicyOnExitCodesRequirement describes the requirement for handling\na failed pod based on its container exit codes. In particular, it lookups the\n.state.terminated.exitCode for each app container and init container status,\nrepresented by the .status.containerStatuses and .status.initContainerStatuses\nfields in the Pod status, respectively. Containers completed with success\n(exit code 0) are excluded from the requirement check."
            },
            "v1PodFailurePolicyOnPodConditionsPattern": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Specifies the required Pod condition type. To match a pod condition\nit is required that specified type equals the pod condition type."
                    },
                    "status": {
                        "type": "string",
                        "description": "Specifies the required Pod condition status. To match a pod condition\nit is required that the specified status equals the pod condition status.\nDefaults to True."
                    }
                },
                "description": "PodFailurePolicyOnPodConditionsPattern describes a pattern for matching\nan actual pod condition type."
            },
            "v1PodFailurePolicyRule": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "- FailJob: indicates that the pod's job is marked as Failed and all\n  running pods are terminated.\n- FailIndex: indicates that the pod's index is marked as Failed and will\n  not be restarted.\n  This value is beta-level. It can be used when the\n  `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default).\n- Ignore: indicates that the counter towards the .backoffLimit is not\n  incremented and a replacement pod is created.\n- Count: indicates that the pod is handled in the default way - the\n  counter towards the .backoffLimit is incremented.\nAdditional values are considered to be added in the future. Clients should\nreact to an unknown action by skipping the rule.",
                        "title": "Specifies the action taken on a pod failure when the requirements are satisfied.\nPossible values are:"
                    },
                    "onExitCodes": {
                        "$ref": "#/components/schemas/v1PodFailurePolicyOnExitCodesRequirement"
                    },
                    "onPodConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1PodFailurePolicyOnPodConditionsPattern"
                        },
                        "title": "Represents the requirement on the pod conditions. The requirement is represented\nas a list of pod condition patterns. The requirement is satisfied if at\nleast one pattern matches an actual pod condition. At most 20 elements are allowed.\n+listType=atomic\n+optional"
                    }
                },
                "description": "PodFailurePolicyRule describes how a pod failure is handled when the requirements are met.\nOne of onExitCodes and onPodConditions, but not both, can be used in each rule."
            },
            "v1PodOS": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name is the name of the operating system. The currently supported values are linux and windows.\nAdditional value may be defined in future and can be one of:\nhttps://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration\nClients should expect to handle additional values and treat unrecognized values in this field as os: null"
                    }
                },
                "description": "PodOS defines the OS parameters of a pod."
            },
            "v1PodReadinessGate": {
                "type": "object",
                "properties": {
                    "conditionType": {
                        "type": "string",
                        "description": "ConditionType refers to a condition in the pod's condition list with matching type."
                    }
                },
                "title": "PodReadinessGate contains the reference to a pod condition"
            },
            "v1PodResourceClaim": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name uniquely identifies this resource claim inside the pod.\nThis must be a DNS_LABEL."
                    },
                    "resourceClaimName": {
                        "type": "string",
                        "description": "ResourceClaimName is the name of a ResourceClaim object in the same\nnamespace as this pod.\n\nExactly one of ResourceClaimName and ResourceClaimTemplateName must\nbe set."
                    },
                    "resourceClaimTemplateName": {
                        "type": "string",
                        "description": "ResourceClaimTemplateName is the name of a ResourceClaimTemplate\nobject in the same namespace as this pod.\n\nThe template will be used to create a new ResourceClaim, which will\nbe bound to this pod. When this pod is deleted, the ResourceClaim\nwill also be deleted. The pod name and resource name, along with a\ngenerated component, will be used to form a unique name for the\nResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.\n\nThis field is immutable and no changes will be made to the\ncorresponding ResourceClaim by the control plane after creating the\nResourceClaim.\n\nExactly one of ResourceClaimName and ResourceClaimTemplateName must\nbe set."
                    }
                },
                "description": "PodResourceClaim references exactly one ResourceClaim, either directly\nor by naming a ResourceClaimTemplate which is then turned into a ResourceClaim\nfor the pod.\n\nIt adds a name to it that uniquely identifies the ResourceClaim inside the Pod.\nContainers that need access to the ResourceClaim reference it with this name."
            },
            "v1PodSchedulingGate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the scheduling gate.\nEach scheduling gate must have a unique name field."
                    }
                },
                "description": "PodSchedulingGate is associated to a Pod to guard its scheduling."
            },
            "v1PodSecurityContext": {
                "type": "object",
                "properties": {
                    "seLinuxOptions": {
                        "$ref": "#/components/schemas/v1SELinuxOptions"
                    },
                    "windowsOptions": {
                        "$ref": "#/components/schemas/v1WindowsSecurityContextOptions"
                    },
                    "runAsUser": {
                        "type": "string",
                        "format": "int64",
                        "title": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
                    },
                    "runAsGroup": {
                        "type": "string",
                        "format": "int64",
                        "title": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
                    },
                    "runAsNonRoot": {
                        "type": "boolean",
                        "title": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional"
                    },
                    "supplementalGroups": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "int64"
                        },
                        "title": "A list of groups applied to the first process run in each container, in\naddition to the container's primary GID and fsGroup (if specified).  If\nthe SupplementalGroupsPolicy feature is enabled, the\nsupplementalGroupsPolicy field determines whether these are in addition\nto or instead of any group memberships defined in the container image.\nIf unspecified, no additional groups are added, though group memberships\ndefined in the container image may still be used, depending on the\nsupplementalGroupsPolicy field.\nNote that this field cannot be set when spec.os.name is windows.\n+optional\n+listType=atomic"
                    },
                    "supplementalGroupsPolicy": {
                        "type": "string",
                        "title": "Defines how supplemental groups of the first container processes are calculated.\nValid values are \"Merge\" and \"Strict\". If not specified, \"Merge\" is used.\n(Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled\nand the container runtime must implement support for this feature.\nNote that this field cannot be set when spec.os.name is windows.\nTODO: update the default value to \"Merge\" when spec.os.name is not windows in v1.34\n+featureGate=SupplementalGroupsPolicy\n+optional"
                    },
                    "fsGroup": {
                        "type": "string",
                        "format": "int64",
                        "description": "1. The owning GID will be the FSGroup\n2. The setgid bit is set (new files created in the volume will be owned by FSGroup)\n3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.\nNote that this field cannot be set when spec.os.name is windows.\n+optional",
                        "title": "A special supplemental group that applies to all containers in a pod.\nSome volume types allow the Kubelet to change the ownership of that volume\nto be owned by the pod:"
                    },
                    "sysctls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1Sysctl"
                        },
                        "title": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nNote that this field cannot be set when spec.os.name is windows.\n+optional\n+listType=atomic"
                    },
                    "fsGroupChangePolicy": {
                        "type": "string",
                        "title": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume\nbefore being exposed inside Pod. This field will only apply to\nvolume types which support fsGroup based ownership(and permissions).\nIt will have no effect on ephemeral volume types such as: secret, configmaps\nand emptydir.\nValid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
                    },
                    "seccompProfile": {
                        "$ref": "#/components/schemas/v1SeccompProfile"
                    },
                    "appArmorProfile": {
                        "$ref": "#/components/schemas/v1AppArmorProfile"
                    },
                    "seLinuxChangePolicy": {
                        "type": "string",
                        "description": "seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.\nIt has no effect on nodes that do not support SELinux or to volumes does not support SELinux.\nValid values are \"MountOption\" and \"Recursive\".\n\n\"Recursive\" means relabeling of all files on all Pod volumes by the container runtime.\nThis may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.\n\n\"MountOption\" mounts all eligible Pod volumes with `-o context` mount option.\nThis requires all Pods that share the same volume to use the same SELinux label.\nIt is not possible to share the same volume among privileged and unprivileged Pods.\nEligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes\nwhose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their\nCSIDriver instance. Other volumes are always re-labelled recursively.\n\"MountOption\" value is allowed only when SELinuxMount feature gate is enabled.\n\nIf not specified and SELinuxMount feature gate is enabled, \"MountOption\" is used.\nIf not specified and SELinuxMount feature gate is disabled, \"MountOption\" is used for ReadWriteOncePod volumes\nand \"Recursive\" for all other volumes.\n\nThis field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.\n\nAll Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.\nNote that this field cannot be set when spec.os.name is windows.\n+featureGate=SELinuxChangePolicy\n+optional"
                    }
                },
                "description": "PodSecurityContext holds pod-level security attributes and common container settings.\nSome fields are also present in container.securityContext.  Field values of\ncontainer.securityContext take precedence over field values of PodSecurityContext."
            },
            "v1PodSpec": {
                "type": "object",
                "properties": {
                    "volumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1Volume"
                        },
                        "title": "List of volumes that can be mounted by containers belonging to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes\n+optional\n+patchMergeKey=name\n+patchStrategy=merge,retainKeys\n+listType=map\n+listMapKey=name"
                    },
                    "initContainers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1Container"
                        },
                        "title": "List of initialization containers belonging to the pod.\nInit containers are executed in order prior to containers being started. If any\ninit container fails, the pod is considered to have failed and is handled according\nto its restartPolicy. The name for an init container or normal container must be\nunique among all containers.\nInit containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes.\nThe resourceRequirements of an init container are taken into account during scheduling\nby finding the highest request/limit for each resource type, and then using the max of\nof that value or the sum of the normal containers. Limits are applied to init containers\nin a similar fashion.\nInit containers cannot currently be added or removed.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/\n+patchMergeKey=name\n+patchStrategy=merge\n+listType=map\n+listMapKey=name"
                    },
                    "containers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1Container"
                        },
                        "title": "List of containers belonging to the pod.\nContainers cannot currently be added or removed.\nThere must be at least one container in a Pod.\nCannot be updated.\n+patchMergeKey=name\n+patchStrategy=merge\n+listType=map\n+listMapKey=name"
                    },
                    "ephemeralContainers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1EphemeralContainer"
                        },
                        "title": "List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing\npod to perform user-initiated actions such as debugging. This list cannot be specified when\ncreating a pod, and it cannot be modified by updating the pod spec. In order to add an\nephemeral container to an existing pod, use the pod's ephemeralcontainers subresource.\n+optional\n+patchMergeKey=name\n+patchStrategy=merge\n+listType=map\n+listMapKey=name"
                    },
                    "restartPolicy": {
                        "type": "string",
                        "title": "Restart policy for all containers within the pod.\nOne of Always, OnFailure, Never. In some contexts, only a subset of those values may be permitted.\nDefault to Always.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy\n+optional"
                    },
                    "terminationGracePeriodSeconds": {
                        "type": "string",
                        "format": "int64",
                        "title": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nIf this value is nil, the default grace period will be used instead.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nDefaults to 30 seconds.\n+optional"
                    },
                    "activeDeadlineSeconds": {
                        "type": "string",
                        "format": "int64",
                        "title": "Optional duration in seconds the pod may be active on the node relative to\nStartTime before the system will actively try to mark it failed and kill associated containers.\nValue must be a positive integer.\n+optional"
                    },
                    "dnsPolicy": {
                        "type": "string",
                        "title": "Set DNS policy for the pod.\nDefaults to \"ClusterFirst\".\nValid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.\nDNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.\nTo have DNS options set along with hostNetwork, you have to specify DNS policy\nexplicitly to 'ClusterFirstWithHostNet'.\n+optional"
                    },
                    "nodeSelector": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "NodeSelector is a selector which must be true for the pod to fit on a node.\nSelector which must match a node's labels for the pod to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n+optional\n+mapType=atomic"
                    },
                    "serviceAccountName": {
                        "type": "string",
                        "title": "ServiceAccountName is the name of the ServiceAccount to use to run this pod.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n+optional"
                    },
                    "serviceAccount": {
                        "type": "string",
                        "title": "DeprecatedServiceAccount is a deprecated alias for ServiceAccountName.\nDeprecated: Use serviceAccountName instead.\n+k8s:conversion-gen=false\n+optional"
                    },
                    "automountServiceAccountToken": {
                        "type": "boolean",
                        "title": "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.\n+optional"
                    },
                    "nodeName": {
                        "type": "string",
                        "title": "NodeName indicates in which node this pod is scheduled.\nIf empty, this pod is a candidate for scheduling by the scheduler defined in schedulerName.\nOnce this field is set, the kubelet for this node becomes responsible for the lifecycle of this pod.\nThis field should not be used to express a desire for the pod to be scheduled on a specific node.\nhttps://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodename\n+optional"
                    },
                    "hostNetwork": {
                        "type": "boolean",
                        "title": "Host networking requested for this pod. Use the host's network namespace.\nIf this option is set, the ports that will be used must be specified.\nDefault to false.\n+k8s:conversion-gen=false\n+optional"
                    },
                    "hostPID": {
                        "type": "boolean",
                        "title": "Use the host's pid namespace.\nOptional: Default to false.\n+k8s:conversion-gen=false\n+optional"
                    },
                    "hostIPC": {
                        "type": "boolean",
                        "title": "Use the host's ipc namespace.\nOptional: Default to false.\n+k8s:conversion-gen=false\n+optional"
                    },
                    "shareProcessNamespace": {
                        "type": "boolean",
                        "title": "Share a single process namespace between all of the containers in a pod.\nWhen this is set containers will be able to view and signal processes from other containers\nin the same pod, and the first process in each container will not be assigned PID 1.\nHostPID and ShareProcessNamespace cannot both be set.\nOptional: Default to false.\n+k8s:conversion-gen=false\n+optional"
                    },
                    "securityContext": {
                        "$ref": "#/components/schemas/v1PodSecurityContext"
                    },
                    "imagePullSecrets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1LocalObjectReference"
                        },
                        "title": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.\nIf specified, these secrets will be passed to individual puller implementations for them to use.\nMore info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod\n+optional\n+patchMergeKey=name\n+patchStrategy=merge\n+listType=map\n+listMapKey=name"
                    },
                    "hostname": {
                        "type": "string",
                        "title": "Specifies the hostname of the Pod\nIf not specified, the pod's hostname will be set to a system-defined value.\n+optional"
                    },
                    "subdomain": {
                        "type": "string",
                        "title": "If specified, the fully qualified Pod hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\".\nIf not specified, the pod will not have a domainname at all.\n+optional"
                    },
                    "affinity": {
                        "$ref": "#/components/schemas/v1Affinity"
                    },
                    "schedulerName": {
                        "type": "string",
                        "title": "If specified, the pod will be dispatched by specified scheduler.\nIf not specified, the pod will be dispatched by default scheduler.\n+optional"
                    },
                    "tolerations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1Toleration"
                        },
                        "title": "If specified, the pod's tolerations.\n+optional\n+listType=atomic"
                    },
                    "hostAliases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1HostAlias"
                        },
                        "title": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts\nfile if specified.\n+optional\n+patchMergeKey=ip\n+patchStrategy=merge\n+listType=map\n+listMapKey=ip"
                    },
                    "priorityClassName": {
                        "type": "string",
                        "title": "If specified, indicates the pod's priority. \"system-node-critical\" and\n\"system-cluster-critical\" are two special keywords which indicate the\nhighest priorities with the former being the highest priority. Any other\nname must be defined by creating a PriorityClass object with that name.\nIf not specified, the pod priority will be default or zero if there is no\ndefault.\n+optional"
                    },
                    "priority": {
                        "type": "integer",
                        "format": "int32",
                        "title": "The priority value. Various system components use this field to find the\npriority of the pod. When Priority Admission Controller is enabled, it\nprevents users from setting this field. The admission controller populates\nthis field from PriorityClassName.\nThe higher the value, the higher the priority.\n+optional"
                    },
                    "dnsConfig": {
                        "$ref": "#/components/schemas/v1PodDNSConfig"
                    },
                    "readinessGates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1PodReadinessGate"
                        },
                        "title": "If specified, all readiness gates will be evaluated for pod readiness.\nA pod is ready when all its containers are ready AND\nall conditions specified in the readiness gates have status equal to \"True\"\nMore info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates\n+optional\n+listType=atomic"
                    },
                    "runtimeClassName": {
                        "type": "string",
                        "title": "RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used\nto run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.\nIf unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an\nempty definition that uses the default runtime handler.\nMore info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class\n+optional"
                    },
                    "enableServiceLinks": {
                        "type": "boolean",
                        "title": "EnableServiceLinks indicates whether information about services should be injected into pod's\nenvironment variables, matching the syntax of Docker links.\nOptional: Defaults to true.\n+optional"
                    },
                    "preemptionPolicy": {
                        "type": "string",
                        "title": "PreemptionPolicy is the Policy for preempting pods with lower priority.\nOne of Never, PreemptLowerPriority.\nDefaults to PreemptLowerPriority if unset.\n+optional"
                    },
                    "overhead": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/resourceQuantity"
                        },
                        "title": "Overhead represents the resource overhead associated with running a pod for a given RuntimeClass.\nThis field will be autopopulated at admission time by the RuntimeClass admission controller. If\nthe RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests.\nThe RuntimeClass admission controller will reject Pod create requests which have the overhead already\nset. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value\ndefined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero.\nMore info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md\n+optional"
                    },
                    "topologySpreadConstraints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1TopologySpreadConstraint"
                        },
                        "title": "TopologySpreadConstraints describes how a group of pods ought to spread across topology\ndomains. Scheduler will schedule pods in a way which abides by the constraints.\nAll topologySpreadConstraints are ANDed.\n+optional\n+patchMergeKey=topologyKey\n+patchStrategy=merge\n+listType=map\n+listMapKey=topologyKey\n+listMapKey=whenUnsatisfiable"
                    },
                    "setHostnameAsFQDN": {
                        "type": "boolean",
                        "title": "If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default).\nIn Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname).\nIn Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Tcpip\\\\Parameters to FQDN.\nIf a pod does not have FQDN, this has no effect.\nDefault to false.\n+optional"
                    },
                    "os": {
                        "$ref": "#/components/schemas/v1PodOS"
                    },
                    "hostUsers": {
                        "type": "boolean",
                        "title": "Use the host's user namespace.\nOptional: Default to true.\nIf set to true or not present, the pod will be run in the host user namespace, useful\nfor when the pod needs a feature only available to the host user namespace, such as\nloading a kernel module with CAP_SYS_MODULE.\nWhen set to false, a new userns is created for the pod. Setting false is useful for\nmitigating container breakout vulnerabilities even allowing users to run their\ncontainers as root without actually having root privileges on the host.\nThis field is alpha-level and is only honored by servers that enable the UserNamespacesSupport feature.\n+k8s:conversion-gen=false\n+optional"
                    },
                    "schedulingGates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1PodSchedulingGate"
                        },
                        "description": "SchedulingGates is an opaque list of values that if specified will block scheduling the pod.\nIf schedulingGates is not empty, the pod will stay in the SchedulingGated state and the\nscheduler will not attempt to schedule the pod.\n\nSchedulingGates can only be set at pod creation time, and be removed only afterwards.\n\n+patchMergeKey=name\n+patchStrategy=merge\n+listType=map\n+listMapKey=name\n+optional"
                    },
                    "resourceClaims": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1PodResourceClaim"
                        },
                        "description": "ResourceClaims defines which ResourceClaims must be allocated\nand reserved before the Pod is allowed to start. The resources\nwill be made available to those containers which consume them\nby name.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable.\n\n+patchMergeKey=name\n+patchStrategy=merge,retainKeys\n+listType=map\n+listMapKey=name\n+featureGate=DynamicResourceAllocation\n+optional"
                    },
                    "resources": {
                        "$ref": "#/components/schemas/v1ResourceRequirements"
                    }
                },
                "description": "PodSpec is a description of a pod."
            },
            "v1PodTemplateMetadata": {
                "type": "object",
                "properties": {
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Labels Additional labels to add to the experiment\n+optional"
                    },
                    "annotations": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "title": "Annotations additional annotations to add to the experiment\n+optional"
                    }
                },
                "title": "PodTemplateMetadata extra labels to add to the template"
            },
            "v1PodTemplateSpec": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ObjectMeta"
                    },
                    "spec": {
                        "$ref": "#/components/schemas/v1PodSpec"
                    }
                },
                "title": "PodTemplateSpec describes the data a pod should have when created from a template"
            },
            "v1PortStatus": {
                "type": "object",
                "properties": {
                    "port": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Port is the port number of the service port of which status is recorded here"
                    },
                    "protocol": {
                        "type": "string",
                        "title": "Protocol is the protocol of the service port of which status is recorded here\nThe supported values are: \"TCP\", \"UDP\", \"SCTP\""
                    },
                    "error": {
                        "type": "string",
                        "title": "Error is to record the problem with the service port\nThe format of the error shall comply with the following rules:\n- built-in error values shall be specified in this file and those shall use\n  CamelCase names\n- cloud provider specific error values must have names that comply with the\n  format foo.example.com/CamelCase.\n---\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)\n+optional\n+kubebuilder:validation:Required\n+kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`\n+kubebuilder:validation:MaxLength=316"
                    }
                },
                "title": "PortStatus represents the error condition of a service port"
            },
            "v1PortworxVolumeSource": {
                "type": "object",
                "properties": {
                    "volumeID": {
                        "type": "string",
                        "title": "volumeID uniquely identifies a Portworx volume"
                    },
                    "fsType": {
                        "type": "string",
                        "description": "fSType represents the filesystem type to mount\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified."
                    },
                    "readOnly": {
                        "type": "boolean",
                        "title": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
                    }
                },
                "description": "PortworxVolumeSource represents a Portworx volume resource."
            },
            "v1PreferredSchedulingTerm": {
                "type": "object",
                "properties": {
                    "weight": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100."
                    },
                    "preference": {
                        "$ref": "#/components/schemas/v1NodeSelectorTerm"
                    }
                },
                "description": "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op)."
            },
            "v1Probe": {
                "type": "object",
                "properties": {
                    "handler": {
                        "$ref": "#/components/schemas/v1ProbeHandler"
                    },
                    "initialDelaySeconds": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
                    },
                    "timeoutSeconds": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
                    },
                    "periodSeconds": {
                        "type": "integer",
                        "format": "int32",
                        "title": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.\n+optional"
                    },
                    "successThreshold": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.\n+optional"
                    },
                    "failureThreshold": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.\n+optional"
                    },
                    "terminationGracePeriodSeconds": {
                        "type": "string",
                        "format": "int64",
                        "title": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.\n+optional"
                    }
                },
                "description": "Probe describes a health check to be performed against a container to determine whether it is\nalive or ready to receive traffic."
            },
            "v1ProbeHandler": {
                "type": "object",
                "properties": {
                    "exec": {
                        "$ref": "#/components/schemas/v1ExecAction"
                    },
                    "httpGet": {
                        "$ref": "#/components/schemas/v1HTTPGetAction"
                    },
                    "tcpSocket": {
                        "$ref": "#/components/schemas/v1TCPSocketAction"
                    },
                    "grpc": {
                        "$ref": "#/components/schemas/v1GRPCAction"
                    }
                },
                "description": "ProbeHandler defines a specific action that should be taken in a probe.\nOne and only one of the fields must be specified."
            },
            "v1ProjectedVolumeSource": {
                "type": "object",
                "properties": {
                    "sources": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1VolumeProjection"
                        },
                        "title": "sources is the list of volume projections. Each entry in this list\nhandles one source.\n+optional\n+listType=atomic"
                    },
                    "defaultMode": {
                        "type": "integer",
                        "format": "int32",
                        "title": "defaultMode are the mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
                    }
                },
                "title": "Represents a projected volume source"
            },
            "v1PrometheusAuth": {
                "type": "object",
                "properties": {
                    "sigv4": {
                        "$ref": "#/components/schemas/v1Sigv4Config"
                    }
                },
                "title": "PrometheusMetric defines the prometheus query to perform canary analysis"
            },
            "v1PrometheusMetric": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "title": "Address is the HTTP address and port of the prometheus server"
                    },
                    "query": {
                        "type": "string",
                        "title": "Query is a raw prometheus query to perform"
                    },
                    "authentication": {
                        "$ref": "#/components/schemas/v1PrometheusAuth"
                    },
                    "timeout": {
                        "type": "string",
                        "format": "int64",
                        "title": "Timeout represents the duration within which a prometheus query should complete. It is expressed in seconds.\n+optional"
                    },
                    "insecure": {
                        "type": "boolean",
                        "title": "Insecure skips host TLS verification"
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1WebMetricHeader"
                        },
                        "title": "Headers are HTTP headers to use in the request\n+optional\n+patchMergeKey=key\n+patchStrategy=merge"
                    }
                },
                "title": "PrometheusMetric defines the prometheus query to perform canary analysis"
            },
            "v1Proxy": {
                "type": "object",
                "properties": {
                    "http": {
                        "type": "string"
                    },
                    "https": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "skipSSLVerify": {
                        "type": "boolean"
                    }
                }
            },
            "v1QuobyteVolumeSource": {
                "type": "object",
                "properties": {
                    "registry": {
                        "type": "string",
                        "title": "registry represents a single or multiple Quobyte Registry services\nspecified as a string as host:port pair (multiple entries are separated with commas)\nwhich acts as the central registry for volumes"
                    },
                    "volume": {
                        "type": "string",
                        "description": "volume is a string that references an already created Quobyte volume by name."
                    },
                    "readOnly": {
                        "type": "boolean",
                        "title": "readOnly here will force the Quobyte volume to be mounted with read-only permissions.\nDefaults to false.\n+optional"
                    },
                    "user": {
                        "type": "string",
                        "title": "user to map volume access to\nDefaults to serivceaccount user\n+optional"
                    },
                    "group": {
                        "type": "string",
                        "title": "group to map volume access to\nDefault is no group\n+optional"
                    },
                    "tenant": {
                        "type": "string",
                        "title": "tenant owning the given Quobyte volume in the Backend\nUsed with dynamically provisioned Quobyte volumes, value is set by the plugin\n+optional"
                    }
                },
                "description": "Represents a Quobyte mount that lasts the lifetime of a pod.\nQuobyte volumes do not support ownership management or SELinux relabeling."
            },
            "v1RBDVolumeSource": {
                "type": "object",
                "properties": {
                    "monitors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "monitors is a collection of Ceph monitors.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+listType=atomic"
                    },
                    "image": {
                        "type": "string",
                        "title": "image is the rados image name.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
                    },
                    "fsType": {
                        "type": "string",
                        "title": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
                    },
                    "pool": {
                        "type": "string",
                        "title": "pool is the rados pool name.\nDefault is rbd.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional\n+default=\"rbd\""
                    },
                    "user": {
                        "type": "string",
                        "title": "user is the rados user name.\nDefault is admin.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional\n+default=\"admin\""
                    },
                    "keyring": {
                        "type": "string",
                        "title": "keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional\n+default=\"/etc/ceph/keyring\""
                    },
                    "secretRef": {
                        "$ref": "#/components/schemas/v1LocalObjectReference"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "title": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
                    }
                },
                "description": "Represents a Rados Block Device mount that lasts the lifetime of a pod.\nRBD volumes support ownership management and SELinux relabeling."
            },
            "v1RecentDeploymentQuery": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "operationPhase": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1OperationPhase"
                        }
                    },
                    "applicationName": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "endTime": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "searchTerm": {
                        "type": "string"
                    },
                    "agentIdentifier": {
                        "type": "string"
                    },
                    "serviceRef": {
                        "type": "string"
                    },
                    "envRef": {
                        "type": "string"
                    }
                },
                "description": "RecentDeploymentQuery",
                "title": "RecentDeploymentQuery",
                "required": [
                    "accountIdentifier"
                ]
            },
            "v1RecentDeploymentsDetailsList": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1DeploymentsDetails"
                        }
                    },
                    "pageItemCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "v1RecentlyCreatedCount": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "recentlyCreated": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "v1RecentlyCreatedOverview": {
                "type": "object",
                "properties": {
                    "appCounts": {
                        "$ref": "#/components/schemas/v1RecentlyCreatedCount"
                    },
                    "repoCounts": {
                        "$ref": "#/components/schemas/v1RecentlyCreatedCount"
                    },
                    "clusterCounts": {
                        "$ref": "#/components/schemas/v1RecentlyCreatedCount"
                    },
                    "appSetCounts": {
                        "$ref": "#/components/schemas/v1RecentlyCreatedCount"
                    }
                }
            },
            "v1RepoByUrlRespList": {
                "type": "object",
                "properties": {
                    "repository": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/servicev1Repository"
                        }
                    }
                }
            },
            "v1RepoListReq": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    },
                    "searchTerm": {
                        "type": "string"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "filter": {
                        "type": "object",
                        "description": "Filters for Repositories. Eg. \"identifier\": { \"$in\": [\"id1\", \"id2\"]"
                    },
                    "sortBy": {
                        "$ref": "#/components/schemas/RepoListReqRepoSortByOptions"
                    },
                    "sortOrder": {
                        "$ref": "#/components/schemas/v1SortOrderOptions"
                    },
                    "inheritedCreds": {
                        "type": "boolean"
                    }
                }
            },
            "v1RepositoryCredentialsQuery": {
                "type": "object",
                "properties": {
                    "accountIdentifier": {
                        "type": "string",
                        "description": "Account Identifier for the Entity."
                    },
                    "projectIdentifier": {
                        "type": "string",
                        "description": "Project Identifier for the Entity."
                    },
                    "orgIdentifier": {
                        "type": "string",
                        "description": "Organization Identifier for the Entity."
                    },
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    },
                    "identifier": {
                        "type": "string"
                    },
                    "searchTerm": {
                        "type": "string"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "filter": {
                        "type": "object",
                        "description": "Filters for Repo Credentials. Eg. \"identifier\": { \"$in\": [\"id1\", \"id2\"]"
                    }
                }
            },
            "v1Repositorylist": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/servicev1Repository"
                        }
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalItems": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageItemCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "v1ResourceClaim": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container."
                    },
                    "request": {
                        "type": "string",
                        "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.\n\n+optional"
                    }
                },
                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims."
            },
            "v1ResourceFieldSelector": {
                "type": "object",
                "properties": {
                    "containerName": {
                        "type": "string",
                        "title": "Container name: required for volumes, optional for env vars\n+optional"
                    },
                    "resource": {
                        "type": "string",
                        "title": "Required: resource to select"
                    },
                    "divisor": {
                        "$ref": "#/components/schemas/resourceQuantity"
                    }
                },
                "title": "ResourceFieldSelector represents container resources (cpu, memory) and their output format\n+structType=atomic"
            },
            "v1ResourceRequirements": {
                "type": "object",
                "properties": {
                    "limits": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/resourceQuantity"
                        },
                        "title": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
                    },
                    "requests": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/resourceQuantity"
                        },
                        "title": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
                    },
                    "claims": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ResourceClaim"
                        },
                        "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.\n\n+listType=map\n+listMapKey=name\n+featureGate=DynamicResourceAllocation\n+optional"
                    }
                },
                "description": "ResourceRequirements describes the compute resource requirements."
            },
            "v1RolloutAnalysis": {
                "type": "object",
                "properties": {
                    "templates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1RolloutAnalysisTemplate"
                        },
                        "title": "Templates reference to a list of analysis templates to combine for an AnalysisRun\n+patchMergeKey=templateName\n+patchStrategy=merge"
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1AnalysisRunArgument"
                        },
                        "title": "Args the arguments that will be added to the AnalysisRuns\n+patchMergeKey=name\n+patchStrategy=merge"
                    },
                    "dryRun": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1DryRun"
                        },
                        "title": "DryRun object contains the settings for running the analysis in Dry-Run mode\n+patchMergeKey=metricName\n+patchStrategy=merge\n+optional"
                    },
                    "measurementRetention": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1MeasurementRetention"
                        },
                        "title": "MeasurementRetention object contains the settings for retaining the number of measurements during the analysis\n+patchMergeKey=metricName\n+patchStrategy=merge\n+optional"
                    },
                    "analysisRunMetadata": {
                        "$ref": "#/components/schemas/v1AnalysisRunMetadata"
                    }
                },
                "title": "RolloutAnalysis defines a template that is used to create a analysisRun"
            },
            "v1RolloutAnalysisRunInfo": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ObjectMeta"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "revision": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "successful": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "failed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "inconclusive": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "error": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "jobs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1RolloutJobInfo"
                        }
                    },
                    "nonJobInfo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1RolloutNonJobInfo"
                        }
                    },
                    "metrics": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1Metric"
                        }
                    }
                }
            },
            "v1RolloutAnalysisTemplate": {
                "type": "object",
                "properties": {
                    "templateName": {
                        "type": "string",
                        "title": "TemplateName name of template to use in AnalysisRun\n+optional"
                    },
                    "clusterScope": {
                        "type": "boolean",
                        "title": "Whether to look for the templateName at cluster scope or namespace scope\n+optional"
                    }
                }
            },
            "v1RolloutContainerInfo": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    }
                }
            },
            "v1RolloutExperimentInfo": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ObjectMeta"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "revision": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "replicaSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1RolloutReplicaSetInfo"
                        }
                    },
                    "analysisRuns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1RolloutAnalysisRunInfo"
                        }
                    }
                }
            },
            "v1RolloutExperimentStep": {
                "type": "object",
                "properties": {
                    "templates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1RolloutExperimentTemplate"
                        },
                        "title": "Templates what templates that should be added to the experiment. Should be non-nil\n+patchMergeKey=name\n+patchStrategy=merge"
                    },
                    "duration": {
                        "type": "string",
                        "title": "Duration is a duration string (e.g. 30s, 5m, 1h) that the experiment should run for\n+optional"
                    },
                    "analyses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1RolloutExperimentStepAnalysisTemplateRef"
                        },
                        "title": "Analyses reference which analysis templates to run with the experiment\n+patchMergeKey=name\n+patchStrategy=merge"
                    }
                },
                "title": "RolloutExperimentStep defines a template that is used to create a experiment for a step"
            },
            "v1RolloutExperimentStepAnalysisTemplateRef": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name is a name for this analysis template invocation"
                    },
                    "templateName": {
                        "type": "string",
                        "title": "TemplateName reference of the AnalysisTemplate name used by the Experiment to create the run"
                    },
                    "clusterScope": {
                        "type": "boolean",
                        "title": "Whether to look for the templateName at cluster scope or namespace scope\n+optional"
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1AnalysisRunArgument"
                        },
                        "title": "Args the arguments that will be added to the AnalysisRuns\n+patchMergeKey=name\n+patchStrategy=merge"
                    },
                    "requiredForCompletion": {
                        "type": "boolean",
                        "title": "RequiredForCompletion blocks the Experiment from completing until the analysis has completed"
                    }
                }
            },
            "v1RolloutExperimentTemplate": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name description of template that passed to the template"
                    },
                    "specRef": {
                        "type": "string",
                        "title": "SpecRef indicates where the rollout should get the RS template from"
                    },
                    "replicas": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Replicas replica count for the template\n+optional"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/v1PodTemplateMetadata"
                    },
                    "selector": {
                        "$ref": "#/components/schemas/v1LabelSelector"
                    },
                    "weight": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Weight sets the percentage of traffic the template's replicas should receive"
                    },
                    "service": {
                        "$ref": "#/components/schemas/v1TemplateService"
                    }
                },
                "title": "RolloutExperimentTemplate defines the template used to create experiments for the Rollout's experiment canary step"
            },
            "v1RolloutInfo": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ObjectMeta"
                    },
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "strategy": {
                        "type": "string"
                    },
                    "step": {
                        "type": "string"
                    },
                    "setWeight": {
                        "type": "string"
                    },
                    "actualWeight": {
                        "type": "string"
                    },
                    "ready": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "current": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "desired": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "updated": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "available": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "restartedAt": {
                        "type": "string"
                    },
                    "generation": {
                        "type": "string"
                    },
                    "replicaSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1RolloutReplicaSetInfo"
                        }
                    },
                    "experiments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1RolloutExperimentInfo"
                        }
                    },
                    "analysisRuns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1RolloutAnalysisRunInfo"
                        }
                    },
                    "containers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1RolloutContainerInfo"
                        }
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1CanaryStep"
                        }
                    },
                    "canaryRevision": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "canaryImages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "previewImages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "stableImages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v1RolloutJobInfo": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ObjectMeta"
                    },
                    "status": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "metricName": {
                        "type": "string"
                    },
                    "startedAt": {
                        "$ref": "#/components/schemas/v1Time"
                    }
                }
            },
            "v1RolloutNonJobInfo": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "metricName": {
                        "type": "string"
                    },
                    "startedAt": {
                        "$ref": "#/components/schemas/v1Time"
                    }
                }
            },
            "v1RolloutPause": {
                "type": "object",
                "properties": {
                    "duration": {
                        "$ref": "#/components/schemas/intstrIntOrString"
                    }
                },
                "title": "RolloutPause defines a pause stage for a rollout"
            },
            "v1RolloutPodInfo": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ObjectMeta"
                    },
                    "status": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "ready": {
                        "type": "string"
                    },
                    "restarts": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "v1RolloutReplicaSetInfo": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1ObjectMeta"
                    },
                    "status": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "revision": {
                        "type": "string"
                    },
                    "stable": {
                        "type": "boolean"
                    },
                    "canary": {
                        "type": "boolean"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "preview": {
                        "type": "boolean"
                    },
                    "replicas": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "available": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "template": {
                        "type": "string"
                    },
                    "scaleDownDeadline": {
                        "type": "string"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "pods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1RolloutPodInfo"
                        }
                    },
                    "ping": {
                        "type": "boolean"
                    },
                    "pong": {
                        "type": "boolean"
                    }
                }
            },
            "v1RouteMatch": {
                "type": "object",
                "properties": {
                    "method": {
                        "$ref": "#/components/schemas/v1StringMatch"
                    },
                    "path": {
                        "$ref": "#/components/schemas/v1StringMatch"
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/v1StringMatch"
                        },
                        "title": "Headers What request with matching headers should be mirrored\n+optional"
                    }
                }
            },
            "v1SELinuxOptions": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "string",
                        "title": "User is a SELinux user label that applies to the container.\n+optional"
                    },
                    "role": {
                        "type": "string",
                        "title": "Role is a SELinux role label that applies to the container.\n+optional"
                    },
                    "type": {
                        "type": "string",
                        "title": "Type is a SELinux type label that applies to the container.\n+optional"
                    },
                    "level": {
                        "type": "string",
                        "title": "Level is SELinux level label that applies to the container.\n+optional"
                    }
                },
                "title": "SELinuxOptions are the labels to be applied to the container"
            },
            "v1ScaleIOVolumeSource": {
                "type": "object",
                "properties": {
                    "gateway": {
                        "type": "string",
                        "description": "gateway is the host address of the ScaleIO API Gateway."
                    },
                    "system": {
                        "type": "string",
                        "description": "system is the name of the storage system as configured in ScaleIO."
                    },
                    "secretRef": {
                        "$ref": "#/components/schemas/v1LocalObjectReference"
                    },
                    "sslEnabled": {
                        "type": "boolean",
                        "title": "sslEnabled Flag enable/disable SSL communication with Gateway, default false\n+optional"
                    },
                    "protectionDomain": {
                        "type": "string",
                        "title": "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.\n+optional"
                    },
                    "storagePool": {
                        "type": "string",
                        "title": "storagePool is the ScaleIO Storage Pool associated with the protection domain.\n+optional"
                    },
                    "storageMode": {
                        "type": "string",
                        "title": "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned.\n+optional\n+default=\"ThinProvisioned\""
                    },
                    "volumeName": {
                        "type": "string",
                        "description": "volumeName is the name of a volume already created in the ScaleIO system\nthat is associated with this volume source."
                    },
                    "fsType": {
                        "type": "string",
                        "title": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\".\n+optional\n+default=\"xfs\""
                    },
                    "readOnly": {
                        "type": "boolean",
                        "title": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
                    }
                },
                "title": "ScaleIOVolumeSource represents a persistent ScaleIO volume"
            },
            "v1ScopeDetail": {
                "type": "object",
                "properties": {
                    "scope": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "step": {
                        "type": "string",
                        "format": "int64"
                    },
                    "start": {
                        "type": "string"
                    },
                    "end": {
                        "type": "string"
                    }
                }
            },
            "v1SeccompProfile": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Localhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.\n+unionDiscriminator",
                        "title": "type indicates which kind of seccomp profile will be applied.\nValid options are:"
                    },
                    "localhostProfile": {
                        "type": "string",
                        "title": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.\n+optional"
                    }
                },
                "title": "SeccompProfile defines a pod/container's seccomp profile settings.\nOnly one profile source may be set.\n+union"
            },
            "v1SecretEnvSource": {
                "type": "object",
                "properties": {
                    "localObjectReference": {
                        "$ref": "#/components/schemas/v1LocalObjectReference"
                    },
                    "optional": {
                        "type": "boolean",
                        "title": "Specify whether the Secret must be defined\n+optional"
                    }
                },
                "description": "SecretEnvSource selects a Secret to populate the environment\nvariables with.\n\nThe contents of the target Secret's Data field will represent the\nkey-value pairs as environment variables."
            },
            "v1SecretKeySelector": {
                "type": "object",
                "properties": {
                    "localObjectReference": {
                        "$ref": "#/components/schemas/v1LocalObjectReference"
                    },
                    "key": {
                        "type": "string",
                        "description": "The key of the secret to select from.  Must be a valid secret key."
                    },
                    "optional": {
                        "type": "boolean",
                        "title": "Specify whether the Secret or its key must be defined\n+optional"
                    }
                },
                "title": "SecretKeySelector selects a key of a Secret.\n+structType=atomic"
            },
            "v1SecretProjection": {
                "type": "object",
                "properties": {
                    "localObjectReference": {
                        "$ref": "#/components/schemas/v1LocalObjectReference"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1KeyToPath"
                        },
                        "title": "items if unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional\n+listType=atomic"
                    },
                    "optional": {
                        "type": "boolean",
                        "title": "optional field specify whether the Secret or its key must be defined\n+optional"
                    }
                },
                "description": "Adapts a secret into a projected volume.\n\nThe contents of the target Secret's Data field will be presented in a\nprojected volume as files using the keys in the Data field as the file names.\nNote that this is identical to a secret volume source without the default\nmode."
            },
            "v1SecretVolumeSource": {
                "type": "object",
                "properties": {
                    "secretName": {
                        "type": "string",
                        "title": "secretName is the name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n+optional"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1KeyToPath"
                        },
                        "title": "items If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional\n+listType=atomic"
                    },
                    "defaultMode": {
                        "type": "integer",
                        "format": "int32",
                        "title": "defaultMode is Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
                    },
                    "optional": {
                        "type": "boolean",
                        "title": "optional field specify whether the Secret or its keys must be defined\n+optional"
                    }
                },
                "description": "Adapts a Secret into a volume.\n\nThe contents of the target Secret's Data field will be presented in a volume\nas files using the keys in the Data field as the file names.\nSecret volumes support ownership management and SELinux relabeling."
            },
            "v1SecurityContext": {
                "type": "object",
                "properties": {
                    "capabilities": {
                        "$ref": "#/components/schemas/v1Capabilities"
                    },
                    "privileged": {
                        "type": "boolean",
                        "title": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
                    },
                    "seLinuxOptions": {
                        "$ref": "#/components/schemas/v1SELinuxOptions"
                    },
                    "windowsOptions": {
                        "$ref": "#/components/schemas/v1WindowsSecurityContextOptions"
                    },
                    "runAsUser": {
                        "type": "string",
                        "format": "int64",
                        "title": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
                    },
                    "runAsGroup": {
                        "type": "string",
                        "format": "int64",
                        "title": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
                    },
                    "runAsNonRoot": {
                        "type": "boolean",
                        "title": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional"
                    },
                    "readOnlyRootFilesystem": {
                        "type": "boolean",
                        "title": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
                    },
                    "allowPrivilegeEscalation": {
                        "type": "boolean",
                        "title": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
                    },
                    "procMount": {
                        "type": "string",
                        "title": "procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
                    },
                    "seccompProfile": {
                        "$ref": "#/components/schemas/v1SeccompProfile"
                    },
                    "appArmorProfile": {
                        "$ref": "#/components/schemas/v1AppArmorProfile"
                    }
                },
                "description": "SecurityContext holds security configuration that will be applied to a container.\nSome fields are present in both SecurityContext and PodSecurityContext.  When both\nare set, the values in SecurityContext take precedence."
            },
            "v1SemanticVersion": {
                "type": "object",
                "properties": {
                    "major": {
                        "type": "string",
                        "format": "int64"
                    },
                    "minor": {
                        "type": "string",
                        "format": "int64"
                    },
                    "patch": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "v1ServiceAccountTokenProjection": {
                "type": "object",
                "properties": {
                    "audience": {
                        "type": "string",
                        "title": "audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver.\n+optional"
                    },
                    "expirationSeconds": {
                        "type": "string",
                        "format": "int64",
                        "title": "expirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes.\n+optional"
                    },
                    "path": {
                        "type": "string",
                        "description": "path is the path relative to the mount point of the file to project the\ntoken into."
                    }
                },
                "description": "ServiceAccountTokenProjection represents a projected service account token\nvolume. This projection can be used to insert a service account token into\nthe pods runtime filesystem for use against APIs (Kubernetes API Server or\notherwise)."
            },
            "v1SetCanaryScale": {
                "type": "object",
                "properties": {
                    "weight": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Weight sets the percentage of replicas the newRS should have\n+optional"
                    },
                    "replicas": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Replicas sets the number of replicas the newRS should have\n+optional"
                    },
                    "matchTrafficWeight": {
                        "type": "boolean",
                        "title": "MatchTrafficWeight cancels out previously set Replicas or Weight, effectively activating SetWeight\n+optional"
                    }
                },
                "title": "SetCanaryScale defines how to scale the newRS without changing traffic weight"
            },
            "v1SetHeaderRoute": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name this is the name of the route to use for the mirroring of traffic this also needs\nto be included in the `spec.strategy.canary.trafficRouting.managedRoutes` field"
                    },
                    "match": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1HeaderRoutingMatch"
                        }
                    }
                },
                "title": "SetHeaderRoute defines the route with specified header name to send 100% of traffic to the canary service"
            },
            "v1SetMirrorRoute": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name this is the name of the route to use for the mirroring of traffic this also needs\nto be included in the `spec.strategy.canary.trafficRouting.managedRoutes` field"
                    },
                    "match": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1RouteMatch"
                        },
                        "title": "Match Contains a list of rules that if mated will mirror the traffic to the services\n+optional"
                    },
                    "percentage": {
                        "type": "integer",
                        "format": "int32",
                        "title": "Services The list of services to mirror the traffic to if the method, path, headers match\nService string `json:\"service\" protobuf:\"bytes,3,opt,name=service\"`\nPercentage What percent of the traffic that matched the rules should be mirrored"
                    }
                }
            },
            "v1Sigv4Config": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "title": "Region is the AWS Region to sign the SigV4 Request"
                    },
                    "profile": {
                        "type": "string",
                        "title": "Profile is the Credential Profile used to sign the SigV4 Request"
                    },
                    "roleArn": {
                        "type": "string",
                        "title": "RoleARN is the IAM role used to sign the SIgV4 Request"
                    }
                }
            },
            "v1SkyWalkingMetric": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string"
                    },
                    "query": {
                        "type": "string"
                    },
                    "interval": {
                        "type": "string"
                    }
                }
            },
            "v1SleepAction": {
                "type": "object",
                "properties": {
                    "seconds": {
                        "type": "string",
                        "format": "int64",
                        "description": "Seconds is the number of seconds to sleep."
                    }
                },
                "description": "SleepAction describes a \"sleep\" action."
            },
            "v1SortOrderOptions": {
                "type": "string",
                "enum": [
                    "SORT_ORDER_NOT_SET",
                    "ASC",
                    "DESC"
                ],
                "default": "SORT_ORDER_NOT_SET"
            },
            "v1StorageOSVolumeSource": {
                "type": "object",
                "properties": {
                    "volumeName": {
                        "type": "string",
                        "description": "volumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace."
                    },
                    "volumeNamespace": {
                        "type": "string",
                        "title": "volumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created.\n+optional"
                    },
                    "fsType": {
                        "type": "string",
                        "title": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional"
                    },
                    "readOnly": {
                        "type": "boolean",
                        "title": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
                    },
                    "secretRef": {
                        "$ref": "#/components/schemas/v1LocalObjectReference"
                    }
                },
                "description": "Represents a StorageOS persistent volume resource."
            },
            "v1StringMatch": {
                "type": "object",
                "properties": {
                    "exact": {
                        "type": "string",
                        "title": "Exact The string must match exactly"
                    },
                    "prefix": {
                        "type": "string",
                        "title": "Prefix The string will be prefixed matched"
                    },
                    "regex": {
                        "type": "string",
                        "title": "Regex The string will be regular expression matched"
                    }
                },
                "title": "StringMatch Used to define what type of matching we will use exact, prefix, or regular expression"
            },
            "v1SuccessPolicy": {
                "type": "object",
                "properties": {
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1SuccessPolicyRule"
                        },
                        "title": "rules represents the list of alternative rules for the declaring the Jobs\nas successful before `.status.succeeded >= .spec.completions`. Once any of the rules are met,\nthe \"SucceededCriteriaMet\" condition is added, and the lingering pods are removed.\nThe terminal state for such a Job has the \"Complete\" condition.\nAdditionally, these rules are evaluated in order; Once the Job meets one of the rules,\nother rules are ignored. At most 20 elements are allowed.\n+listType=atomic"
                    }
                },
                "description": "SuccessPolicy describes when a Job can be declared as succeeded based on the success of some indexes."
            },
            "v1SuccessPolicyRule": {
                "type": "object",
                "properties": {
                    "succeededIndexes": {
                        "type": "string",
                        "description": "succeededIndexes specifies the set of indexes\nwhich need to be contained in the actual set of the succeeded indexes for the Job.\nThe list of indexes must be within 0 to \".spec.completions-1\" and\nmust not contain duplicates. At least one element is required.\nThe indexes are represented as intervals separated by commas.\nThe intervals can be a decimal integer or a pair of decimal integers separated by a hyphen.\nThe number are listed in represented by the first and last element of the series,\nseparated by a hyphen.\nFor example, if the completed indexes are 1, 3, 4, 5 and 7, they are\nrepresented as \"1,3-5,7\".\nWhen this field is null, this field doesn't default to any value\nand is never evaluated at any time.\n\n+optional"
                    },
                    "succeededCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "succeededCount specifies the minimal required size of the actual set of the succeeded indexes\nfor the Job. When succeededCount is used along with succeededIndexes, the check is\nconstrained only to the set of indexes specified by succeededIndexes.\nFor example, given that succeededIndexes is \"1-4\", succeededCount is \"3\",\nand completed indexes are \"1\", \"3\", and \"5\", the Job isn't declared as succeeded\nbecause only \"1\" and \"3\" indexes are considered in that rules.\nWhen this field is null, this doesn't default to any value and\nis never evaluated at any time.\nWhen specified it needs to be a positive integer.\n\n+optional"
                    }
                },
                "description": "SuccessPolicyRule describes rule for declaring a Job as succeeded.\nEach rule must have at least one of the \"succeededIndexes\" or \"succeededCount\" specified."
            },
            "v1SyncStatusCounts": {
                "type": "object",
                "properties": {
                    "synced": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "outOfSync": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "unknown": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "v1Sysctl": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name of a property to set"
                    },
                    "value": {
                        "type": "string",
                        "title": "Value of a property to set"
                    }
                },
                "title": "Sysctl defines a kernel parameter to be set"
            },
            "v1TCPSocketAction": {
                "type": "object",
                "properties": {
                    "port": {
                        "$ref": "#/components/schemas/intstrIntOrString"
                    },
                    "host": {
                        "type": "string",
                        "title": "Optional: Host name to connect to, defaults to the pod IP.\n+optional"
                    }
                },
                "title": "TCPSocketAction describes an action based on opening a socket"
            },
            "v1TagMap": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalItems": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageItemCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "v1TemplateService": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name of the service generated by the experiment"
                    }
                }
            },
            "v1Time": {
                "type": "object",
                "properties": {
                    "seconds": {
                        "type": "string",
                        "format": "int64",
                        "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive."
                    },
                    "nanos": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context."
                    }
                },
                "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false"
            },
            "v1Toleration": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "title": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.\n+optional"
                    },
                    "operator": {
                        "type": "string",
                        "title": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.\n+optional"
                    },
                    "value": {
                        "type": "string",
                        "title": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.\n+optional"
                    },
                    "effect": {
                        "type": "string",
                        "title": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n+optional"
                    },
                    "tolerationSeconds": {
                        "type": "string",
                        "format": "int64",
                        "title": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.\n+optional"
                    }
                },
                "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>."
            },
            "v1TopApplicationPhaseStats": {
                "type": "object",
                "properties": {
                    "applicationName": {
                        "type": "string"
                    },
                    "totalDeployments": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "deploymentRate": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "succeeded": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "failed": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "agentIdentifier": {
                        "type": "string",
                        "description": "Agent identifier for entity."
                    }
                }
            },
            "v1TopApplicationPhaseStatsList": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1TopApplicationPhaseStats"
                        }
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "v1TopologySpreadConstraint": {
                "type": "object",
                "properties": {
                    "maxSkew": {
                        "type": "integer",
                        "format": "int32",
                        "description": "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nThe global minimum is the minimum number of matching pods in an eligible domain\nor zero if the number of eligible domains is less than MinDomains.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 2/2/1:\nIn this case, the global minimum is 1.\n+-------+-------+-------+\n| zone1 | zone2 | zone3 |\n+-------+-------+-------+\n|  P P  |  P P  |   P   |\n+-------+-------+-------+\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;\nscheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed."
                    },
                    "topologyKey": {
                        "type": "string",
                        "description": "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each <key, value> as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nWe define a domain as a particular instance of a topology.\nAlso, we define an eligible domain as a domain whose nodes meet the requirements of\nnodeAffinityPolicy and nodeTaintsPolicy.\ne.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology.\nAnd, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology.\nIt's a required field."
                    },
                    "whenUnsatisfiable": {
                        "type": "string",
                        "description": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n+-------+-------+-------+\n| zone1 | zone2 | zone3 |\n+-------+-------+-------+\n| P P P |   P   |   P   |\n+-------+-------+-------+\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field."
                    },
                    "labelSelector": {
                        "$ref": "#/components/schemas/v1LabelSelector"
                    },
                    "minDomains": {
                        "type": "integer",
                        "format": "int32",
                        "description": "MinDomains indicates a minimum number of eligible domains.\nWhen the number of eligible domains with matching topology keys is less than minDomains,\nPod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed.\nAnd when the number of eligible domains with matching topology keys equals or greater than minDomains,\nthis value has no effect on scheduling.\nAs a result, when the number of eligible domains is less than minDomains,\nscheduler won't schedule more than maxSkew Pods to those domains.\nIf value is nil, the constraint behaves as if MinDomains is equal to 1.\nValid values are integers greater than 0.\nWhen value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same\nlabelSelector spread as 2/2/2:\n+-------+-------+-------+\n| zone1 | zone2 | zone3 |\n+-------+-------+-------+\n|  P P  |  P P  |  P P  |\n+-------+-------+-------+\nThe number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.\nIn this situation, new pod with the same labelSelector cannot be scheduled,\nbecause computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,\nit will violate MaxSkew.\n+optional"
                    },
                    "nodeAffinityPolicy": {
                        "type": "string",
                        "description": "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod topology spread skew. Options are:\n- Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.\n- Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\nIf this value is nil, the behavior is equivalent to the Honor policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.\n+optional"
                    },
                    "nodeTaintsPolicy": {
                        "type": "string",
                        "description": "NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew. Options are:\n- Honor: nodes without taints, along with tainted nodes for which the incoming pod\nhas a toleration, are included.\n- Ignore: node taints are ignored. All nodes are included.\n\nIf this value is nil, the behavior is equivalent to the Ignore policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.\n+optional"
                    },
                    "matchLabelKeys": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be calculated. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are ANDed with labelSelector\nto select the group of existing pods over which spreading will be calculated\nfor the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nMatchLabelKeys cannot be set when LabelSelector isn't set.\nKeys that don't exist in the incoming pod labels will\nbe ignored. A null or empty list means only match against labelSelector.\n\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).\n+listType=atomic\n+optional"
                    }
                },
                "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology."
            },
            "v1TypedLocalObjectReference": {
                "type": "object",
                "properties": {
                    "apiGroup": {
                        "type": "string",
                        "title": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.\n+optional"
                    },
                    "kind": {
                        "type": "string",
                        "title": "Kind is the type of resource being referenced"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name is the name of resource being referenced"
                    }
                },
                "description": "TypedLocalObjectReference contains enough information to let you locate the\ntyped referenced object inside the same namespace.\n---\nNew uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.\n 1. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular\n    restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\".\n    Those cannot be well described when embedded.\n 2. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.\n 3. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity\n    during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple\n    and the version of the actual struct is irrelevant.\n 4. We cannot easily change it.  Because this type is embedded in many locations, updates to this type\n    will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.\n\nInstead of using this type, create a locally provided and used type that is well-focused on your reference.\nFor example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .\n+structType=atomic"
            },
            "v1TypedObjectReference": {
                "type": "object",
                "properties": {
                    "apiGroup": {
                        "type": "string",
                        "title": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.\n+optional"
                    },
                    "kind": {
                        "type": "string",
                        "title": "Kind is the type of resource being referenced"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name is the name of resource being referenced"
                    },
                    "namespace": {
                        "type": "string",
                        "title": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.\n+featureGate=CrossNamespaceVolumeDataSource\n+optional"
                    }
                },
                "title": "TypedObjectReference contains enough information to let you locate the typed referenced object"
            },
            "v1UniqueMessage": {
                "type": "object",
                "properties": {
                    "unique": {
                        "type": "boolean"
                    }
                }
            },
            "v1User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                }
            },
            "v1VersionList": {
                "type": "object",
                "properties": {
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1SemanticVersion"
                        }
                    },
                    "totalPages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "totalItems": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageItemCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageIndex": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "v1VersionUpgradeResponse": {
                "type": "object",
                "properties": {
                    "ShouldUpgrade": {
                        "type": "boolean",
                        "description": "Indicates whether agent has an upgrade available or not"
                    },
                    "AgentImageTag": {
                        "type": "string",
                        "description": "Docker image tag for agent"
                    },
                    "ArgoCDImage": {
                        "type": "string",
                        "description": "Latest ArgoCDImage"
                    },
                    "FlamingoArgoCDImage": {
                        "type": "string",
                        "description": "Latest FlamingoArgoCDImage"
                    },
                    "HAProxyImage": {
                        "type": "string",
                        "description": "Latest HAProxyImage"
                    },
                    "RedisImage": {
                        "type": "string",
                        "description": "Latest redis image"
                    },
                    "SopsImage": {
                        "type": "string",
                        "description": "Latest sopsInstaller image"
                    }
                }
            },
            "v1Volume": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "name of the volume.\nMust be a DNS_LABEL and unique within the pod.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                    },
                    "volumeSource": {
                        "$ref": "#/components/schemas/v1VolumeSource"
                    }
                },
                "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod."
            },
            "v1VolumeDevice": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "name must match the name of a persistentVolumeClaim in the pod"
                    },
                    "devicePath": {
                        "type": "string",
                        "description": "devicePath is the path inside of the container that the device will be mapped to."
                    }
                },
                "description": "volumeDevice describes a mapping of a raw block device within a container."
            },
            "v1VolumeMount": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "This must match the Name of a Volume."
                    },
                    "readOnly": {
                        "type": "boolean",
                        "title": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.\n+optional"
                    },
                    "recursiveReadOnly": {
                        "type": "string",
                        "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.\n\n+featureGate=RecursiveReadOnlyMounts\n+optional"
                    },
                    "mountPath": {
                        "type": "string",
                        "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'."
                    },
                    "subPath": {
                        "type": "string",
                        "title": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).\n+optional"
                    },
                    "mountPropagation": {
                        "type": "string",
                        "title": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).\n+optional"
                    },
                    "subPathExpr": {
                        "type": "string",
                        "title": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.\n+optional"
                    }
                },
                "description": "VolumeMount describes a mounting of a Volume within a container."
            },
            "v1VolumeProjection": {
                "type": "object",
                "properties": {
                    "secret": {
                        "$ref": "#/components/schemas/v1SecretProjection"
                    },
                    "downwardAPI": {
                        "$ref": "#/components/schemas/v1DownwardAPIProjection"
                    },
                    "configMap": {
                        "$ref": "#/components/schemas/v1ConfigMapProjection"
                    },
                    "serviceAccountToken": {
                        "$ref": "#/components/schemas/v1ServiceAccountTokenProjection"
                    },
                    "clusterTrustBundle": {
                        "$ref": "#/components/schemas/v1ClusterTrustBundleProjection"
                    }
                },
                "description": "Projection that may be projected along with other supported volume types.\nExactly one of these fields must be set."
            },
            "v1VolumeResourceRequirements": {
                "type": "object",
                "properties": {
                    "limits": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/resourceQuantity"
                        },
                        "title": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
                    },
                    "requests": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/resourceQuantity"
                        },
                        "title": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
                    }
                },
                "description": "VolumeResourceRequirements describes the storage resource requirements for a volume."
            },
            "v1VolumeSource": {
                "type": "object",
                "properties": {
                    "hostPath": {
                        "$ref": "#/components/schemas/v1HostPathVolumeSource"
                    },
                    "emptyDir": {
                        "$ref": "#/components/schemas/v1EmptyDirVolumeSource"
                    },
                    "gcePersistentDisk": {
                        "$ref": "#/components/schemas/v1GCEPersistentDiskVolumeSource"
                    },
                    "awsElasticBlockStore": {
                        "$ref": "#/components/schemas/v1AWSElasticBlockStoreVolumeSource"
                    },
                    "gitRepo": {
                        "$ref": "#/components/schemas/v1GitRepoVolumeSource"
                    },
                    "secret": {
                        "$ref": "#/components/schemas/v1SecretVolumeSource"
                    },
                    "nfs": {
                        "$ref": "#/components/schemas/v1NFSVolumeSource"
                    },
                    "iscsi": {
                        "$ref": "#/components/schemas/v1ISCSIVolumeSource"
                    },
                    "glusterfs": {
                        "$ref": "#/components/schemas/v1GlusterfsVolumeSource"
                    },
                    "persistentVolumeClaim": {
                        "$ref": "#/components/schemas/v1PersistentVolumeClaimVolumeSource"
                    },
                    "rbd": {
                        "$ref": "#/components/schemas/v1RBDVolumeSource"
                    },
                    "flexVolume": {
                        "$ref": "#/components/schemas/v1FlexVolumeSource"
                    },
                    "cinder": {
                        "$ref": "#/components/schemas/v1CinderVolumeSource"
                    },
                    "cephfs": {
                        "$ref": "#/components/schemas/v1CephFSVolumeSource"
                    },
                    "flocker": {
                        "$ref": "#/components/schemas/v1FlockerVolumeSource"
                    },
                    "downwardAPI": {
                        "$ref": "#/components/schemas/v1DownwardAPIVolumeSource"
                    },
                    "fc": {
                        "$ref": "#/components/schemas/v1FCVolumeSource"
                    },
                    "azureFile": {
                        "$ref": "#/components/schemas/v1AzureFileVolumeSource"
                    },
                    "configMap": {
                        "$ref": "#/components/schemas/v1ConfigMapVolumeSource"
                    },
                    "vsphereVolume": {
                        "$ref": "#/components/schemas/v1VsphereVirtualDiskVolumeSource"
                    },
                    "quobyte": {
                        "$ref": "#/components/schemas/v1QuobyteVolumeSource"
                    },
                    "azureDisk": {
                        "$ref": "#/components/schemas/v1AzureDiskVolumeSource"
                    },
                    "photonPersistentDisk": {
                        "$ref": "#/components/schemas/v1PhotonPersistentDiskVolumeSource"
                    },
                    "projected": {
                        "$ref": "#/components/schemas/v1ProjectedVolumeSource"
                    },
                    "portworxVolume": {
                        "$ref": "#/components/schemas/v1PortworxVolumeSource"
                    },
                    "scaleIO": {
                        "$ref": "#/components/schemas/v1ScaleIOVolumeSource"
                    },
                    "storageos": {
                        "$ref": "#/components/schemas/v1StorageOSVolumeSource"
                    },
                    "csi": {
                        "$ref": "#/components/schemas/v1CSIVolumeSource"
                    },
                    "ephemeral": {
                        "$ref": "#/components/schemas/v1EphemeralVolumeSource"
                    },
                    "image": {
                        "$ref": "#/components/schemas/v1ImageVolumeSource"
                    }
                },
                "description": "Represents the source of a volume to mount.\nOnly one of its members may be specified."
            },
            "v1VsphereVirtualDiskVolumeSource": {
                "type": "object",
                "properties": {
                    "volumePath": {
                        "type": "string",
                        "title": "volumePath is the path that identifies vSphere volume vmdk"
                    },
                    "fsType": {
                        "type": "string",
                        "title": "fsType is filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional"
                    },
                    "storagePolicyName": {
                        "type": "string",
                        "title": "storagePolicyName is the storage Policy Based Management (SPBM) profile name.\n+optional"
                    },
                    "storagePolicyID": {
                        "type": "string",
                        "title": "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.\n+optional"
                    }
                },
                "description": "Represents a vSphere volume resource."
            },
            "v1WavefrontMetric": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "title": "Address is the HTTP address and port of the wavefront server"
                    },
                    "query": {
                        "type": "string",
                        "title": "Query is a raw wavefront query to perform"
                    }
                },
                "title": "WavefrontMetric defines the wavefront query to perform canary analysis"
            },
            "v1WebMetric": {
                "type": "object",
                "properties": {
                    "method": {
                        "type": "string",
                        "title": "Method is the method of the web metric (empty defaults to GET)"
                    },
                    "url": {
                        "type": "string",
                        "title": "URL is the address of the web metric"
                    },
                    "headers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1WebMetricHeader"
                        },
                        "title": "+patchMergeKey=key\n+patchStrategy=merge\nHeaders are HTTP headers to use in the request"
                    },
                    "body": {
                        "type": "string",
                        "title": "Body is the body of the web metric (must be POST/PUT)"
                    },
                    "timeoutSeconds": {
                        "type": "string",
                        "format": "int64",
                        "title": "TimeoutSeconds is the timeout for the request in seconds (default: 10)"
                    },
                    "jsonPath": {
                        "type": "string",
                        "title": "JSONPath is a JSON Path to use as the result variable (default: \"{$}\")"
                    },
                    "insecure": {
                        "type": "boolean",
                        "title": "Insecure skips host TLS verification"
                    },
                    "jsonBody": {
                        "type": "string",
                        "format": "byte",
                        "title": "+kubebuilder:validation:Schemaless\n+kubebuilder:pruning:PreserveUnknownFields\n+kubebuilder:validation:Type=object\nJSONBody is the body of the web metric in a json format (method must be POST/PUT)"
                    }
                }
            },
            "v1WebMetricHeader": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "v1WeightedPodAffinityTerm": {
                "type": "object",
                "properties": {
                    "weight": {
                        "type": "integer",
                        "format": "int32",
                        "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100."
                    },
                    "podAffinityTerm": {
                        "$ref": "#/components/schemas/v1PodAffinityTerm"
                    }
                },
                "title": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)"
            },
            "v1WindowsSecurityContextOptions": {
                "type": "object",
                "properties": {
                    "gmsaCredentialSpecName": {
                        "type": "string",
                        "title": "GMSACredentialSpecName is the name of the GMSA credential spec to use.\n+optional"
                    },
                    "gmsaCredentialSpec": {
                        "type": "string",
                        "title": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.\n+optional"
                    },
                    "runAsUserName": {
                        "type": "string",
                        "title": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional"
                    },
                    "hostProcess": {
                        "type": "boolean",
                        "title": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.\n+optional"
                    }
                },
                "description": "WindowsSecurityContextOptions contain Windows-specific options and credentials."
            }
        }
    }
}
